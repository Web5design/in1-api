{"ts":1376130961126,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1376131145880,"patch":[[{"diffs":[[1,"var port = process.env.PORT || 4000,\r\n    app = require('./app').init(port),\r\n    img = require('./image'),\r\n    utils = require('./utils'),\r\n    conf = require('./conf'),\r\n    request = require('request');\r\n    \r\n/* default route */\r\napp.get('/', function(req,res){\r\n    \r\n    var urlToFetch = req.query[\"url\"],\r\n        apiKey = req.query[\"apiKey\"],\r\n        h = req.query.h,\r\n        w = req.query.w,\r\n        d = req.query.d,\r\n        q = req.query.q,\r\n        namedResolution = req.query.size,\r\n        wxh = req.query.wxh,\r\n        fresh = req.query.fresh||false;\r\n\r\n    if (!urlToFetch) {\r\n        console.log(\"show home page\");\r\n        res.render(\"index\");\r\n    }\r\n    else {\r\n        \r\n        urlToFetch = utils.fixUrl(urlToFetch,req.headers.host);\r\n        img.getImage(req,res,urlToFetch,paidServiceParams(h,w,q,d,\"browser\",namedResolution,wxh));\r\n    }\r\n});\r\n\r\nvar doResize = function(h,w){\r\n  \r\n    if ((h==75&&w==75)||(h==150&&w==150)||(h==600)) {\r\n        return false;\r\n    }\r\n    else {    \r\n        return true;\r\n    }\r\n    \r\n};\r\n\r\n/* given a cached url, redirect to proxy image */\r\napp.get('/cache', function(req,res,next){\r\n    console.log(\"cached\");\r\n    \r\n    var url = url;\r\n    \r\n     request.get({url:'https://api.parse.com/1/classes/Capture',json:true,qs:{where:JSON.stringify({url:url})},headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey}},function(e,r,b){\r\n        if (b.results[0]) {\r\n            var uuid =  b.results[0].uuid;\r\n            res.redirect(\"/\"+uuid);\r\n        }\r\n        else {\r\n            next();\r\n        }\r\n    });\r\n});\r\n\r\napp.get('/:id/:size?', function(req,res,next){\r\n    console.log(\"imageshack proxy\");\r\n    \r\n    var id = req.params.id;\r\n    var size = req.params.size||'full'; //mini,thumb,mobile,large,full\r\n    \r\n    request.get({url:'https://api.parse.com/1/classes/Capture/'+id,json:true,headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey}},function(e,r,b){\r\n        if (b) {\r\n            var item = b;\r\n            request({url:item.link}).pipe(res);\r\n        }\r\n    });\r\n});\r\n\r\n\r\n\r\napp.get('/preview', function(req, res){\r\n    res.render('preview');\r\n});\r\n\r\napp.get('/api', function(req, res){\r\n    res.render('api');\r\n});\r\n\r\napp.get('/proxy', function(req, res){\r\n    if (req.param(\"purl\")) {\r\n        request(unescape(req.param(\"purl\")), function (error, response, body) {\r\n\t\t\tif (!error && response.statusCode == 200) {\r\n\t\t\t\tres.send(body);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tres.json({error:\"Bad URL request.\"});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n    else {\r\n        res.json({error:\"URL is required.\"});\r\n    }\r\n});\r\n\r\n/* The 404 Route (ALWAYS Keep this as the last route) */\r\napp.get('/*', function(req, res){\r\n    res.render('404.ejs');\r\n});\r\n\r\n"]],"start1":0,"start2":0,"length1":0,"length2":2772}]],"length":2772,"saved":false}
{"ts":1376131602568,"patch":[[{"diffs":[[0,"),\r\n"],[-1,"    img = require('./image'),\r\n"],[0,"    "]],"start1":74,"start2":74,"length1":39,"length2":8}]],"length":2741,"saved":false}
{"ts":1376131658567,"patch":[[{"diffs":[[0,"ry.w"],[-1,",\r\n        d = req.query.d,\r\n        q = req.query.q,\r\n        namedResolution = req.query.size,\r\n        wxh = req.query.wxh,\r\n        fresh = req.query.fresh||false"],[0,""],[1,""],[0,";\r\n\r"]],"start1":367,"start2":367,"length1":174,"length2":8},{"diffs":[[0,"        "],[1,"//"],[0,"img.getI"]],"start1":564,"start2":564,"length1":16,"length2":18},{"diffs":[[0,"\r\n\r\n"],[-1,"var doResize = function(h,w){\r\n  \r\n    if ((h==75&&w==75)||(h==150&&w==150)||(h==600)) {\r\n        return false;\r\n    }\r\n    else {    \r\n        return true;\r\n    }\r\n    \r\n};\r\n\r\n"],[0,"/* g"]],"start1":676,"start2":676,"length1":185,"length2":8}]],"length":2400,"saved":false}
