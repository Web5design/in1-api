{"ts":1376130961126,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1376131145880,"patch":[[{"diffs":[[1,"var port = process.env.PORT || 4000,\r\n    app = require('./app').init(port),\r\n    img = require('./image'),\r\n    utils = require('./utils'),\r\n    conf = require('./conf'),\r\n    request = require('request');\r\n    \r\n/* default route */\r\napp.get('/', function(req,res){\r\n    \r\n    var urlToFetch = req.query[\"url\"],\r\n        apiKey = req.query[\"apiKey\"],\r\n        h = req.query.h,\r\n        w = req.query.w,\r\n        d = req.query.d,\r\n        q = req.query.q,\r\n        namedResolution = req.query.size,\r\n        wxh = req.query.wxh,\r\n        fresh = req.query.fresh||false;\r\n\r\n    if (!urlToFetch) {\r\n        console.log(\"show home page\");\r\n        res.render(\"index\");\r\n    }\r\n    else {\r\n        \r\n        urlToFetch = utils.fixUrl(urlToFetch,req.headers.host);\r\n        img.getImage(req,res,urlToFetch,paidServiceParams(h,w,q,d,\"browser\",namedResolution,wxh));\r\n    }\r\n});\r\n\r\nvar doResize = function(h,w){\r\n  \r\n    if ((h==75&&w==75)||(h==150&&w==150)||(h==600)) {\r\n        return false;\r\n    }\r\n    else {    \r\n        return true;\r\n    }\r\n    \r\n};\r\n\r\n/* given a cached url, redirect to proxy image */\r\napp.get('/cache', function(req,res,next){\r\n    console.log(\"cached\");\r\n    \r\n    var url = url;\r\n    \r\n     request.get({url:'https://api.parse.com/1/classes/Capture',json:true,qs:{where:JSON.stringify({url:url})},headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey}},function(e,r,b){\r\n        if (b.results[0]) {\r\n            var uuid =  b.results[0].uuid;\r\n            res.redirect(\"/\"+uuid);\r\n        }\r\n        else {\r\n            next();\r\n        }\r\n    });\r\n});\r\n\r\napp.get('/:id/:size?', function(req,res,next){\r\n    console.log(\"imageshack proxy\");\r\n    \r\n    var id = req.params.id;\r\n    var size = req.params.size||'full'; //mini,thumb,mobile,large,full\r\n    \r\n    request.get({url:'https://api.parse.com/1/classes/Capture/'+id,json:true,headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey}},function(e,r,b){\r\n        if (b) {\r\n            var item = b;\r\n            request({url:item.link}).pipe(res);\r\n        }\r\n    });\r\n});\r\n\r\n\r\n\r\napp.get('/preview', function(req, res){\r\n    res.render('preview');\r\n});\r\n\r\napp.get('/api', function(req, res){\r\n    res.render('api');\r\n});\r\n\r\napp.get('/proxy', function(req, res){\r\n    if (req.param(\"purl\")) {\r\n        request(unescape(req.param(\"purl\")), function (error, response, body) {\r\n\t\t\tif (!error && response.statusCode == 200) {\r\n\t\t\t\tres.send(body);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tres.json({error:\"Bad URL request.\"});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n    else {\r\n        res.json({error:\"URL is required.\"});\r\n    }\r\n});\r\n\r\n/* The 404 Route (ALWAYS Keep this as the last route) */\r\napp.get('/*', function(req, res){\r\n    res.render('404.ejs');\r\n});\r\n\r\n"]],"start1":0,"start2":0,"length1":0,"length2":2772}]],"length":2772,"saved":false}
{"ts":1376131602568,"patch":[[{"diffs":[[0,"),\r\n"],[-1,"    img = require('./image'),\r\n"],[0,"    "]],"start1":74,"start2":74,"length1":39,"length2":8}]],"length":2741,"saved":false}
{"ts":1376131658567,"patch":[[{"diffs":[[0,"ry.w"],[-1,",\r\n        d = req.query.d,\r\n        q = req.query.q,\r\n        namedResolution = req.query.size,\r\n        wxh = req.query.wxh,\r\n        fresh = req.query.fresh||false"],[0,""],[1,""],[0,";\r\n\r"]],"start1":367,"start2":367,"length1":174,"length2":8},{"diffs":[[0,"        "],[1,"//"],[0,"img.getI"]],"start1":564,"start2":564,"length1":16,"length2":18},{"diffs":[[0,"\r\n\r\n"],[-1,"var doResize = function(h,w){\r\n  \r\n    if ((h==75&&w==75)||(h==150&&w==150)||(h==600)) {\r\n        return false;\r\n    }\r\n    else {    \r\n        return true;\r\n    }\r\n    \r\n};\r\n\r\n"],[0,"/* g"]],"start1":676,"start2":676,"length1":185,"length2":8}]],"length":2400,"saved":false}
{"ts":1376131797563,"patch":[[{"diffs":[[0,"\n   "],[-1," \r\n    var urlToFetch = req.query[\"url\"],\r\n        apiKey = req.query[\"apiKey\"],\r\n        h = req.query.h,\r\n        w = req.query.w;\r\n\r\n    if (!urlToFetch) {\r\n        console.log(\"show home page\");\r\n        res.render(\"index\");\r\n    }\r\n    else {\r\n        \r\n        urlToFetch = utils.fixUrl(urlToFetch,req.headers.host);\r\n        //img.getImage(req,res,urlToFetch,paidServiceParams(h,w,q,d,\"browser\",namedResolution,wxh));\r\n    }"],[1,"res.render(\"index\");"],[0,"\r\n})"]],"start1":236,"start2":236,"length1":439,"length2":28},{"diffs":[[0,"req,res,next){\r\n"],[1,""],[0,"    console.log("]],"start1":347,"start2":347,"length1":32,"length2":32},{"diffs":[[0,"\"cached\");\r\n"],[-1,"    \r\n"],[0,"    var url "]],"start1":379,"start2":379,"length1":30,"length2":24}]],"length":1983,"saved":false}
{"ts":1376131975453,"patch":[[{"diffs":[[0,"\n});\r\n\r\n"],[1,"app.get('/fetch', function(req,res){\r\n    \r\n   var url = req.query.url;\r\n   \r\n   \r\n   \r\n    \r\n   res.render(\"index\");\r\n});\r\n\r\n\r\n"],[0,"/* given"]],"start1":261,"start2":261,"length1":16,"length2":144}]],"length":2111,"saved":false}
{"ts":1376134091508,"patch":[[{"diffs":[[0,"\r\n\r\n"],[-1,"app.get('/fetch', function(req,res){\r\n    \r\n   var url = req.query.url;\r\n   \r\n   \r\n   \r\n    \r\n   res.render(\"index\");"],[1,"// get basic media and social media data from a url\r\napp.get('/harvest', function(req,res){ \r\n    \r\n   var url = req.query.url;\r\n   \r\n   var url = req.param(\"url\"),\r\n    \ttitle,\r\n\t\tdesc,\r\n\t\timage,\r\n\t\timages=[],\r\n\t\ttags=[],\r\n\t\ttw,fb,rss,li,pin,yt,\r\n\t\ttitleFound=0,\r\n\t\tdescFound=0,\r\n\t\timgFound=0;\r\n\t\r\n\tif (url) {\r\n\t\r\n\t\tvar sURL = unescape(url);\r\n\t\t\r\n\t\trequest({url:sURL,followRedirect:true,maxRedirects:1}, function (error, response, body) {\r\n\t\t\r\n\t\t\tif (!error) {\r\n\t\t\t\t$h = $(\"<form>\"+body+\"</form>\");\r\n\t\t\t\t\r\n\t\t\t\t// find opengraph\r\n\t\t\t\t$.each($h.find('meta[property^=\"og:\"]'),function(idx,item){\r\n\t\t\t\t\t$item = $(item);\r\n\t\t\t\t\tproperty = $item.attr(\"property\");\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (property==\"og:image\") {\r\n\t\t\t\t\t\timage = $item.attr(\"content\");\r\n\t\t\t\t\t\t//if (imgSrc.indexOf('//')==-1) { // prepend baseurl for relative images\t\t\t\t\t\t\r\n\t\t\t\t\t\t//\timgSrc=baseUrl+imgSrc;\r\n\t\t\t\t\t\t//}\r\n\t\t\t\t\t\timages.push(image);\r\n\t\t\t\t\t\timgFound = 1;\r\n\t\t\t\t\t}\t\t\t\r\n\t\t\t\t\telse if (property==\"og:title\") {\r\n\t\t\t\t\t\ttitle = $item.attr(\"content\");\r\n\t\t\t\t\t\ttitleFound=1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (property==\"og:description\") {\r\n\t\t\t\t\t\tdesc = $item.attr(\"content\");\r\n\t\t\t\t\t\tdescFound=1;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\t\r\n\t\t\t\t\r\n\t\t\t\tif (titleFound==0)\r\n\t\t\t\t{\r\n\t\t\t\t\t//var matches = body.match(/<title>\\s*(.+?)<\\/title>/);\r\n\t\t\t\t\tvar matches = body.match(/<title>\\s*(.+?)\\s*<\\/title>/);\r\n\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\ttitle = matches[1];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (imgFound===0) {\r\n\t\t\t\t\timage = $h.find('link[rel=\"image_src\"],link[rel=\"apple-touch-icon\"],link[rel=\"shortcut icon\"]').attr('href');\r\n\t\t\t\t\tif (image && image.indexOf('//')==-1) { // prepend baseurl for relative images\t\t\t\t\t\t\r\n\t\t\t\t\t\timage = baseUrl+image;\r\n\t\t\t\t\t}\r\n\t\t\t\t\timages.push(image);\r\n\t\t\t\t\timgFound = 1;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (descFound==0)\r\n\t\t\t\t{\r\n\t\t\t\t\t$.each($h.find('meta[name=\"description\"]'),function(idx,item){\r\n\t\t\t\t\t\tdesc = $(item).attr(\"content\");\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$.each($h.find('meta[name=\"keywords\"]'),function(idx,item){\r\n\t\t\t\t\ttags.push($(item).attr(\"content\"));\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t// find images\r\n\t\t\t\t//oURL = URL.parse(sURL);\r\n\t\t\t\tvar baseUrl = response.request.uri.href;\r\n\t\t\t\t\r\n\t\t\t\timgs = $h.find('img[src$=\"png\"],img[src$=\"jpg\"]');\r\n\t\t\t\t$.each(imgs,function(idx,item){\r\n\t\t\t\t\tsrc=$(item).attr(\"src\");\r\n\t\t\t\t\t//console.log(\"image src:\"+src);\r\n\t\t\t\t\t//src = imgs[i].getAttribute(\"src\");\r\n\t\t\t\t\tif (src.indexOf('//')==-1) { // prepend baseurl for relative images\t\t\t\t\t\t\r\n\t\t\t\t\t\tsrc=baseUrl+src;\r\n\t\t\t\t\t\t//console.log(\"image src put http:\"+src);\r\n\t\t\t\t\t}\r\n\t\t\t\t\timages.push(src);\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t// find social usernames\r\n\t\t\t\t$.each($h.find('a[href*=\"twitter.com/\"]:not(a[href*=\"status\"])'),function(idx,item){\r\n\t\t\t\t\ttwUrl = $(item).attr(\"href\").replace('/#!','');\r\n\t\t\t\t\ttwUrl = URL.parse(twUrl,true,true);\r\n\t\t\t\t\tif (twUrl.query && twUrl.query.via){\r\n\t\t\t\t\t\ttw = twUrl.query.via;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (twUrl.query && twUrl.query.screen_name){\r\n\t\t\t\t\t\ttw = twUrl.query.screen_name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttw = twUrl.pathname;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//console.log(\"tw------\"+twUrl.query.via);\r\n\t\t\t\t\tif (tw===\"\" || tw === null || typeof tw === \"undefined\") {\r\n\t\t\t\t\t\ttw = \"in1_\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttw = \"@\"+tw.replace(\"/\",\"\");\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t$.each($h.find('a[href*=\"facebook.com/\"]:not(a[href*=\"developers\"]):lt(1)'),function(idx,item){\r\n\t\t\t\t\tfbPagesUrl = $(item).attr(\"href\");\r\n\t\t\t\t\tfbPagesUrl = URL.parse(fbPagesUrl);\r\n\t\t\t\t\tfb = fbPagesUrl.pathname;\r\n\t\t\t\t\t//fb = fb.replace(\"/pages\",\"\");\r\n\t\t\t\t\tfb = fb.replace(\"/\",\"\");\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t$.each($h.find('a[href*=\"linkedin.com/\"]:lt(1)'),function(idx,item){\r\n\t\t\t\t\tliUrl = $(item).attr(\"href\");\r\n\t\t\t\t\tliUrl = URL.parse(liUrl);\r\n\t\t\t\t\tli = liUrl.pathname;\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t$.each($h.find('a[href*=\"feeds.feedburner.com\"]:lt(1)'),function(idx,item){\r\n\t\t\t\t\trssUrl = $(item).attr(\"href\");\r\n\t\t\t\t\t//rssUrl = URL.parse(rssUrl);\r\n\t\t\t\t\t//rss = rssUrl.pathname;\r\n\t\t\t\t\trss = rssUrl;\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t$.each($h.find('a[href*=\"pinterest.com/\"]:not([href*=\"pin/create\"])'),function(idx,item){\r\n\t\t\t\t\tpinUrl = $(item).attr(\"href\");\r\n\t\t\t\t\tpinUrl = URL.parse(pinUrl);\r\n\t\t\t\t\tpin = pinUrl.pathname;\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t$.each($h.find('a[href*=\"youtube.com/user/\"]'),function(idx,item){\r\n\t\t\t\t\tytUrl = $(item).attr(\"href\");\r\n\t\t\t\t\tytUrl = URL.parse(ytUrl);\r\n\t\t\t\t\tyt = ytUrl.pathname;\r\n\t\t\t\t\tyt = yt.replace(\"/user\",\"\");\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//TODO: google+\r\n\t\r\n\t\t\t\t$h = null;\r\n\t\t\t\tres.json({title:title,desc:desc,images:images,tags:tags,tw:tw,facebook:fb,youtube:yt,linkedin:li,rss:rss,pinterest:pin});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tres.json({error:'problem harvesting:'+url});\r\n\t\t\t}\r\n\t\t});\t\r\n\t\r\n\t}\r\n\telse {\r\n\t\tres.json({error:'url is required'});\r\n\t}"],[0,"\r\n})"]],"start1":265,"start2":265,"length1":125,"length2":4580}]],"length":6566,"saved":false}
{"ts":1376134136497,"patch":[[{"diffs":[[0,"'./conf'),\r\n"],[1,"    window = require(\"jsdom\").jsdom().createWindow()\r\n    $ = require(\"jquery\")\r\n"],[0,"    request "]],"start1":130,"start2":130,"length1":24,"length2":105},{"diffs":[[0,".url"],[-1,";\r\n   \r\n   var url = req.param(\"url\")"],[0,",\r\n "]],"start1":472,"start2":472,"length1":45,"length2":8}]],"length":6610,"saved":false}
{"ts":1376134140278,"patch":[[{"diffs":[[0,"Window()"],[1,","],[0,"\r\n    $ "]],"start1":186,"start2":186,"length1":16,"length2":17},{"diffs":[[0,"jquery\")"],[1,","],[0,"\r\n    re"]],"start1":214,"start2":214,"length1":16,"length2":17}]],"length":6612,"saved":false}
{"ts":1376134159308,"patch":[[{"diffs":[[0,"ire("],[-1,"\""],[1,"'"],[0,"jsdom"],[-1,"\""],[1,"'"],[0,").js"]],"start1":159,"start2":159,"length1":15,"length2":15},{"diffs":[[0,"ire("],[-1,"\""],[1,"'"],[0,"jquery"],[-1,"\""],[1,"'"],[0,"),\r\n"]],"start1":209,"start2":209,"length1":16,"length2":16}]],"length":6612,"saved":false}
{"ts":1376134336438,"patch":[[{"diffs":[[0,"    "],[-1,"\t"],[0,"title,\r\n"],[-1,"\t"],[0,"\tdesc,\r\n"],[-1,"\t"],[0,"\tima"]],"start1":481,"start2":481,"length1":27,"length2":24},{"diffs":[[0,"image,\r\n"],[-1,"\t"],[0,"\timages="]],"start1":502,"start2":502,"length1":17,"length2":16},{"diffs":[[0,"es=[],\r\n"],[-1,"\t"],[0,"\ttags=[]"]],"start1":515,"start2":515,"length1":17,"length2":16},{"diffs":[[0,"gs=[],\r\n"],[-1,"\t"],[0,"\ttw,fb,r"]],"start1":526,"start2":526,"length1":17,"length2":16},{"diffs":[[0,"in,yt,\r\n"],[-1,"\t"],[0,"\ttitleFo"]],"start1":549,"start2":549,"length1":17,"length2":16},{"diffs":[[0,"und=0,\r\n"],[-1,"\t"],[0,"\tdescFou"]],"start1":565,"start2":565,"length1":17,"length2":16},{"diffs":[[0,"und=0,\r\n"],[-1,"\t"],[0,"\timgFoun"]],"start1":580,"start2":580,"length1":17,"length2":16},{"diffs":[[0,"ror) {\r\n\t\t\t\t"],[1,"var "],[0,"$h = $(\"<for"]],"start1":761,"start2":761,"length1":24,"length2":28},{"diffs":[[0,"{\r\n\t\t\t\t\t"],[1,"var "],[0,"$item = "]],"start1":902,"start2":902,"length1":16,"length2":20},{"diffs":[[0,";\r\n\t\t\t\t\t"],[1,"var "],[0,"property"]],"start1":929,"start2":929,"length1":16,"length2":20},{"diffs":[[0,"titleFound=="],[1,"="],[0,"0)\r\n\t\t\t\t{\r\n\t"]],"start1":1485,"start2":1485,"length1":24,"length2":25},{"diffs":[[0,"cFound=="],[1,"="],[0,"0)\r\n\t\t\t\t"]],"start1":2043,"start2":2043,"length1":16,"length2":17},{"diffs":[[0,"\t\t\r\n\t\t\t\t"],[1,"var "],[0,"imgs = $"]],"start1":2411,"start2":2411,"length1":16,"length2":20},{"diffs":[[0,"tem){\r\n\t\t\t\t\t"],[1,"var "],[0,"src=$(item)."]],"start1":2505,"start2":2505,"length1":24,"length2":28},{"diffs":[[0,"tem){\r\n\t\t\t\t\t"],[1,"var "],[0,"twUrl = $(it"]],"start1":2942,"start2":2942,"length1":24,"length2":28},{"diffs":[[0,"tem){\r\n\t\t\t\t\t"],[1,"var "],[0,"fbPagesUrl ="]],"start1":3565,"start2":3565,"length1":24,"length2":28},{"diffs":[[0,"tem){\r\n\t\t\t\t\t"],[1,"var "],[0,"liUrl = $(it"]],"start1":3842,"start2":3842,"length1":24,"length2":28},{"diffs":[[0,"{\r\n\t\t\t\t\t"],[1,"var "],[0,"rssUrl ="]],"start1":4041,"start2":4041,"length1":16,"length2":20},{"diffs":[[0,"tem){\r\n\t\t\t\t\t"],[1,"var "],[0,"pinUrl = $(i"]],"start1":4275,"start2":4275,"length1":24,"length2":28},{"diffs":[[0,"item){\r\n"],[-1,""],[0,"\t\t\t\t\t"],[1,"var "],[0,"ytUrl = "]],"start1":4465,"start2":4465,"length1":21,"length2":25}]],"length":6649,"saved":false}
{"ts":1376134435145,"patch":[[{"diffs":[[0,",res){ \r"],[1,"\n\r\n    var URL = require('url');\r"],[0,"\n    \r\n"],[1," "],[0,"   var u"]],"start1":437,"start2":437,"length1":23,"length2":57}]],"length":6683,"saved":false}
{"ts":1376134702172,"patch":[[{"diffs":[[0,"nescape("],[1,"fixUrl("],[0,"url)"],[1,")"],[0,";\r\n\t\t\r\n\t"]],"start1":669,"start2":669,"length1":20,"length2":28}]],"length":6691,"saved":false}
{"ts":1376134735049,"patch":[[{"diffs":[[0,"nescape("],[1,"utils."],[0,"fixUrl(u"]],"start1":669,"start2":669,"length1":16,"length2":22}]],"length":6697,"saved":false}
{"ts":1376134788292,"patch":[[{"diffs":[[0,"){\r\n\t\t\t\t"],[-1,"\t"],[1,"    "],[0,"tags.pus"]],"start1":2299,"start2":2299,"length1":17,"length2":20}]],"length":6700,"saved":false}
{"ts":1376135247845,"patch":[[{"diffs":[[0,"h = $(\"<"],[-1,"form"],[1,"iframe"],[0,">\"+body+"]],"start1":826,"start2":826,"length1":20,"length2":22},{"diffs":[[0,"+\"</"],[-1,"form"],[1,"iframe"],[0,">\");"]],"start1":847,"start2":847,"length1":12,"length2":14}]],"length":6704,"saved":false}
{"ts":1376135336615,"patch":[[{"diffs":[[0,"ion(idx,item){\r\n"],[1,"                    \r\n                    console.log(\"meta og......\");                    \r\n                    \r\n"],[0,"\t\t\t\t\tvar $item ="]],"start1":941,"start2":941,"length1":32,"length2":147},{"diffs":[[0,"=0)\r\n\t\t\t\t{\r\n"],[1,"                    console.log(\"title......\");                    \r\n                    \r\n                    \r\n"],[0,"\t\t\t\t\t//var m"]],"start1":1664,"start2":1664,"length1":24,"length2":137},{"diffs":[[0,"\n\t\t\t\t{\r\n"],[1,"                    console.log(\"meta desc......\");                    \r\n                    \r\n"],[0,"\t\t\t\t\t$.e"]],"start1":2335,"start2":2335,"length1":16,"length2":111},{"diffs":[[0,"idx,item){\r\n"],[1,"                        console.log(\"meta desc..\");         \r\n"],[0,"\t\t\t\t\t\tdesc ="]],"start1":2495,"start2":2495,"length1":24,"length2":86},{"diffs":[[0," usernames\r\n"],[-1,""],[0,"\t\t\t\t$.each($"]],"start1":3287,"start2":3287,"length1":24,"length2":24},{"diffs":[[0,"ion(idx,item){\r\n"],[1,"                    \r\n                     console.log(\"twitter found......\");  \r\n                    \r\n"],[0,"\t\t\t\t\tvar twUrl ="]],"start1":3373,"start2":3373,"length1":32,"length2":136}]],"length":7193,"saved":false}
{"ts":1376135338969,"patch":[[{"diffs":[[0,"                "],[-1," "],[0,"console.log(\"twi"]],"start1":3415,"start2":3415,"length1":33,"length2":32}]],"length":7192,"saved":false}
{"ts":1376135476922,"patch":[[{"diffs":[[0,"function(req,res"],[-1,",next"],[0,"){\r\n    console."]],"start1":5547,"start2":5547,"length1":37,"length2":32},{"diffs":[[0,"        "],[1,"//"],[0,"next();\r"]],"start1":5987,"start2":5987,"length1":16,"length2":18},{"diffs":[[0,",res"],[-1,",next"],[0,"){\r\n"]],"start1":6068,"start2":6068,"length1":13,"length2":8}]],"length":7184,"saved":false}
{"ts":1376135522404,"patch":[[{"diffs":[[0,"ta[name="],[-1,"\""],[0,"descript"]],"start1":2461,"start2":2461,"length1":17,"length2":16},{"diffs":[[0,"cription"],[-1,"\""],[0,"]'),func"]],"start1":2472,"start2":2472,"length1":17,"length2":16}]],"length":7182,"saved":false}
{"ts":1376135525305,"patch":[[{"diffs":[[0,"ame="],[-1,"\""],[0,"keywords"],[-1,"\""],[0,"]'),"]],"start1":2651,"start2":2651,"length1":18,"length2":16}]],"length":7180,"saved":false}
{"ts":1376135613596,"patch":[[{"diffs":[[0,"p.get('/"],[1,"fff/"],[0,":id/:siz"]],"start1":6031,"start2":6031,"length1":16,"length2":20}]],"length":7184,"saved":false}
{"ts":1376135673917,"patch":[[{"diffs":[[0,"iframe>\");\r\n"],[1,"                \r\n                console.log($h.html());\r\n"],[0,"\t\t\t\t\r\n\t\t\t\t//"]],"start1":851,"start2":851,"length1":24,"length2":83},{"diffs":[[0,"ta desc......\");"],[1,"              \r\n                    \r\n"],[0,"                "]],"start1":2437,"start2":2437,"length1":32,"length2":70}]],"length":7281,"saved":false}
{"ts":1376135773673,"patch":[[{"diffs":[[0,"ole.log("],[1,"\"body----------------------------------\"+"],[0,"$h.html("]],"start1":901,"start2":901,"length1":16,"length2":57}]],"length":7322,"saved":false}
{"ts":1376147505263,"patch":[[{"diffs":[[0,"h = $(\"<"],[-1,"iframe"],[1,"form"],[0,">\"+body+"]],"start1":826,"start2":826,"length1":22,"length2":20},{"diffs":[[0,"+\"</"],[-1,"iframe"],[1,"form"],[0,">\");"]],"start1":845,"start2":845,"length1":14,"length2":12}]],"length":7318,"saved":false}
{"ts":1376147536465,"patch":[[{"diffs":[[0,",pin,yt,"],[1,"gp,"],[0,"\r\n\ttitle"]],"start1":581,"start2":581,"length1":16,"length2":19}]],"length":7321,"saved":false}
{"ts":1376147780270,"patch":[[{"diffs":[[0,"              \r\n"],[1,"                var head = body.match(/<head>\\s*(.+?)\\s*<\\/head>/);\r\n                if (head) {\r\n    \t\t\t\t\t$h = $(\"<form>\"+head[1]+\"</form>\");\r\n\t\t\t\t\t}\r\n                \r\n"],[0,"                "]],"start1":864,"start2":864,"length1":32,"length2":202}]],"length":7491,"saved":false}
{"ts":1376215481605,"patch":[[{"diffs":[[0,"(!error) {\r\n"],[1,"                \r\n                console.log(body;\r\n    \t\t\t\r\n                \r\n"],[0,"\t\t\t\tvar $h ="]],"start1":808,"start2":808,"length1":24,"length2":104}]],"length":7571,"saved":false}
{"ts":1376215481706,"patch":[[{"diffs":[[0,"log(body"],[1,")"],[0,";\r\n    \t"]],"start1":862,"start2":862,"length1":16,"length2":17}]],"length":7572,"saved":false}
{"ts":1376215497458,"patch":[[{"diffs":[[0,"f (head) {\r\n"],[1,"                        console.log(head[0]);\r\n"],[0,"    \t\t\t\t\t$h "]],"start1":1047,"start2":1047,"length1":24,"length2":71}]],"length":7619,"saved":false}
{"ts":1376216217093,"patch":[[{"diffs":[[0,"                "],[1,"//"],[0,"console.log(body"]],"start1":838,"start2":838,"length1":32,"length2":34},{"diffs":[[0,"d>\\s"],[-1,"*"],[0,"(.+?)\\s"],[-1,"*"],[0,"<\\/head>"],[-1,"/"],[0,");\r\n"]],"start1":1006,"start2":1006,"length1":26,"length2":23},{"diffs":[[0,"ole.log("],[1,"\"head............\"+"],[0,"head[0])"]],"start1":1086,"start2":1086,"length1":16,"length2":35}]],"length":7637,"saved":false}
{"ts":1376216446083,"patch":[[{"diffs":[[0,"<\\/head>"],[1,"\\"],[0,");\r\n    "]],"start1":1017,"start2":1017,"length1":16,"length2":17}]],"length":7638,"saved":false}
{"ts":1376216636965,"patch":[[{"diffs":[[0,"<\\/head>"],[-1,"\\"],[1,"/"],[0,");\r\n    "]],"start1":1017,"start2":1017,"length1":17,"length2":17}]],"length":7638,"saved":false}
{"ts":1376216658094,"patch":[[{"diffs":[[0,"ead>"],[-1,"\\s"],[0,"(.+?)"],[-1,"\\s"],[0,"<\\/h"]],"start1":1004,"start2":1004,"length1":17,"length2":13}]],"length":7634,"saved":false}
{"ts":1376216760328,"patch":[[{"diffs":[[0,"(/<head>"],[-1,"(.+?)"],[1,"[\\s\\S]"],[0,"<\\/head>"]],"start1":1000,"start2":1000,"length1":21,"length2":22}]],"length":7635,"saved":false}
{"ts":1376216876288,"patch":[[{"diffs":[[0,"d>[\\"],[-1,"s\\S"],[1,"S\\s"],[0,"]<\\/"]],"start1":1006,"start2":1006,"length1":11,"length2":11}]],"length":7635,"saved":false}
{"ts":1376216884086,"patch":[[{"diffs":[[0,"\\/head>/"],[1,"g"],[0,");\r\n    "]],"start1":1015,"start2":1015,"length1":16,"length2":17}]],"length":7636,"saved":false}
{"ts":1376217023114,"patch":[[{"diffs":[[0,"    if ("],[-1,"head"],[1,"typeof head != \"undefined\""],[0,") {\r\n   "]],"start1":1040,"start2":1040,"length1":20,"length2":42}]],"length":7658,"saved":false}
{"ts":1376217142052,"patch":[[{"diffs":[[0,"        "],[-1,"//"],[0,"console."]],"start1":846,"start2":846,"length1":18,"length2":16},{"diffs":[[0,"ole.log(body"],[1,".substring(0,400)"],[0,");\r\n    \t\t\t\r"]],"start1":858,"start2":858,"length1":24,"length2":41}]],"length":7673,"saved":false}
{"ts":1376217147228,"patch":[[{"diffs":[[0,"                "],[1,"//"],[0,"console.log(\"hea"]],"start1":1102,"start2":1102,"length1":32,"length2":34},{"diffs":[[0,";\r\n    \t\t\t\t\t"],[1,"//"],[0,"$h = $(\"<for"]],"start1":1159,"start2":1159,"length1":24,"length2":26}]],"length":7677,"saved":false}
{"ts":1376217386088,"patch":[[{"diffs":[[0,");\r\n\t\t\t\t\t}\r\n"],[1,"                    \r\n                    \r\n                var pattern = /<head[^>]*>((.|[\\n\\r])*)<\\/head>/im\r\n                var array_matches = pattern.exec(body);   \r\n                \r\n                 console.log(array_matches[1]);\r\n"],[0,"            "]],"start1":1206,"start2":1206,"length1":24,"length2":263}]],"length":7916,"saved":false}
{"ts":1376217521431,"patch":[[{"diffs":[[0,"                "],[1,"//"],[0,"console.log(body"]],"start1":838,"start2":838,"length1":32,"length2":34},{"diffs":[[0,"                "],[-1," "],[0,"console.log(arra"]],"start1":1410,"start2":1410,"length1":33,"length2":32},{"diffs":[[0,"ole.log("],[1,"\"head----\"+"],[0,"array_ma"]],"start1":1430,"start2":1430,"length1":16,"length2":27}]],"length":7928,"saved":false}
{"ts":1376217897830,"patch":[[{"diffs":[[0,"(.|[\\n\\r"],[1,"\\S\\s"],[0,"])*)<\\/h"]],"start1":1307,"start2":1307,"length1":16,"length2":20}]],"length":7932,"saved":false}
{"ts":1376218163840,"patch":[[{"diffs":[[0,".|[\\"],[-1,"n\\r\\"],[0,"S\\s]"]],"start1":1308,"start2":1308,"length1":12,"length2":8}]],"length":7928,"saved":false}
{"ts":1376218373961,"patch":[[{"diffs":[[0,"\\/head>/"],[-1,"g"],[1,"im"],[0,");\r\n    "]],"start1":1032,"start2":1032,"length1":17,"length2":18},{"diffs":[[0,"                "],[-1,"    //"],[0,"console.log(\"hea"]],"start1":1101,"start2":1101,"length1":38,"length2":32},{"diffs":[[0,"..\"+head"],[-1,"[0]"],[0,");\r\n    "]],"start1":1144,"start2":1144,"length1":19,"length2":16},{"diffs":[[0,"    \t\t\t\t"],[-1,"\t"],[0,"//$h = $"]],"start1":1156,"start2":1156,"length1":17,"length2":16},{"diffs":[[0,"</form>\");\r\n"],[-1,"\t"],[0,"\t\t\t\t}\r\n     "]],"start1":1191,"start2":1191,"length1":25,"length2":24},{"diffs":[[0,"            "],[1,"//"],[0,"var pattern "]],"start1":1258,"start2":1258,"length1":24,"length2":26},{"diffs":[[0,"            "],[1,"//"],[0,"var array_ma"]],"start1":1328,"start2":1328,"length1":24,"length2":26},{"diffs":[[0,"                "],[1,"//"],[0,"console.log(\"hea"]],"start1":1404,"start2":1404,"length1":32,"length2":34}]],"length":7924,"saved":false}
{"ts":1376218705494,"patch":[[{"diffs":[[0,"(/<head>"],[1,"((.|"],[0,"[\\S\\s]"],[1,")*)"],[0,"<\\/head>"]],"start1":1017,"start2":1017,"length1":22,"length2":29}]],"length":7931,"saved":false}
{"ts":1376219057889,"patch":[[{"diffs":[[0,"            "],[1,"//"],[0," var head = "]],"start1":983,"start2":983,"length1":24,"length2":26},{"diffs":[[0,"head>/im);\r\n"],[1,"                /*\r\n"],[0,"            "]],"start1":1043,"start2":1043,"length1":24,"length2":44},{"diffs":[[0,"                "],[1,"*/"],[0,"  \r\n            "]],"start1":1241,"start2":1241,"length1":32,"length2":34},{"diffs":[[0,"            "],[-1,"//"],[0,"var pattern "]],"start1":1289,"start2":1289,"length1":26,"length2":24},{"diffs":[[0,"        "],[-1,"//"],[0,"var arra"]],"start1":1361,"start2":1361,"length1":18,"length2":16},{"diffs":[[0,"        "],[-1," "],[-1,"\r\n                //"],[1," "],[0,"console."]],"start1":1420,"start2":1420,"length1":37,"length2":17}]],"length":7931,"saved":false}
{"ts":1376219129802,"patch":[[{"diffs":[[0,"[^>]*>((.|[\\"],[-1,"S\\s"],[1,"n\\r"],[0,"])*)<\\/head>"]],"start1":1321,"start2":1321,"length1":27,"length2":27}]],"length":7931,"saved":false}
{"ts":1376219290216,"patch":[[{"diffs":[[0,"                "],[1,"var $h = $(\"<form>\"+array_matches[1]+\"</form>\");\r\n                \r\n                //"],[0,"console.log(\"bod"]],"start1":1490,"start2":1490,"length1":32,"length2":118}]],"length":8017,"saved":false}
{"ts":1376219352388,"patch":[[{"diffs":[[0,"tches[1]"],[1,"replace(/\\n/g,\" \")"],[0,"+\"</form"]],"start1":1534,"start2":1534,"length1":16,"length2":34}]],"length":8035,"saved":false}
{"ts":1376219361148,"patch":[[{"diffs":[[0,"tches[1]"],[1,"."],[0,"replace("]],"start1":1534,"start2":1534,"length1":16,"length2":17}]],"length":8036,"saved":false}
{"ts":1376219462012,"patch":[[{"diffs":[[0,"\t\t\t\t"],[-1,"var $h = $(\"<form>\"+body+\"</form>\");\r\n                \r\n               // var head = body.match(/<head>((.|[\\S\\s])*)<\\/head>/im);\r\n                /*\r\n                if (typeof head != \"undefined\") {\r\n                    console.log(\"head............\"+head);\r\n    \t\t\t\t//$h = $(\"<form>\"+head[1]+\"</form>\");\r\n\t\t\t\t}\r\n                  */  \r\n                    \r\n                var pattern = /<head[^>]*>((.|[\\n\\r])*)<\\/head>/im\r\n                var array_matches = pattern.exec(body);   \r\n                console.log(\"head----\"+array_matches[1]);"],[1,"//var $h = $(\"<form>\"+body+\"</form>\");\r\n                \r\n                    \r\n                var headPattern = /<head[^>]*>((.|[\\n\\r])*)<\\/head>/im\r\n                var headMatches = headPattern.exec(body);\r\n                \r\n                if (headMatches.length>0) {\r\n                    var head = headMatches[1].replace(/\\n/g,\" \");\r\n                }"],[0,"\r\n  "]],"start1":920,"start2":920,"length1":554,"length2":366}]],"length":7848,"saved":false}
{"ts":1376219626017,"patch":[[{"diffs":[[0,"gth>0) {"],[-1,""],[0,""],[1," // head\r\n                    "],[0,"\r\n      "]],"start1":1188,"start2":1188,"length1":16,"length2":46},{"diffs":[[0,"    "],[-1,"}\r\n                \r\n                var $h = $(\"<form>\"+array_matches[1].replace(/\\n/g,\" \")+\"</form>\");\r\n                \r\n                //console.log(\"body----------------------------------\"+$h.html());\r\n\t\t\t\t\r\n\t\t\t\t// find opengraph\r\n\t\t\t\t$.each($h.find('meta[property^=\"og:\"]'),function(idx,item){\r\n                    \r\n                    console.log(\"meta og......\");                    \r\n                    \r\n\t\t\t\t\tvar $item = $(item);\r\n\t\t\t\t\tvar property = $item.attr(\"property\");\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (property==\"og:image\") {\r\n\t\t\t\t\t\timage = $item.attr(\"content\");\r\n\t\t\t\t\t\t//if (imgSrc.indexOf('//')==-1) { // prepend baseurl for relative images\t\t\t\t\t\t\r\n\t\t\t\t\t\t//\timgSrc=baseUrl+imgSrc;\r\n\t\t\t\t\t\t//}\r\n\t\t\t\t\t\timages.push(image);\r\n\t\t\t\t\t\timgFound = 1;\r\n\t\t\t\t\t}\t\t\t\r\n\t\t\t\t\telse if (property==\"og:title\") {\r\n\t\t\t\t\t\ttitle = $item.attr(\"content\");\r\n\t\t\t\t\t\ttitleFound=1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (property==\"og:description\") {\r\n\t\t\t\t\t\tdesc = $item.attr(\"content\");\r\n\t\t\t\t\t\tdescFound=1;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\t\r\n\t\t\t\t\r\n\t\t\t\tif (titleFound===0)\r\n\t\t\t\t{\r\n                    console.log(\"title......\");                    \r\n                    \r\n                    \r\n\t\t\t\t\t//var matches = body.match(/<title>\\s*(.+?)<\\/title>/);\r\n\t\t\t\t\tvar matches = body.match(/<title>\\s*(.+?)\\s*<\\/title>/);\r\n\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\ttitle = matches[1];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (imgFound===0) {\r\n\t\t\t\t\timage = $h.find('link[rel=\"image_src\"],link[rel=\"apple-touch-icon\"],link[rel=\"shortcut icon\"]').attr('href');\r\n\t\t\t\t\tif (image && image.indexOf('//')==-1) { // prepend baseurl for relative images\t\t\t\t\t\t\r\n\t\t\t\t\t\timage = baseUrl+image;\r\n\t\t\t\t\t}\r\n\t\t\t\t\timages.push(image);\r\n\t\t\t\t\timgFound = 1;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (descFound===0)\r\n\t\t\t\t{\r\n                    console.log(\"meta desc......\");              \r\n                    \r\n                    \r\n                    \r\n\t\t\t\t\t$.each($h.find('meta[name=description]'),function(idx,item){\r\n                        console.log(\"meta desc..\");         \r\n\t\t\t\t\t\tdesc = $(item).attr(\"content\");\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$.each($h.find('meta[name=keywords]'),function(idx,item){\r\n\t\t\t\t    tags.push($(item).attr(\"content\"));\r\n\t\t\t\t});"],[1,"    var $h = $(\"<form>\"+head+\"</form>\");\r\n                    \r\n                    // find opengraph\r\n                    $.each($h.find('meta[property^=\"og:\"]'),function(idx,item){\r\n                        \r\n                        console.log(\"meta og......\");                    \r\n                        \r\n                        var $item = $(item);\r\n                        var property = $item.attr(\"property\");\r\n                        \r\n                        if (property==\"og:image\") {\r\n                            image = $item.attr(\"content\");\r\n                            images.push(image);\r\n                            imgFound = 1;\r\n                        }\t\t\t\r\n                        else if (property==\"og:title\") {\r\n                            title = $item.attr(\"content\");\r\n                            titleFound=1;\r\n                        }\r\n                        else if (property==\"og:description\") {\r\n                            desc = $item.attr(\"content\");\r\n                            descFound=1;\r\n                        }\r\n                    });\t\r\n    \t\t\t\t\r\n    \t\t\t\t//if (titleFound===0)\r\n    \t\t\t\t{\r\n                        console.log(\"title......\");\r\n                        \r\n                        var matches = body.match(/<title>\\s*(.+?)\\s*<\\/title>/);\r\n    \t\t\t        if (matches) {\r\n    \t\t\t            title = matches[1];\r\n    \t\t\t\t\t}\r\n    \t\t\t\t}\r\n    \t\t\t\t\r\n    \t\t\t\t//if (imgFound===0)\r\n                    {\r\n    \t\t\t\t\timage = $h.find('link[rel=\"image_src\"],link[rel=\"apple-touch-icon\"],link[rel=\"shortcut icon\"]').attr('href');\r\n    \t\t\t\t\tif (image && image.indexOf('//')==-1) { // prepend baseurl for relative images\t\t\t\t\t\t\r\n    \t\t\t\t\t\timage = baseUrl+image;\r\n    \t\t\t\t\t}\r\n    \t\t\t\t\timages.push(image);\r\n    \t\t\t\t\timgFound = 1;\r\n    \t\t\t\t}\r\n    \t\t\t\t\r\n    \t\t\t\t//if (descFound===0)\r\n    \t\t\t\t{\r\n                        console.log(\"meta desc......\");              \r\n                        \r\n                          \r\n    \t\t\t\t\t$.each($h.find('meta[name=description]'),function(idx,item){\r\n                            console.log(\"meta desc..\");         \r\n    \t\t\t\t\t\tdesc = $(item).attr(\"content\");\r\n    \t\t\t\t\t});\r\n    \t\t\t\t}\r\n    \r\n    \t\t\t\t$.each($h.find('meta[name=keywords]'),function(idx,item){\r\n    \t\t\t\t    tags.push($(item).attr(\"content\"));\r\n    \t\t\t\t});\r\n                }\r\n                \r\n                \r\n                \r\n                //console.log(\"body----------------------------------\"+$h.html());\r\n\t\t\t\t\r\n\t\t\t\t"],[0,"\r\n\t\t"]],"start1":1307,"start2":1307,"length1":2131,"length2":2474}]],"length":8221,"saved":false}
{"ts":1376219707406,"patch":[[{"diffs":[[0,"ref;\r\n\t\t\t\t\r\n"],[1,"                var bodyPattern = /<body[^>]*>((.|[\\n\\r])*)<\\/body>/im\r\n                var bodyMatches = bodyPattern.exec(body);\r\n                \r\n                if (bodyMatches.length>0) { // body\r\n                \r\n"],[0,"\t\t\t\tvar imgs"]],"start1":3876,"start2":3876,"length1":24,"length2":244}]],"length":8441,"saved":false}
{"ts":1376219737865,"patch":[[{"diffs":[[0,"          \r\n"],[1,"                \r\n                    var $h = $(\"<form>\"+bodyMatches[1]+\"</form>\");\r\n                \r\n"],[0,"\t\t\t\tvar imgs"]],"start1":4096,"start2":4096,"length1":24,"length2":128}]],"length":8545,"saved":false}
{"ts":1376219743860,"patch":[[{"diffs":[[0,"                "],[-1,"var "],[0,"$h = $(\"<form>\"+"]],"start1":4130,"start2":4130,"length1":36,"length2":32}]],"length":8541,"saved":false}
{"ts":1376219754825,"patch":[[{"diffs":[[0,"rn.exec(body);\r\n"],[1,"                var $h;\r\n"],[0,"                "]],"start1":1119,"start2":1119,"length1":32,"length2":57},{"diffs":[[0,"        "],[-1,"var "],[0,"$h = $(\""]],"start1":1332,"start2":1332,"length1":20,"length2":16}]],"length":8562,"saved":false}
{"ts":1376219897612,"patch":[[{"diffs":[[0,"oogle+\r\n"],[1,"                }\r\n"],[0,"\t\r\n\t\t\t\t$"]],"start1":6548,"start2":6548,"length1":16,"length2":35}]],"length":8581,"saved":false}
{"ts":1376220148272,"patch":[[{"diffs":[[0,"              \r\n"],[1,"                    console.log(bodyMatches[1].substring(0,500));\r\n"],[0,"                "]],"start1":4113,"start2":4113,"length1":32,"length2":99}]],"length":8648,"saved":false}
{"ts":1376220155247,"patch":[[{"diffs":[[0,"console.log("],[1,"\"body--------------------------------\"+"],[0,"bodyMatches["]],"start1":4149,"start2":4149,"length1":24,"length2":63}]],"length":8687,"saved":false}
{"ts":1376220159512,"patch":[[{"diffs":[[0,"  \r\n"],[-1,"                \r\n                \r\n                //console.log(\"body----------------------------------\"+$h.html());\r\n\t\t\t\t\r\n\t\t\t\t\r\n"],[0,"\t\t\t\t"]],"start1":3664,"start2":3664,"length1":140,"length2":8}]],"length":8555,"saved":false}
{"ts":1376220320704,"patch":[[{"diffs":[[0,"rc\");\r\n\t\t\t\t\t"],[-1,"//"],[0,"console.log("]],"start1":4328,"start2":4328,"length1":26,"length2":24}]],"length":8553,"saved":false}
{"ts":1376220340453,"patch":[[{"diffs":[[0,"    $h = $(\""],[-1,"<form>"],[0,"\"+bodyMatche"]],"start1":4137,"start2":4137,"length1":30,"length2":24},{"diffs":[[0,"hes[1]+\""],[-1,"</form>"],[0,"\");\r\n   "]],"start1":4159,"start2":4159,"length1":23,"length2":16}]],"length":8540,"saved":false}
{"ts":1376220545996,"patch":[[{"diffs":[[0,"= $("],[-1,"\"\"+"],[0,"body"]],"start1":4144,"start2":4144,"length1":11,"length2":8},{"diffs":[[0,"s[1]"],[-1,"+\"\""],[0,");\r\n"]],"start1":4158,"start2":4158,"length1":11,"length2":8},{"diffs":[[0,"a[href*="],[-1,"\""],[0,"twitter."]],"start1":4646,"start2":4646,"length1":17,"length2":16},{"diffs":[[0,"twitter.com/"],[-1,"\""],[0,"]:not(a[href"]],"start1":4654,"start2":4654,"length1":25,"length2":24},{"diffs":[[0,"ef*="],[-1,"\""],[0,"status"],[-1,"\""],[0,"])')"]],"start1":4676,"start2":4676,"length1":16,"length2":14}]],"length":8530,"saved":false}
{"ts":1376220559946,"patch":[[{"diffs":[[0,"[src"],[-1,"$=\""],[1,"*="],[0,"png"],[-1,"\""],[0,"],im"]],"start1":4211,"start2":4211,"length1":15,"length2":13},{"diffs":[[0,"[src"],[-1,"$=\""],[1,"*="],[0,"jpg"],[-1,"\""],[0,"]');"]],"start1":4225,"start2":4225,"length1":15,"length2":13}]],"length":8526,"saved":false}
{"ts":1376220803461,"patch":[[{"diffs":[[0," $h = $("],[1,"\"<form>\"+"],[0,"bodyMatc"]],"start1":4140,"start2":4140,"length1":16,"length2":25},{"diffs":[[0,"tches[1]"],[1,"+\"</form>\""],[0,");\r\n    "]],"start1":4163,"start2":4163,"length1":16,"length2":26}]],"length":8545,"saved":false}
{"ts":1376220948291,"patch":[[{"diffs":[[0,"a[href*="],[1,"\""],[0,"twitter."]],"start1":4661,"start2":4661,"length1":16,"length2":17},{"diffs":[[0,"ter.com/"],[1,"\""],[0,"]:not(a["]],"start1":4674,"start2":4674,"length1":16,"length2":17},{"diffs":[[0,"a[href*="],[1,"\""],[0,"status"],[1,"\""],[0,"])'),fun"]],"start1":4689,"start2":4689,"length1":22,"length2":24}]],"length":8549,"saved":false}
{"ts":1376220958109,"patch":[[{"diffs":[[0,"\"twitter.com"],[-1,"/"],[0,"\"]:not(a[hre"]],"start1":4669,"start2":4669,"length1":25,"length2":24}]],"length":8548,"saved":false}
{"ts":1376221135620,"patch":[[{"diffs":[[0,"el=\""],[-1,"apple-touch-icon\"],link[rel=\""],[0,"shor"]],"start1":2843,"start2":2843,"length1":37,"length2":8}]],"length":8519,"saved":false}
{"ts":1376221181518,"patch":[[{"diffs":[[0,"\t\t\t\t"],[-1,"//if (titleFound===0)\r\n    \t\t\t\t{\r\n    "],[1,"\r\n"],[0,"    "]],"start1":2434,"start2":2434,"length1":46,"length2":10},{"diffs":[[0,"            "],[-1,"   "],[-1," "],[0,"\r\n"],[-1,"    "],[0,"            "]],"start1":2497,"start2":2497,"length1":34,"length2":26},{"diffs":[[0,"le>/);\r\n"],[-1,"    "],[0,"\t\t\t     "]],"start1":2581,"start2":2581,"length1":20,"length2":16},{"diffs":[[0,"hes) {\r\n"],[-1,"    "],[0,"\t\t\t     "]],"start1":2608,"start2":2608,"length1":20,"length2":16},{"diffs":[[0,"];\r\n"],[-1,"    "],[0,"\t\t\t\t\t}\r\n"],[-1,"    \t\t\t\t}"],[0,"\r\n  "]],"start1":2648,"start2":2648,"length1":29,"length2":16},{"diffs":[[0,"\t\t\t\t"],[-1,"//if (imgFound===0)\r\n                    {\r\n    "],[1,"\r\n"],[0,"\t\t\t\t"]],"start1":2676,"start2":2676,"length1":56,"length2":10},{"diffs":[[0,"r('href');\r\n"],[-1,"    "],[0,"\t\t\t\t\tif (ima"]],"start1":2757,"start2":2757,"length1":28,"length2":24},{"diffs":[[0,"ages\t\t\t\t\t\t\r\n"],[-1,"    "],[0,"\t\t\t\t\t\timage "]],"start1":2848,"start2":2848,"length1":28,"length2":24},{"diffs":[[0,"e;\r\n"],[-1,"    "],[0,"\t\t\t\t\t}\r\n"],[-1,"    "],[0,"\t\t\t\t"]],"start1":2886,"start2":2886,"length1":24,"length2":16},{"diffs":[[0,"sh(image);\r\n"],[-1,"    "],[0,"\t\t\t\t\timgFoun"]],"start1":2912,"start2":2912,"length1":28,"length2":24},{"diffs":[[0,"\t\t\t\t"],[-1,"}"],[0,"\r\n"],[-1,"    \t\t\t\t\r\n    \t\t\t\t//if (descFound===0)\r\n    \t\t\t\t{\r\n                        console.log(\"meta desc......\");              \r\n                        \r\n                          \r\n    "],[0,"\t\t\t\t"]],"start1":2948,"start2":2948,"length1":191,"length2":10},{"diffs":[[0,"                "],[-1,"    "],[0,"console.log(\"met"]],"start1":3029,"start2":3029,"length1":36,"length2":32},{"diffs":[[0,";         \r\n"],[-1,"    "],[0,"\t\t\t\t\t\tdesc ="]],"start1":3071,"start2":3071,"length1":28,"length2":24},{"diffs":[[0,"content\");\r\n"],[-1,"    "],[0,"\t\t\t\t\t});\r\n  "]],"start1":3110,"start2":3110,"length1":28,"length2":24},{"diffs":[[0,"    "],[-1,"\t\t\t\t}"],[1,"                "],[0,"\r\n    "],[1," "],[-1,"\r\n"],[0,"    "],[-1,"\t\t\t\t"],[1,"           "],[0,"$.ea"]],"start1":3132,"start2":3132,"length1":29,"length2":46},{"diffs":[[0,"){\r\n    "],[-1,"\t\t\t\t"],[1,"                "],[0,"    tags"]],"start1":3229,"start2":3229,"length1":20,"length2":32},{"diffs":[[0,");\r\n    "],[1," "],[-1,"\t\t\t\t"],[1,"               "],[0,"});\r\n   "]],"start1":3290,"start2":3290,"length1":20,"length2":32},{"diffs":[[0,"      \r\n"],[-1,"\t\t\t\t\r\n"],[0,"\t\t\t\t// f"]],"start1":3348,"start2":3348,"length1":22,"length2":16}]],"length":8230,"saved":false}
{"ts":1376221214736,"patch":[[{"diffs":[[0,"  });\t\r\n"],[-1,"    \t\t\t\t\r\n    \t\t\t\t"],[0,""],[1,""],[0,"\r\n      "]],"start1":2412,"start2":2412,"length1":34,"length2":16},{"diffs":[[0,"e>/);\r\n\t"],[-1,"\t\t"],[1,"        "],[0,"        "]],"start1":2564,"start2":2564,"length1":18,"length2":24},{"diffs":[[0,"es) {\r\n\t"],[-1,"\t\t"],[1,"        "],[0,"        "]],"start1":2597,"start2":2597,"length1":18,"length2":24},{"diffs":[[0,"\t}\r\n"],[-1,"\r\n"],[0,"    "],[-1,"\t\t\t\t\r\n    \t\t\t\t"],[1,"                "],[0,"\r\n\t\t"]],"start1":2650,"start2":2650,"length1":28,"length2":28},{"diffs":[[0,"1;\r\n"],[-1,"    \t\t\t\t"],[0,"\r\n\t\t"]],"start1":2934,"start2":2934,"length1":16,"length2":8}]],"length":8216,"saved":false}
{"ts":1376221229578,"patch":[[{"diffs":[[0,"  \r\n"],[-1,"                //console.log(body.substring(0,400));\r\n    \t\t\t\r\n                \r\n\t\t\t\t//var $h = $(\"<form>\"+body+\"</form>\");\r\n                \r\n                    \r\n"],[0,"    "]],"start1":834,"start2":834,"length1":174,"length2":8}]],"length":8050,"saved":false}
{"ts":1376221257264,"patch":[[{"diffs":[[0,"\n\t\t\tif ("],[-1,"!error"],[1,"typeof body!=\"undefined\""],[0,") {\r\n   "]],"start1":801,"start2":801,"length1":22,"length2":40}]],"length":8068,"saved":false}
{"ts":1376221395457,"patch":[[{"diffs":[[0,"rner.com\"]:lt(1)"],[1,",a:contains('rss')"],[0,"'),function(idx,"]],"start1":5408,"start2":5408,"length1":32,"length2":50}]],"length":8086,"saved":false}
{"ts":1376221400285,"patch":[[{"diffs":[[0,"ins("],[-1,"'rss'"],[1,"\"rss\""],[0,")'),"]],"start1":5432,"start2":5432,"length1":13,"length2":13}]],"length":8086,"saved":false}
{"ts":1376221607157,"patch":[[{"diffs":[[0,"tches[1]"],[1,".replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\"\")"],[0,"+\"</form"]],"start1":3683,"start2":3683,"length1":16,"length2":82}]],"length":8152,"saved":false}
{"ts":1376221759831,"patch":[[{"diffs":[[0,".attr(\"src\")"],[1,".replace(\"\\t\",\"\")"],[0,";\r\n\t\t\t\t\tcons"]],"start1":3902,"start2":3902,"length1":24,"length2":41}]],"length":8169,"saved":false}
{"ts":1376221861018,"patch":[[{"diffs":[[0,"       });\r\n"],[1,"                    \r\n                    $.each($h.find('link[type=\"application/rss+xml\"]'),function(idx,item){\r\n                        tags.push($(item).attr(\"content\"));\r\n                    });\r\n"],[0,"            "]],"start1":3145,"start2":3145,"length1":24,"length2":224}]],"length":8369,"saved":false}
{"ts":1376221898972,"patch":[[{"diffs":[[0,"            "],[-1,"tags.push("],[1,"var rssUrl = "],[0,"$(item).attr"]],"start1":3283,"start2":3283,"length1":34,"length2":37},{"diffs":[[0,"item).attr(\""],[-1,"content\"))"],[1,"href\");\r\n\t\t\t\t\t    rss = rssUrl"],[0,";\r\n         "]],"start1":3310,"start2":3310,"length1":34,"length2":54}]],"length":8392,"saved":false}
{"ts":1376221973535,"patch":[[{"diffs":[[0,"status\"]"],[1,",a[href*=\"share\"]"],[0,")'),func"]],"start1":4523,"start2":4523,"length1":16,"length2":33}]],"length":8409,"saved":false}
{"ts":1376222172535,"patch":[[{"diffs":[[0,"sc:desc,"],[1,"resolved:url,"],[0,"images:i"]],"start1":6450,"start2":6450,"length1":16,"length2":29}]],"length":8422,"saved":false}
{"ts":1376222192056,"patch":[[{"diffs":[[0,"esolved:"],[1,"response.request."],[0,"ur"],[-1,"l"],[1,"i"],[0,",images:"]],"start1":6459,"start2":6459,"length1":19,"length2":36}]],"length":8439,"saved":false}
{"ts":1376222199932,"patch":[[{"diffs":[[0,"uest.uri"],[1,".href"],[0,",images:"]],"start1":6479,"start2":6479,"length1":16,"length2":21}]],"length":8444,"saved":false}
{"ts":1376222205086,"patch":[[{"diffs":[[0,"uest.uri"],[-1,".href"],[0,",images:"]],"start1":6479,"start2":6479,"length1":21,"length2":16}]],"length":8439,"saved":false}
{"ts":1376222279512,"patch":[[{"diffs":[[0,"directs:"],[-1,"1"],[1,"2"],[0,"}, funct"]],"start1":750,"start2":750,"length1":17,"length2":17}]],"length":8439,"saved":false}
{"ts":1376222415072,"patch":[[{"diffs":[[0,"uest.uri"],[1,".pathname"],[0,",images:"]],"start1":6479,"start2":6479,"length1":16,"length2":25}]],"length":8448,"saved":false}
{"ts":1376222721938,"patch":[[{"diffs":[[0,");\r\n\r\n\r\n"],[1,"app.get(\"/last\",function(req, res){\r\n   \r\n    //console.log(\"b:\"+req.body.status);\r\n\t//console.log(\"user:\"+JSON.stringify(req.user));\r\n\tconsole.log(\"tw:\"+JSON.stringify(req.session));\r\n\tif (req.user.loggedInWith.indexOf(\"twitter\")!=-1) {\r\n\t\tvar oauth = \r\n\t\t\t{ consumer_key: conf.twit.consumerKey\r\n\t\t\t, consumer_secret: conf.twit.consumerSecret\r\n\t\t\t, token: req.session.auth.twitter.accessToken\r\n\t\t\t, token_secret: req.session.auth.twitter.accessTokenSecret\r\n\t\t\t}\r\n\t\t  , url = 'https://api.twitter.com/1/statuses/home_timeline.json?'\r\n\t\t  , params = \r\n\t\t\t{ \r\n\t\t\t\tinclude_entities:true\r\n\t\t\t};\r\n\t\t\turl += require('querystring').stringify(params)\r\n\t\t\trequest.get({url:encodeURI(url), oauth:oauth}, function (e, r, body) {\r\n\t\t\t//console.log(e);\r\n\t\t\t//console.log(body);\r\n\t\t\tif (!e || typeof e == \"undefined\") {\r\n\t\t\t\tres.json({ok:'ok'});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tres.json({error:e});\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n    \r\n});\r\n\r\n"],[0,"/* given"]],"start1":6730,"start2":6730,"length1":16,"length2":921}]],"length":9353,"saved":false}
{"ts":1376222788175,"patch":[[{"diffs":[[0,"er));\r\n\t"],[1,"//"],[0,"console."]],"start1":6866,"start2":6866,"length1":16,"length2":18},{"diffs":[[0,"on));\r\n\t"],[1,"//"],[0,"if (req."]],"start1":6918,"start2":6918,"length1":16,"length2":18},{"diffs":[[0,"\n\t\t})\r\n\t"],[1,"//"],[0,"}\r\n    \r"]],"start1":7623,"start2":7623,"length1":16,"length2":18}]],"length":9359,"saved":false}
{"ts":1376222877343,"patch":[[{"diffs":[[0,"er.com/1"],[1,".1"],[0,"/statuse"]],"start1":7236,"start2":7236,"length1":16,"length2":18}]],"length":9361,"saved":false}
{"ts":1376223002428,"patch":[[{"diffs":[[0,"en: "],[-1,"req.session.auth.twitter.accessToken\r\n\t\t\t, token_secret: req.session.auth.twitter.accessTokenSecret"],[1,"\"480346094-HIZrfb9w9D48WGWK6Ib21MxdWzbduRrMWhAi5ZoB\"\r\n\t\t\t, token_secret: \"D8iqNaFMnKeXnLhhQ9POebtiKgGOAmHAZE9qToSRSc"],[0,"\r\n\t\t"]],"start1":7095,"start2":7095,"length1":107,"length2":124}]],"length":9378,"saved":false}
{"ts":1376223004278,"patch":[[{"diffs":[[0,"9qToSRSc"],[1,"\""],[0,"\r\n\t\t\t}\r\n"]],"start1":7207,"start2":7207,"length1":16,"length2":17}]],"length":9379,"saved":false}
{"ts":1376223026025,"patch":[[{"diffs":[[0,"body) {\r\n\t\t\t"],[-1,"//"],[0,"console.log("]],"start1":7472,"start2":7472,"length1":26,"length2":24},{"diffs":[[0,"e);\r\n\t\t\t"],[-1,"//"],[0,"console."]],"start1":7496,"start2":7496,"length1":18,"length2":16},{"diffs":[[0,"ole.log("],[1,"\"body gtrom twitter-----------\"+"],[0,"body);\r\n"]],"start1":7508,"start2":7508,"length1":16,"length2":48}]],"length":9407,"saved":false}
{"ts":1376223200022,"patch":[[{"diffs":[[0,"ses/"],[-1,"home"],[1,"user"],[0,"_tim"]],"start1":7270,"start2":7270,"length1":12,"length2":12},{"diffs":[[0,"ies:true"],[1,",\r\n                screen_name:\"thenextweb\""],[0,"\r\n\t\t\t};\r"]],"start1":7337,"start2":7337,"length1":16,"length2":59}]],"length":9450,"saved":false}
{"ts":1376223205813,"patch":[[{"diffs":[[0,"{ok:"],[-1,"'ok'"],[1,"body"],[0,"});\r"]],"start1":7653,"start2":7653,"length1":12,"length2":12}]],"length":9450,"saved":false}
{"ts":1376223390083,"patch":[[{"diffs":[[0,"efined\") {\r\n"],[1,"                \r\n                var obj = JSON.parse(body);\r\n                \r\n"],[0,"\t\t\t\tres.json"]],"start1":7628,"start2":7628,"length1":24,"length2":105},{"diffs":[[0,"son({ok:"],[-1,"body"],[1,"obj[0].url"],[0,"});\r\n\t\t\t"]],"start1":7730,"start2":7730,"length1":20,"length2":26}]],"length":9537,"saved":false}
{"ts":1376223449647,"patch":[[{"diffs":[[0,"\n\t}\r\n});\r\n\r\n"],[1,"var accounts = [\"thenextweb\",\"medium\",\"mashable\",\"techcrunch\",\"sixrevisions\"];\r\n"],[0,"\r\napp.get(\"/"]],"start1":6724,"start2":6724,"length1":24,"length2":104}]],"length":9617,"saved":false}
{"ts":1376223491359,"patch":[[{"diffs":[[0,"son({ok:"],[-1,"obj"],[1,"body"],[0,"[0].url}"]],"start1":7810,"start2":7810,"length1":19,"length2":20}]],"length":9618,"saved":false}
{"ts":1376223582266,"patch":[[{"diffs":[[0,":body[0]"],[-1,".url"],[0,"});\r\n\t\t\t"]],"start1":7817,"start2":7817,"length1":20,"length2":16}]],"length":9614,"saved":false}
{"ts":1376223667120,"patch":[[{"diffs":[[0,"son({ok:"],[-1,"body"],[1,"obj"],[0,"[0]});\r\n"]],"start1":7810,"start2":7810,"length1":20,"length2":19}]],"length":9613,"saved":false}
{"ts":1376223875901,"patch":[[{"diffs":[[0,"N.parse(body);\r\n"],[1,"                var url = obj.entities.urls[0].url\r\n"],[0,"                "]],"start1":7767,"start2":7767,"length1":32,"length2":84}]],"length":9665,"saved":false}
{"ts":1376224046878,"patch":[[{"diffs":[[0,"s[0].url"],[1,";\r\n                var rts = obj.retweet_count;"],[0,"\r\n      "]],"start1":7825,"start2":7825,"length1":16,"length2":63},{"diffs":[[0,"on({"],[-1,"ok"],[1,"url:url,rts:rts,obj"],[0,":obj"],[-1,"[0]"],[0,"});\r"]],"start1":7910,"start2":7910,"length1":17,"length2":31}]],"length":9726,"saved":false}
{"ts":1376224085644,"patch":[[{"diffs":[[0,"count;\r\n"],[1,"                var mentioned = obj.entities.user_mentions[0].screen_name;\r\n                \r\n"],[0,"        "]],"start1":7874,"start2":7874,"length1":16,"length2":110}]],"length":9820,"saved":false}
{"ts":1376224096471,"patch":[[{"diffs":[[0,"      \r\n"],[-1,"                \r\n"],[0,"\t\t\t\tres."]],"start1":7968,"start2":7968,"length1":34,"length2":16}]],"length":9802,"saved":false}
{"ts":1376224198128,"patch":[[{"diffs":[[0,"\r\n\r\n"],[-1,"var accounts = [\"thenextweb\",\"medium\",\"mashable\",\"techcrunch\",\"sixrevisions\"];\r\n\r\n"],[0,"app."]],"start1":6732,"start2":6732,"length1":90,"length2":8},{"diffs":[[0,"=-1) {\r\n"],[-1,"\t"],[1,"    \r\n    var results = [];\r\n    var accounts = [\"thenextweb\",\"medium\",\"mashable\",\"techcrunch\",\"sixrevisions\"];\r\n"],[0,"\tvar oau"]],"start1":6971,"start2":6971,"length1":17,"length2":129},{"diffs":[[0,"r oauth = \r\n"],[-1,"\t"],[0,"\t\t{ consumer"]],"start1":7095,"start2":7095,"length1":25,"length2":24},{"diffs":[[0,"rKey\r\n\t\t"],[-1,"\t"],[0,", consum"]],"start1":7142,"start2":7142,"length1":17,"length2":16},{"diffs":[[0,"Secret\r\n"],[-1,"\t"],[0,"\t\t, toke"]],"start1":7187,"start2":7187,"length1":17,"length2":16},{"diffs":[[0,"i5ZoB\"\r\n"],[-1,"\t"],[0,"\t\t, toke"]],"start1":7252,"start2":7252,"length1":17,"length2":16},{"diffs":[[0,"c\"\r\n"],[-1,"\t\t"],[0,"\t}\r\n\t"],[-1,"\t  "],[0,", ur"]],"start1":7320,"start2":7320,"length1":18,"length2":13},{"diffs":[[0,"son?'\r\n\t"],[-1,"\t  "],[0,", params"]],"start1":7390,"start2":7390,"length1":19,"length2":16},{"diffs":[[0,"\r\n\t\t"],[-1,"\t"],[0,"{ \r\n"],[-1,"\t"],[0,"\t\t\ti"]],"start1":7409,"start2":7409,"length1":14,"length2":12},{"diffs":[[0,"        "],[-1,"  "],[-1,"  "],[0,"screen_n"]],"start1":7448,"start2":7448,"length1":20,"length2":16},{"diffs":[[0,"b\"\r\n"],[-1,"\t\t"],[0,"\t};"],[1,"\t"],[0,"\r\n"],[-1,"\t\t\t"],[1,"    "],[0,"url "]],"start1":7478,"start2":7478,"length1":18,"length2":18},{"diffs":[[0,"(params)"],[1,";"],[0,"\r\n\t"],[-1,"\t\t"],[1,"\r\n\r\n    "],[0,"request."]],"start1":7531,"start2":7531,"length1":21,"length2":28}]],"length":9821,"saved":false}
{"ts":1376224352229,"patch":[[{"diffs":[[0,"\t}\r\n\t\t})"],[1,";"],[0,"\r\n\t"],[-1,"//"],[1,"\r\n    function getTweets(i){\r\n        if (i<accounts.length) {\r\n        request.post({url:'https://api.parse.com/1/classes/UserDoc',json:true,headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey},\r\n            body:accounts[i]}, function (e,r,b){\r\n            console.log(\"WROTE NEW USER TO PARSE.....\");\r\n            getTweets(i+1);\r\n        });    \r\n        }\r\n    "],[0,"}\r\n    \r"]],"start1":8082,"start2":8082,"length1":21,"length2":428}]],"length":10228,"saved":false}
{"ts":1376224396891,"patch":[[{"diffs":[[0,"ons\"];\r\n"],[1,"    \r\n"],[0,"\tvar oau"]],"start1":7084,"start2":7084,"length1":16,"length2":22},{"diffs":[[0,"en_name:"],[-1,"\""],[0,"th"],[-1,"enextweb\""],[1,"isScreenName,\r\n            count:5"],[0,"\r\n\t};\t\r\n"]],"start1":7466,"start2":7466,"length1":28,"length2":52},{"diffs":[[0,"s);\r\n\t\r\n"],[-1,"\r\n"],[0,"    requ"]],"start1":7567,"start2":7567,"length1":18,"length2":16}]],"length":10256,"saved":false}
{"ts":1376224675875,"patch":[[{"diffs":[[0,"\n\t\r\n"],[-1,"    request.get({url:encodeURI(url), oauth:oauth}, function (e, r, body) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tconsole.log(\"body gtrom twitter-----------\"+body);\r\n\t\t\tif (!e || typeof e == \"undefined\") {\r\n                \r\n                var obj = JSON.parse(body);\r\n                var url = obj.entities.urls[0].url;\r\n                var rts = obj.retweet_count;\r\n                var mentioned = obj.entities.user_mentions[0].screen_name;\r\n                \r\n\t\t\t\tres.json({url:url,rts:rts,obj:obj});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tres.json({error:e});\r\n\t\t\t}\r\n\t\t});\r\n\t\r\n    function getTweets(i){\r\n        if (i<accounts.length) {\r\n        request.post({url:'https://api.parse.com/1/classes/UserDoc',json:true,headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey},\r\n            body:accounts[i]}, function (e,r,b){\r\n            console.log(\"WROTE NEW USER TO PARSE.....\");\r\n            getTweets(i+1);\r\n        });    "],[1,"\t\r\n    function getTweets(i){\r\n        if (i<accounts.length) {\r\n        request.post({url:'https://api.parse.com/1/classes/UserDoc',json:true,headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey},\r\n            body:accounts[i]}, function (e,r,b){\r\n            console.log(\"WROTE NEW USER TO PARSE.....\");\r\n            getTweets(i+1);\r\n        });\r\n            request.get({url:encodeURI(url), oauth:oauth}, function (e, r, body) {\r\n        \t\tconsole.log(e);\r\n    \t\t\tconsole.log(\"body gtrom twitter-----------\"+body);\r\n    \t\t\tif (!e || typeof e == \"undefined\") {\r\n                    \r\n                    var obj = JSON.parse(body);\r\n                    var url = obj.entities.urls[0].url;\r\n                    var rts = obj.retweet_count;\r\n                    var mentioned = obj.entities.user_mentions[0].screen_name;\r\n                    \r\n                    // push\r\n                    results.push({url:url,rts:rts,obj:obj});\r\n                    getTweets(i+1);\r\n                }\r\n                else {\r\n    \t\t\t\t//res.json({error:e});\r\n                }\r\n            });\r\n"],[0,"\r\n  "]],"start1":7571,"start2":7571,"length1":946,"length2":1132}]],"length":10442,"saved":false}
{"ts":1376224784977,"patch":[[{"diffs":[[0,"on?'"],[-1,"\r\n\t, params = \r\n\t\t{ \r\n\t\t\tinclude_entities:true,\r\n            screen_name:thisScreenName,\r\n            count:5\r\n\t};\t\r\n    url += require('querystring').stringify(params);\r\n\t\r\n\t\r\n    function getTweets(i){\r\n        if (i<accounts.length) {\r\n        request.post({url:'https://api.parse.com/1/classes/UserDoc',json:true,headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey},\r\n            body"],[1,";\r\n\t\r\n    function getTweets(i){\r\n        if (i<accounts.length) {\r\n        \r\n            var params = \r\n\t\t    {    \r\n\t\t\t    include_entities:true,\r\n                screen_name"],[0,":account"],[-1,"s"],[0,"[i]"],[-1,"}, function (e,r,b){\r\n            console.log(\"WROTE NEW USER TO PARSE.....\");\r\n            getTweets(i+1"],[1,",\r\n                count:5\r\n\t        };\t\r\n            url += require('querystring').stringify(params"],[0,");\r\n"]],"start1":7397,"start2":7397,"length1":555,"length2":295},{"diffs":[[0,"rams);\r\n        "],[-1,"});"],[0,"\r\n            re"]],"start1":7684,"start2":7684,"length1":35,"length2":32},{"diffs":[[0,"  // pus"],[-1,"h"],[0,""],[1,""],[0,"\r\n      "]],"start1":8215,"start2":8215,"length1":17,"length2":16}]],"length":10178,"saved":false}
{"ts":1376224800789,"patch":[[{"diffs":[[0,"  // pus"],[1,"h"],[0,"\r\n      "]],"start1":8215,"start2":8215,"length1":16,"length2":17},{"diffs":[[0," {\r\n    "],[-1,"\t\t\t\t"],[1,"                "],[0,"//res.js"]],"start1":8364,"start2":8364,"length1":20,"length2":32},{"diffs":[[0,"   });\r\n"],[-1,"\r\n"],[0,"        "]],"start1":8440,"start2":8440,"length1":18,"length2":16}]],"length":10189,"saved":false}
{"ts":1376224943045,"patch":[[{"diffs":[[0,"--\"+body);\r\n"],[1,"                \r\n                var obj,rts,url,mentioned;\r\n                \r\n"],[0,"    \t\t\tif (!"]],"start1":7860,"start2":7860,"length1":24,"length2":104},{"diffs":[[0,"        "],[-1,"var "],[0,"obj = JS"]],"start1":8031,"start2":8031,"length1":20,"length2":16},{"diffs":[[0,"    "],[-1,"var url = obj.entities.urls[0].url;\r\n                    var rts = obj.retweet_count;"],[1,"rts = obj.retweet_count;\r\n                    \r\n                    if (obj.entities.urls.length>0){\r\n                        url = obj.entities.urls[0].url;\r\n                    }\r\n                    if (obj.entities.user_mentions.length>0){"],[0,"\r\n  "]],"start1":8080,"start2":8080,"length1":93,"length2":251},{"diffs":[[0,"        "],[-1,"var"],[1,"   "],[0," mention"]],"start1":8341,"start2":8341,"length1":19,"length2":19},{"diffs":[[0,"_name;\r\n"],[1,"                    }\r\n"],[0,"        "]],"start1":8401,"start2":8401,"length1":16,"length2":39}]],"length":10446,"saved":false}
{"ts":1376225084134,"patch":[[{"diffs":[[0,"url:url,"],[1,"mentioned:mentioned,"],[0,"rts:rts,"]],"start1":8517,"start2":8517,"length1":16,"length2":36}]],"length":10466,"saved":false}
{"ts":1376225121654,"patch":[[{"diffs":[[0,":account"],[1,"s"],[0,"[i],\r\n  "]],"start1":7577,"start2":7577,"length1":16,"length2":17}]],"length":10467,"saved":false}
{"ts":1376225155260,"patch":[[{"diffs":[[0,"\n        }\r\n"],[1,"        res.json({ok:results});\r\n"],[0,"    }\r\n    \r"]],"start1":8725,"start2":8725,"length1":24,"length2":57}]],"length":10500,"saved":false}
{"ts":1376225317433,"patch":[[{"diffs":[[0," = [];\r\n    "],[1,"//"],[0,"var accounts"]],"start1":7000,"start2":7000,"length1":24,"length2":26},{"diffs":[[0,"visions\"];\r\n"],[1,"    var accounts = [\"thenextweb\",\"medium\"];\r\n"],[0,"    \r\n\tvar o"]],"start1":7082,"start2":7082,"length1":24,"length2":69}]],"length":10547,"saved":false}
{"ts":1376225348032,"patch":[[{"diffs":[[0,"g(\"body "],[-1,"gt"],[1,"f"],[0,"rom twit"]],"start1":7878,"start2":7878,"length1":18,"length2":17}]],"length":10546,"saved":false}
{"ts":1376225637224,"patch":[[{"diffs":[[0,"?';\r\n\t\r\n"],[1,"    setTimeout(getTweets(0),5000);\r\n    \r\n"],[0,"    func"]],"start1":7446,"start2":7446,"length1":16,"length2":58}]],"length":10588,"saved":false}
{"ts":1376225878573,"patch":[[{"diffs":[[0,"';\r\n"],[-1,"\t\r\n    setTimeout(getTweets(0),5000);\r\n"],[0,"    "]],"start1":7447,"start2":7447,"length1":47,"length2":8},{"diffs":[[0,"     }\r\n    "],[1,"}\r\n    \r\n    setTimeout(getTweets(0),5000);\r\n"],[0,"    res.json"]],"start1":8778,"start2":8778,"length1":24,"length2":69},{"diffs":[[0,"lts});\r\n"],[-1,"    }\r\n"],[0,"    \r\n})"]],"start1":8856,"start2":8856,"length1":23,"length2":16}]],"length":10587,"saved":false}
{"ts":1376226040896,"patch":[[{"diffs":[[0,"obj.entities"],[1," && obj.entities"],[0,".urls.length"]],"start1":8206,"start2":8206,"length1":24,"length2":40},{"diffs":[[0,"if (obj.entities"],[1," && obj.entities"],[0,".user_mentions.l"]],"start1":8352,"start2":8352,"length1":32,"length2":48}]],"length":10619,"saved":false}
{"ts":1376227347500,"patch":[[{"diffs":[[0,"n?';\r\n    \r\n"],[1,"    var i=0;\r\n"],[0,"    function"]],"start1":7445,"start2":7445,"length1":24,"length2":38},{"diffs":[[0,"\n    \t\t\t"],[1,"//"],[0,"console."]],"start1":7877,"start2":7877,"length1":16,"length2":18},{"diffs":[[0,"              \r\n"],[1,"                console.log(\"body from twitter-----------\"+body);\r\n                \r\n                \r\n"],[0,"                "]],"start1":7940,"start2":7940,"length1":32,"length2":135}]],"length":10738,"saved":false}
{"ts":1376227381731,"patch":[[{"diffs":[[0,"le.log(\""],[-1,"body from twitter"],[1,"request----------------------"],[0,"--------"]],"start1":7977,"start2":7977,"length1":33,"length2":45},{"diffs":[[0,"--------------\"+"],[-1,"body"],[1,"i"],[0,");\r\n            "]],"start1":8011,"start2":8011,"length1":36,"length2":33}]],"length":10747,"saved":false}
{"ts":1376228631119,"patch":[[{"diffs":[[0,"              \r\n"],[1,"                console.log(\"body------------------------\"+body);\r\n                \r\n"],[0,"                "]],"start1":8034,"start2":8034,"length1":32,"length2":117}]],"length":10832,"saved":false}
{"ts":1376228634499,"patch":[[{"diffs":[[0,"------------"],[-1,"---------"],[0,"\"+body);\r\n  "]],"start1":8086,"start2":8086,"length1":33,"length2":24}]],"length":10823,"saved":false}
{"ts":1376228827230,"patch":[[{"diffs":[[0,"ms);\r\n        \r\n"],[1,"            var reqObj;\r\n        \r\n            if (i==0) {\r\n                reqObj = {url:encodeURI(url), oauth:oauth};\r\n            }\r\n            else {\r\n                reqObj = {url:encodeURI(url)};                \r\n            }\r\n            \r\n"],[0,"            requ"]],"start1":7751,"start2":7751,"length1":32,"length2":281}]],"length":11072,"saved":false}
{"ts":1376228833363,"patch":[[{"diffs":[[0,"get("],[-1,"{url:encodeURI(url), oauth:oauth}"],[1,"reqObj"],[0,", fu"]],"start1":8036,"start2":8036,"length1":41,"length2":14}]],"length":11045,"saved":false}
{"ts":1376228948099,"patch":[[{"diffs":[[0,"\r\n            \r\n"],[1,"            reqObj = {url:encodeURI(url), oauth:oauth};\r\n            \r\n"],[0,"            requ"]],"start1":8000,"start2":8000,"length1":32,"length2":103}]],"length":11116,"saved":false}
{"ts":1376229101120,"patch":[[{"diffs":[[0,"    "],[-1,"getTweets(i+1);"],[0,"\r\n  "]],"start1":9160,"start2":9160,"length1":23,"length2":8},{"diffs":[[0,"             }\r\n"],[1,"                \r\n                getTweets(i+1);\r\n"],[0,"            });\r"]],"start1":9256,"start2":9256,"length1":32,"length2":83}]],"length":11152,"saved":false}
{"ts":1376229114235,"patch":[[{"diffs":[[0,"------\"+"],[-1,"i"],[1,"reqObj"],[0,");\r\n    "]],"start1":8312,"start2":8312,"length1":17,"length2":22}]],"length":11157,"saved":false}
{"ts":1376229119610,"patch":[[{"diffs":[[0,"----------\"+body"],[1,".substring(0,200)"],[0,");\r\n            "]],"start1":8386,"start2":8386,"length1":32,"length2":49}]],"length":11174,"saved":false}
{"ts":1376229257751,"patch":[[{"diffs":[[0,"--\"+"],[1,"JSON.stringify("],[0,"reqObj)"],[1,")"],[0,";\r\n "]],"start1":8316,"start2":8316,"length1":15,"length2":31}]],"length":11190,"saved":false}
{"ts":1376229549205,"patch":[[{"diffs":[[0,"\r\n\t}"],[1,";"],[0,"\r\n"],[-1,"\t,"],[1,"    \r\n    var i=0;\r\n    function getTweets(i){\r\n        var"],[0," url"]],"start1":7375,"start2":7375,"length1":12,"length2":70},{"diffs":[[0,"';\r\n"],[-1,"    \r\n    var i=0;\r\n    function getTweets(i){\r\n"],[0,"    "]],"start1":7505,"start2":7505,"length1":56,"length2":8}]],"length":11200,"saved":false}
{"ts":1376229775099,"patch":[[{"diffs":[[0,"        var "],[-1,"u"],[1,"reqU"],[0,"rl = 'https:"]],"start1":7430,"start2":7430,"length1":25,"length2":28},{"diffs":[[0,"        "],[-1,"u"],[1,"reqU"],[0,"rl += re"]],"start1":7712,"start2":7712,"length1":17,"length2":20},{"diffs":[[0,"    "],[-1,"\r\n            if (i==0) {\r\n                reqObj = {url:encodeURI(url), oauth:oauth};\r\n            }\r\n            else {\r\n                reqObj = {url:encodeURI(url)};                \r\n            }\r\n            \r\n            reqObj = {url:encodeURI(u"],[1,"    reqObj = {url:encodeURI(reqU"],[0,"rl),"]],"start1":7812,"start2":7812,"length1":261,"length2":40},{"diffs":[[0,"/ push\r\n"],[1,"                    console.log(\"pusghing\"+url);\r\n                    \r\n"],[0,"        "]],"start1":8887,"start2":8887,"length1":16,"length2":88}]],"length":11057,"saved":false}
{"ts":1376229908101,"patch":[[{"diffs":[[0,"            if ("],[1,"typeof "],[0,"obj.entities && "]],"start1":8520,"start2":8520,"length1":32,"length2":39},{"diffs":[[0,"eof obj.entities"],[1," !=\"undefined\""],[0," && obj.entities"]],"start1":8539,"start2":8539,"length1":32,"length2":46},{"diffs":[[0,"    if ("],[1,"typeof "],[0,"obj.enti"]],"start1":8699,"start2":8699,"length1":16,"length2":23},{"diffs":[[0,"entities"],[1," !=\"undefined\""],[0," && obj."]],"start1":8718,"start2":8718,"length1":16,"length2":30}]],"length":11099,"saved":false}
{"ts":1376229920091,"patch":[[{"diffs":[[0,"sghing\"+"],[-1,"url"],[1,"rts"],[0,");\r\n    "]],"start1":8972,"start2":8972,"length1":19,"length2":19}]],"length":11099,"saved":false}
{"ts":1376229923387,"patch":[[{"diffs":[[0,"pusghing"],[1,"..."],[0,"\"+rts);\r"]],"start1":8970,"start2":8970,"length1":16,"length2":19}]],"length":11102,"saved":false}
{"ts":1376230120495,"patch":[[{"diffs":[[0,"                "],[1,"//"],[0,"console.log(\"bod"]],"start1":8159,"start2":8159,"length1":32,"length2":34},{"diffs":[[0,"s.push({"],[1,"foo:'foo',"],[0,"url:url,"]],"start1":9040,"start2":9040,"length1":16,"length2":26}]],"length":11114,"saved":false}
{"ts":1376230237609,"patch":[[{"diffs":[[0,"            "],[-1,"//"],[0,"console.log("]],"start1":8163,"start2":8163,"length1":26,"length2":24},{"diffs":[[0,"      \r\n"],[-1,"                \r\n"],[0,"        "]],"start1":8244,"start2":8244,"length1":34,"length2":16}]],"length":11094,"saved":false}
{"ts":1376230267460,"patch":[[{"diffs":[[0,"              \r\n"],[1,"                getTweets(i+1);\r\n                \r\n"],[0,"                "]],"start1":8236,"start2":8236,"length1":32,"length2":83},{"diffs":[[0,"            "],[-1,"getTweets(i+1);"],[0,"\r\n          "]],"start1":9287,"start2":9287,"length1":39,"length2":24}]],"length":11130,"saved":false}
{"ts":1376230387174,"patch":[[{"diffs":[[0,"Obj));\r\n"],[-1,"                \r\n"],[0,"        "]],"start1":8133,"start2":8133,"length1":34,"length2":16},{"diffs":[[0,"  \r\n"],[-1,"                getTweets(i+1);\r\n                \r\n"],[0,"    "]],"start1":8230,"start2":8230,"length1":59,"length2":8},{"diffs":[[0,"              \r\n"],[1,"                getTweets(i+1);\r\n"],[0,"                "]],"start1":9198,"start2":9198,"length1":32,"length2":65}]],"length":11094,"saved":false}
{"ts":1376230439231,"patch":[[{"diffs":[[0,"\r\n    \r\n"],[-1,"\t"],[1,"    var i=0;\r\n    function getTweets(i){\r\n        var reqUrl = 'https://api.twitter.com/1.1/statuses/user_timeline.json?';\r\n        if (i<accounts.length) {\r\n            "],[0,"var oaut"]],"start1":7137,"start2":7137,"length1":17,"length2":186},{"diffs":[[0,"uth = \r\n"],[-1,"\t"],[1,"            "],[0,"\t{ consu"]],"start1":7321,"start2":7321,"length1":17,"length2":28},{"diffs":[[0,"merKey\r\n"],[1,"        "],[0,"\t\t, cons"]],"start1":7373,"start2":7373,"length1":16,"length2":24},{"diffs":[[0,"Secret\r\n"],[1,"        "],[0,"\t\t, toke"]],"start1":7428,"start2":7428,"length1":16,"length2":24},{"diffs":[[0,"i5ZoB\"\r\n"],[1,"        "],[0,"\t\t, toke"]],"start1":7501,"start2":7501,"length1":16,"length2":24},{"diffs":[[0,"c\"\r\n"],[-1,"\t};\r\n"],[0,"    "],[-1,"\r\n"],[0,"    "],[-1,"var i=0;\r\n    function getTweets(i){\r\n        var reqUrl = 'https://api.twitter.com/1.1/statuses/user_timeline.json?';\r\n        if (i<accounts.length) {\r\n        "],[1,"\t};"],[0,"\r\n  "]],"start1":7577,"start2":7577,"length1":185,"length2":19}]],"length":11132,"saved":false}
{"ts":1376230481959,"patch":[[{"diffs":[[0,"ts = obj"],[-1,""],[0,""],[1,"[0]"],[0,".retweet"]],"start1":8467,"start2":8467,"length1":16,"length2":19},{"diffs":[[0,"  if (typeof obj"],[1,"[0]"],[0,".entities !=\"und"]],"start1":8535,"start2":8535,"length1":32,"length2":35},{"diffs":[[0,"   url = obj"],[1,"[0]"],[0,".entities.ur"]],"start1":8632,"start2":8632,"length1":24,"length2":27},{"diffs":[[0," (typeof obj"],[1,"[0]"],[0,".entities !="]],"start1":8716,"start2":8716,"length1":24,"length2":27},{"diffs":[[0,"tioned = obj"],[1,"[0]"],[0,".entities.us"]],"start1":8824,"start2":8824,"length1":24,"length2":27}]],"length":11147,"saved":false}
{"ts":1376230586536,"patch":[[{"diffs":[[0,"ndefined\" && obj"],[1,"[0]"],[0,".entities.urls.l"]],"start1":8568,"start2":8568,"length1":32,"length2":35},{"diffs":[[0,"\" && obj"],[1,"[0]"],[0,".entitie"]],"start1":8756,"start2":8756,"length1":16,"length2":19}]],"length":11153,"saved":false}
{"ts":1376230738831,"patch":[[{"diffs":[[0,"\n        }\r\n"],[1,"        else {\r\n            res.json({ok:results});            \r\n        }\r\n"],[0,"    }\r\n    \r"]],"start1":9340,"start2":9340,"length1":24,"length2":100},{"diffs":[[0,");\r\n"],[-1,"    res.json({ok:results});\r\n"],[0,"    "]],"start1":9473,"start2":9473,"length1":37,"length2":8}]],"length":11200,"saved":false}
{"ts":1376230938054,"patch":[[{"diffs":[[0," var obj"],[-1,""],[0,""],[1,"s"],[0,",rts,url"]],"start1":8287,"start2":8287,"length1":16,"length2":17},{"diffs":[[0,"     obj"],[1,"s"],[0," = JSON."]],"start1":8417,"start2":8417,"length1":16,"length2":17},{"diffs":[[0,"        "],[1,"\r\n                    for (var j=0;i<objs.length;j++) {\r\n                        "],[0,"rts = ob"]],"start1":8460,"start2":8460,"length1":16,"length2":97},{"diffs":[[0,"ts = obj"],[-1,"[0"],[1,"s[j"],[0,"].retwee"]],"start1":8550,"start2":8550,"length1":18,"length2":19},{"diffs":[[0,"                "],[1,"    "],[0,"if (typeof obj[0"]],"start1":8605,"start2":8605,"length1":32,"length2":36},{"diffs":[[0,"  if (typeof obj"],[-1,"[0"],[1,"s[j"],[0,"].entities !=\"un"]],"start1":8623,"start2":8623,"length1":34,"length2":35},{"diffs":[[0,"ndefined\" && obj"],[-1,"[0"],[1,"s[j"],[0,"].entities.urls."]],"start1":8657,"start2":8657,"length1":34,"length2":35},{"diffs":[[0,"        "],[1," "],[1,"   "],[0,"url = ob"]],"start1":8720,"start2":8720,"length1":16,"length2":20},{"diffs":[[0,"   url = obj"],[-1,"[0"],[1,"s[j"],[0,"].entities.u"]],"start1":8729,"start2":8729,"length1":26,"length2":27},{"diffs":[[0,"ls[0].url;\r\n"],[1,"    "],[0,"            "]],"start1":8757,"start2":8757,"length1":24,"length2":28},{"diffs":[[0,"                "],[1,"    "],[0,"if (typeof obj[0"]],"start1":8800,"start2":8800,"length1":32,"length2":36},{"diffs":[[0," (typeof obj"],[-1,"[0"],[1,"s[j"],[0,"].entities !"]],"start1":8822,"start2":8822,"length1":26,"length2":27},{"diffs":[[0,"ined\" && obj"],[-1,"[0"],[1,"s[j"],[0,"].entities.u"]],"start1":8856,"start2":8856,"length1":26,"length2":27},{"diffs":[[0,"        "],[1," "],[1,"   "],[0,"mentione"]],"start1":8924,"start2":8924,"length1":16,"length2":20},{"diffs":[[0,"ed = obj"],[-1,"[0"],[1,"s[j"],[0,"].entiti"]],"start1":8943,"start2":8943,"length1":18,"length2":19},{"diffs":[[0,"_name;\r\n"],[1,"    "],[0,"        "]],"start1":8988,"start2":8988,"length1":16,"length2":20},{"diffs":[[0,"                "],[-1,"\r\n"],[1,"    \r\n    "],[0,"                "]],"start1":9027,"start2":9027,"length1":34,"length2":42},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"console.log(\"pus"]],"start1":9086,"start2":9086,"length1":32,"length2":36},{"diffs":[[0,"                "],[-1,"\r\n"],[1,"    \r\n    "],[0,"                "]],"start1":9143,"start2":9143,"length1":34,"length2":42},{"diffs":[[0,"sh({"],[-1,"foo:'foo',"],[0,"url:"]],"start1":9199,"start2":9199,"length1":18,"length2":8},{"diffs":[[0,":rts"],[-1,",obj:obj"],[0,"});"],[1,"   "],[0,"\r\n  "]],"start1":9234,"start2":9234,"length1":19,"length2":14},{"diffs":[[0,"                "],[1,"}"],[0,"\r\n              "]],"start1":9250,"start2":9250,"length1":32,"length2":33}]],"length":11320,"saved":false}
{"ts":1376230974823,"patch":[[{"diffs":[[0,"sh({url:url,"],[1,"text:objs[j].text,"],[0,"mentioned:me"]],"start1":9199,"start2":9199,"length1":24,"length2":42}]],"length":11338,"saved":false}
{"ts":1376231094243,"patch":[[{"diffs":[[0,"var j=0;"],[-1,"i"],[1,"j"],[0,"<objs.le"]],"start1":8495,"start2":8495,"length1":17,"length2":17}]],"length":11338,"saved":false}
{"ts":1376231284596,"patch":[[{"diffs":[[0,"  count:"],[-1,"5"],[1,"3"],[0,"\r\n\t     "]],"start1":7721,"start2":7721,"length1":17,"length2":17}]],"length":11338,"saved":false}
{"ts":1376231301806,"patch":[[{"diffs":[[0," \t\t\t"],[-1,"//console.log(\"body from twitter-----------\"+body);\r\n                \r\n                "],[0,"cons"]],"start1":8007,"start2":8007,"length1":95,"length2":8},{"diffs":[[0,"                "],[1,"//"],[0,"console.log(\"bod"]],"start1":8092,"start2":8092,"length1":32,"length2":34}]],"length":11253,"saved":false}
{"ts":1376231372926,"patch":[[{"diffs":[[0,"s.push({"],[1,"account:accounts[i],"],[0,"url:url,"]],"start1":9110,"start2":9110,"length1":16,"length2":36}]],"length":11273,"saved":false}
{"ts":1376231454647,"patch":[[{"diffs":[[0,"});\r\n\t}\r\n});\r\n\r\n"],[1,"app.post(\"/fetch\",function(req, res){\r\n    \r\n    \r\n});\r\n\r\n"],[0,"app.get(\"/last\","]],"start1":6720,"start2":6720,"length1":32,"length2":90}]],"length":11331,"saved":false}
{"ts":1376231464509,"patch":[[{"diffs":[[0," res){\r\n    "],[-1,"\r\n"],[0,"    \r\n});\r\n\r"]],"start1":6767,"start2":6767,"length1":26,"length2":24}]],"length":11329,"saved":false}
{"ts":1376231532807,"patch":[[{"diffs":[[0,"        "],[-1,"\t"],[1,"    "],[0,"{ consum"]],"start1":7389,"start2":7389,"length1":17,"length2":20},{"diffs":[[0,"        "],[1,"    "],[-1,"\t\t"],[1,"    "],[0,", consum"]],"start1":7440,"start2":7440,"length1":18,"length2":24},{"diffs":[[0,"et\r\n        "],[1,"  "],[-1,"\t\t"],[1,"      "],[0,", token: \"48"]],"start1":7497,"start2":7497,"length1":26,"length2":32},{"diffs":[[0,"        "],[-1,"\t\t"],[1,"        "],[0,", token_"]],"start1":7580,"start2":7580,"length1":18,"length2":24},{"diffs":[[0,"        "],[-1,"\t"],[1,"    "],[0,"};\r\n    "]],"start1":7658,"start2":7658,"length1":17,"length2":20},{"diffs":[[0,"ams = \r\n"],[-1,"\t\t"],[1,"        "],[0,"    {   "]],"start1":7693,"start2":7693,"length1":18,"length2":24},{"diffs":[[0," {    \r\n"],[-1,"\t\t\t"],[1,"            "],[0,"    incl"]],"start1":7712,"start2":7712,"length1":19,"length2":28},{"diffs":[[0,"ount:3\r\n"],[-1,"\t"],[1,"    "],[0,"        "]],"start1":7819,"start2":7819,"length1":17,"length2":20}]],"length":11371,"saved":false}
{"ts":1376231540380,"patch":[[{"diffs":[[0,"  \r\n"],[-1,"    var i=0;\r\n"],[0,"    "]],"start1":7197,"start2":7197,"length1":22,"length2":8}]],"length":11357,"saved":false}
{"ts":1376231643380,"patch":[[{"diffs":[[0,"req, res){\r\n"],[1,"    \r\n    console.log(\"register new user\");\r\n        \r\n    var username = req.body[\"username\"],\r\n\t\tpassword = req.body[\"password\"];\r\n    \r\n"],[0,"        \r\n})"]],"start1":6763,"start2":6763,"length1":24,"length2":163}]],"length":11496,"saved":false}
{"ts":1376231665066,"patch":[[{"diffs":[[0,"og(\""],[-1,"register new user"],[1,"fetch.."],[0,"\");\r"]],"start1":6794,"start2":6794,"length1":25,"length2":15}]],"length":11486,"saved":false}
{"ts":1376231687082,"patch":[[{"diffs":[[0,"   var u"],[-1,"sername"],[1,"rls"],[0," = req.b"]],"start1":6821,"start2":6821,"length1":23,"length2":19},{"diffs":[[0,".body[\"u"],[-1,"sername"],[1,"rls"],[0,"\"],\r\n\t\tp"]],"start1":6838,"start2":6838,"length1":23,"length2":19}]],"length":11478,"saved":false}
{"ts":1376231691158,"patch":[[{"diffs":[[0,"ls\"]"],[-1,",\r\n\t\tpassword = req.body[\"password\"]"],[0,";\r\n "]],"start1":6847,"start2":6847,"length1":44,"length2":8}]],"length":11442,"saved":false}
{"ts":1376231793614,"patch":[[{"diffs":[[0,"\t});\t\r\n\t"],[-1,"\r\n\t"],[0,""],[1,""],[0,"}\r\n\telse"]],"start1":6662,"start2":6662,"length1":19,"length2":16},{"diffs":[[0,"rls\"];\r\n    "],[-1,"\r\n    "],[1,"var results = [];\r\n    \r\n    function getUrls(i){\r\n        var reqUrl = 'https://api.twitter.com/1.1/statuses/user_timeline.json?';\r\n        if (i<urls.length) {\r\n            \r\n            var reqObj;\r\n            reqObj = {url:encodeURI(reqUrl)};\r\n            \r\n            request.get(reqObj, function (e, r, body) {\r\n        \t\tconsole.log(e);\r\n    \t\t\tconsole.log(\"request---------------------------------\"+JSON.stringify(reqObj));\r\n                //console.log(\"body---------------\"+body.substring(0,200));\r\n                \r\n                var objs,rts,url,mentioned;\r\n                \r\n    \t\t\tif (!e || typeof e == \"undefined\") {\r\n                    \r\n                    objs = JSON.parse(body);\r\n                    \r\n                    for (var j=0;j<objs.length;j++) {\r\n                        rts = objs[j].retweet_count;\r\n                    \r\n                        if (typeof objs[j].entities !=\"undefined\" && objs[j].entities.urls.length>0){\r\n                            url = objs[j].entities.urls[0].url;\r\n                        }\r\n                        if (typeof objs[j].entities !=\"undefined\" && objs[j].entities.user_mentions.length>0){\r\n                            mentioned = objs[j].entities.user_mentions[0].screen_name;\r\n                        }\r\n                        \r\n                        // push\r\n                        console.log(\"pusghing...\"+rts);\r\n                        \r\n                        results.push({account:accounts[i],url:url,text:objs[j].text,mentioned:mentioned,rts:rts});   \r\n                    }\r\n                }\r\n                else {\r\n                    //res.json({error:e});\r\n                }\r\n                \r\n                getTweets(i+1);\r\n                \r\n            });\r\n        }\r\n        else {\r\n            res.json({ok:results});            \r\n        }\r\n    }\r\n    \r\n    setTimeout(getUrls(0),5000);\r\n"],[0,"    \r\n});\r\n\r"]],"start1":6843,"start2":6843,"length1":30,"length2":1915}]],"length":13324,"saved":false}
{"ts":1376231856141,"patch":[[{"diffs":[[0,"            "],[-1,"getTweet"],[1,"/////\r\n                \r\n                //if (url) {\r\n    \r\n            \t\tvar sURL = unescape(utils.fixUrl(url));\r\n            \t\t\r\n            \t\trequest({url:sURL,followRedirect:true,maxRedirects:2}, function (error, response, body) {\r\n            \t\t\r\n            \t\t\tif (typeof body!=\"undefined\") {\r\n                            \r\n                            var headPattern = /<head[^>]*>((.|[\\n\\r])*)<\\/head>/im\r\n                            var headMatches = headPattern.exec(body);\r\n                            var $h;\r\n                            \r\n                            if (headMatches.length>0) { // head\r\n                                \r\n                                var head = headMatches[1].replace(/\\n/g,\" \");\r\n                                $h = $(\"<form>\"+head+\"</form>\");\r\n                                \r\n                                // find opengraph\r\n                                $.each($h.find('meta[property^=\"og:\"]'),function(idx,item){\r\n                                    \r\n                                    console.log(\"meta og......\");                    \r\n                                    \r\n                                    var $item = $(item);\r\n                                    var property = $item.attr(\"property\");\r\n                                    \r\n                                    if (property==\"og:image\") {\r\n                                        image = $item.attr(\"content\");\r\n                                        images.push(image);\r\n                                        imgFound = 1;\r\n                                    }\t\t\t\r\n                                    else if (property==\"og:title\") {\r\n                                        title = $item.attr(\"content\");\r\n                                        titleFound=1;\r\n                                    }\r\n                                    else if (property==\"og:description\") {\r\n                                        desc = $item.attr(\"content\");\r\n                                        descFound=1;\r\n                                    }\r\n                                });\t\r\n            \r\n                                console.log(\"title......\");\r\n                                \r\n                                var matches = body.match(/<title>\\s*(.+?)\\s*<\\/title>/);\r\n            \t                if (matches) {\r\n            \t                    title = matches[1];\r\n            \t\t\t\t\t}\r\n                                \r\n            \t\t\t\t\timage = $h.find('link[rel=\"image_src\"],link[rel=\"shortcut icon\"]').attr('href');\r\n            \t\t\t\t\tif (image && image.indexOf('//')==-1) { // prepend baseurl for relative images\t\t\t\t\t\t\r\n            \t\t\t\t\t\timage = baseUrl+image;\r\n            \t\t\t\t\t}\r\n            \t\t\t\t\timages.push(image);\r\n            \t\t\t\t\timgFound = 1;\r\n            \r\n            \t\t\t\t\t$.each($h.find('meta[name=description]'),function(idx,item){\r\n                                    console.log(\"meta desc..\");         \r\n            \t\t\t\t\t\tdesc = $(item).attr(\"content\");\r\n            \t\t\t\t\t});\r\n                                \r\n                                $.each($h.find('meta[name=keywords]'),function(idx,item){\r\n                                    tags.push($(item).attr(\"content\"));\r\n                                });\r\n                                \r\n                                $.each($h.find('link[type=\"application/rss+xml\"]'),function(idx,item){\r\n                                    var rssUrl = $(item).attr(\"href\");\r\n            \t\t\t\t\t    rss = rssUrl;\r\n                                });\r\n                            }\r\n                            \r\n            \t\t\t\t// find images\r\n            \t\t\t\t//oURL = URL.parse(sURL);\r\n            \t\t\t\tvar baseUrl = response.request.uri.href;\r\n            \t\t\t\t\r\n                            var bodyPattern = /<body[^>]*>((.|[\\n\\r])*)<\\/body>/im\r\n                            var bodyMatches = bodyPattern.exec(body);\r\n                            \r\n                            if (bodyMatches.length>0) { // body\r\n                            \r\n                                console.log(\"body--------------------------------\"+bodyMatches[1].substring(0,500));\r\n                            \r\n                                $h = $(\"<form>\"+bodyMatches[1].replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\"\")+\"</form>\");\r\n                            \r\n            \t\t\t\tvar imgs = $h.find('img[src*=png],img[src*=jpg]');\r\n            \t\t\t\t$.each(imgs,function(idx,item){\r\n            \t\t\t\t\tvar src=$(item).attr(\"src\").replace(\"\\t\",\"\");\r\n            \t\t\t\t\tconsole.log(\"image src:\"+src);\r\n            \t\t\t\t\t//src = imgs[i].getAttribute(\"src\");\r\n            \t\t\t\t\tif (src.indexOf('//')==-1) { // prepend baseurl for relative images\t\t\t\t\t\t\r\n            \t\t\t\t\t\tsrc=baseUrl+src;\r\n            \t\t\t\t\t\t//console.log(\"image src put http:\"+src);\r\n            \t\t\t\t\t}\r\n            \t\t\t\t\timages.push(src);\r\n            \t\t\t\t});\r\n            \t\t\t\t\r\n            \t\t\t\t// find social usernames\r\n            \t\t\t\t$.each($h.find('a[href*=\"twitter.com\"]:not(a[href*=\"status\"],a[href*=\"share\"])'),function(idx,item){\r\n                                \r\n                                console.log(\"twitter found......\");  \r\n                                \r\n            \t\t\t\t\tvar twUrl = $(item).attr(\"href\").replace('/#!','');\r\n            \t\t\t\t\ttwUrl = URL.parse(twUrl,true,true);\r\n            \t\t\t\t\tif (twUrl.query && twUrl.query.via){\r\n            \t\t\t\t\t\ttw = twUrl.query.via;\r\n            \t\t\t\t\t}\r\n            \t\t\t\t\telse if (twUrl.query && twUrl.query.screen_name){\r\n            \t\t\t\t\t\ttw = twUrl.query.screen_name;\r\n            \t\t\t\t\t}\r\n            \t\t\t\t\telse {\r\n            \t\t\t\t\t\ttw = twUrl.pathname;\r\n            \t\t\t\t\t}\r\n            \t\t\t\t\t//console.log(\"tw------\"+twUrl.query.via);\r\n            \t\t\t\t\tif (tw===\"\" || tw === null || typeof tw === \"undefined\") {\r\n            \t\t\t\t\t\ttw = \"in1_\";\r\n            \t\t\t\t\t}\r\n            \t\t\t\t\ttw = \"@\"+tw.replace(\"/\",\"\");\r\n            \t\t\t\t});\r\n            \t\t\t\t\r\n            \t\t\t\t$.each($h.find('a[href*=\"facebook.com/\"]:not(a[href*=\"developers\"]):lt(1)'),function(idx,item){\r\n            \t\t\t\t\tvar fbPagesUrl = $(item).attr(\"href\");\r\n            \t\t\t\t\tfbPagesUrl = URL.parse(fbPagesUrl);\r\n            \t\t\t\t\tfb = fbPagesUrl.pathname;\r\n            \t\t\t\t\t//fb = fb.replace(\"/pages\",\"\");\r\n            \t\t\t\t\tfb = fb.replace(\"/\",\"\");\r\n            \t\t\t\t});\r\n            \t\t\t\t\r\n            \t\t\t\t$.each($h.find('a[href*=\"linkedin.com/\"]:lt(1)'),function(idx,item){\r\n            \t\t\t\t\tvar liUrl = $(item).attr(\"href\");\r\n            \t\t\t\t\tliUrl = URL.parse(liUrl);\r\n            \t\t\t\t\tli = liUrl.pathname;\r\n            \t\t\t\t});\r\n            \t\t\t\t\r\n            \t\t\t\t$.each($h.find('a[href*=\"feeds.feedburner.com\"]:lt(1),a:contains(\"rss\")'),function(idx,item){\r\n            \t\t\t\t\tvar rssUrl = $(item).attr(\"href\");\r\n            \t\t\t\t\t//rssUrl = URL.parse(rssUrl);\r\n            \t\t\t\t\t//rss = rssUrl.pathname;\r\n            \t\t\t\t\trss = rssUrl;\r\n            \t\t\t\t});\r\n            \t\t\t\t\r\n            \t\t\t\t$.each($h.find('a[href*=\"pinterest.com/\"]:not([href*=\"pin/create\"])'),function(idx,item){\r\n            \t\t\t\t\tvar pinUrl = $(item).attr(\"href\");\r\n            \t\t\t\t\tpinUrl = URL.parse(pinUrl);\r\n            \t\t\t\t\tpin = pinUrl.pathname;\r\n            \t\t\t\t});\r\n            \t\t\t\t\r\n            \t\t\t\t$.each($h.find('a[href*=\"youtube.com/user/\"]'),function(idx,item){\r\n            \t\t\t\t\tvar ytUrl = $(item).attr(\"href\");\r\n            \t\t\t\t\tytUrl = URL.parse(ytUrl);\r\n            \t\t\t\t\tyt = ytUrl.pathname;\r\n            \t\t\t\t\tyt = yt.replace(\"/user\",\"\");\r\n            \t\t\t\t});\r\n            \r\n            \t\t\t\t//TODO: google+\r\n                            }\r\n            \t\r\n            \t\t\t\t$h = null;\r\n            \t\t\t\tres.json({title:title,desc:desc,resolved:response.request.uri.pathname,images:images,tags:tags,tw:tw,facebook:fb,youtube:yt,linkedin:li,rss:rss,pinterest:pin});\r\n            \t\t\t}\r\n            \t\t\telse {\r\n            \t\t\t\tres.json({error:'problem harvesting:'+url});\r\n            \t\t\t}\r\n            \t\t});\t\r\n                \r\n                /////\r\n                \r\n                getUrl"],[0,"s(i+1);\r\n   "]],"start1":8548,"start2":8548,"length1":32,"length2":8085}]],"length":21377,"saved":false}
{"ts":1376231891363,"patch":[[{"diffs":[[0,"$h = null;\r\n"],[1,"                            \r\n                            results.push({reqested:urls[i],url:url,text:objs[j].text,mentioned:mentioned,rts:rts});  \r\n                            \r\n"],[0,"            "]],"start1":16209,"start2":16209,"length1":24,"length2":203},{"diffs":[[0,"            \t\t\t\t"],[1,"//"],[0,"res.json({title:"]],"start1":16400,"start2":16400,"length1":32,"length2":34},{"diffs":[[0,"        \t\t\t\t"],[1,"//"],[0,"res.json({er"]],"start1":16625,"start2":16625,"length1":24,"length2":26}]],"length":21560,"saved":false}
{"ts":1376231968817,"patch":[[{"diffs":[[0,"\r\n            \r\n"],[1,"             var title,\r\n                desc,\r\n            \timage,\r\n            \timages=[],\r\n            \ttags=[],\r\n            \ttw,fb,rss,li,pin,yt,gp,\r\n            \ttitleFound=0,\r\n            \tdescFound=0,\r\n            \timgFound=0;\r\n            \r\n"],[0,"            requ"]],"start1":7102,"start2":7102,"length1":32,"length2":282},{"diffs":[[0,"    "],[-1,"var objs,rts,url,mentioned;\r\n                \r\n    \t\t\tif (!e || typeof e == \"undefined\") {\r\n                    \r\n                    objs = JSON.parse(body);\r\n                    \r\n                    for (var j=0;j<objs.length;j++) {\r\n                        rts = objs[j].retweet_count;\r\n                    \r\n                        if (typeof objs[j].entities !=\"undefined\" && objs[j].entities.urls.length>0){\r\n                            url = objs[j].entities.urls[0].url;\r\n                        }\r\n                        if (typeof objs[j].entities !=\"undefined\" && objs[j].entities.user_mentions.length>0){\r\n                            mentioned = objs[j].entities.user_mentions[0].screen_name;\r\n                        }\r\n                        \r\n                        // push\r\n                        console.log(\"pusghing...\"+rts);\r\n                        \r\n                        results.push({account:accounts[i],url:url,text:objs[j].text,mentioned:mentioned,rts:rts});   \r\n                    }\r\n                }\r\n                else {\r\n                    //res.json({error:e});\r\n                }"],[0,"\r\n  "]],"start1":7647,"start2":7647,"length1":1131,"length2":8}]],"length":20687,"saved":false}
{"ts":1376231973373,"patch":[[{"diffs":[[0,");\r\n"],[-1,"                \r\n                \r\n                \r\n"],[0,"    "]],"start1":7613,"start2":7613,"length1":62,"length2":8}]],"length":20633,"saved":false}
{"ts":1376232037683,"patch":[[{"diffs":[[0,"xUrl(url"],[1,"s[i]"],[0,"));\r\n"],[-1,""],[0,"        "]],"start1":7736,"start2":7736,"length1":21,"length2":25},{"diffs":[[0,"                "],[1,"//"],[0,"console.log(\"bod"]],"start1":11708,"start2":11708,"length1":32,"length2":34},{"diffs":[[0,"  \r\n            "],[1,"    "],[0,"\t\t\t\tvar imgs = $"]],"start1":12010,"start2":12010,"length1":32,"length2":36},{"diffs":[[0,");\r\n            "],[1,"    "],[0,"\t\t\t\t$.each(imgs,"]],"start1":12082,"start2":12082,"length1":32,"length2":36},{"diffs":[[0,"){\r\n            "],[1," "],[1,"   "],[0,"\t\t\t\t\tvar src=$(i"]],"start1":12135,"start2":12135,"length1":32,"length2":36},{"diffs":[[0,"            "],[1,"    "],[0,"\t\t\t\t\tconsole"]],"start1":12207,"start2":12207,"length1":24,"length2":28},{"diffs":[[0,"            "],[1," "],[1,"   "],[0,"\t\t\t\t\t//src ="]],"start1":12260,"start2":12260,"length1":24,"length2":28},{"diffs":[[0,"te(\"src\");\r\n"],[1,"    "],[0,"            "]],"start1":12307,"start2":12307,"length1":24,"length2":28},{"diffs":[[0,"            "],[1,"  "],[1,"  "],[0,"\t\t\t\t\t\tsrc=ba"]],"start1":12415,"start2":12415,"length1":24,"length2":28},{"diffs":[[0,"l+src;\r\n"],[1,"    "],[0,"        "]],"start1":12447,"start2":12447,"length1":16,"length2":20},{"diffs":[[0,"            "],[1,"  "],[1,"  "],[0,"\t\t\t\t\t}\r\n"],[1,"    "],[0,"            "]],"start1":12520,"start2":12520,"length1":32,"length2":40},{"diffs":[[0,");\r\n            "],[1,"   "],[1," "],[0,"\t\t\t\t});\r\n       "]],"start1":12580,"start2":12580,"length1":32,"length2":36},{"diffs":[[0,");\r\n            "],[1,"    "],[0,"\t\t\t\t\r\n          "]],"start1":12605,"start2":12605,"length1":32,"length2":36},{"diffs":[[0,"\t\t\r\n            "],[1,"   "],[1," "],[0,"\t\t\t\t// find soci"]],"start1":12627,"start2":12627,"length1":32,"length2":36},{"diffs":[[0," usernames\r\n"],[1,"    "],[0,"            "]],"start1":12665,"start2":12665,"length1":24,"length2":28},{"diffs":[[0,"                "],[-1,"\r\n"],[1,"    \r\n    "],[0,"                "]],"start1":12815,"start2":12815,"length1":34,"length2":42},{"diffs":[[0,"                "],[1,"    "],[0,"\r\n            \t\t"]],"start1":12928,"start2":12928,"length1":32,"length2":36},{"diffs":[[0,"  \r\n            "],[1,"    "],[0,"\t\t\t\t\tvar twUrl ="]],"start1":12946,"start2":12946,"length1":32,"length2":36},{"diffs":[[0,"            "],[1,"    "],[0,"\t\t\t\t\ttwUrl ="]],"start1":13024,"start2":13024,"length1":24,"length2":28},{"diffs":[[0,");\r\n            "],[1," "],[1,"   "],[0,"\t\t\t\t\tif (twUrl.q"]],"start1":13078,"start2":13078,"length1":32,"length2":36},{"diffs":[[0,"){\r\n            "],[1,"    "],[0,"\t\t\t\t\t\ttw = twUrl"]],"start1":13137,"start2":13137,"length1":32,"length2":36},{"diffs":[[0,"            "],[1," "],[1,"   "],[0,"\t\t\t\t\t}\r\n"],[1,"    "],[0,"            "]],"start1":13186,"start2":13186,"length1":32,"length2":40},{"diffs":[[0,"){\r\n            "],[1,"  "],[1,"  "],[0,"\t\t\t\t\t\ttw = twUrl"]],"start1":13278,"start2":13278,"length1":32,"length2":36},{"diffs":[[0,"e;\r\n            "],[1,"    "],[0,"\t\t\t\t\t}\r\n        "]],"start1":13331,"start2":13331,"length1":32,"length2":36},{"diffs":[[0,"\t}\r\n            "],[1,"  "],[1,"  "],[0,"\t\t\t\t\telse {\r\n   "]],"start1":13355,"start2":13355,"length1":32,"length2":36},{"diffs":[[0,"   \t\t\t\t\telse {\r\n"],[1,"    "],[0,"            \t\t\t\t"]],"start1":13372,"start2":13372,"length1":32,"length2":36},{"diffs":[[0,"            "],[1,"   "],[1," "],[0,"\t\t\t\t\t}\r\n"],[1,"    "],[0,"            "]],"start1":13432,"start2":13432,"length1":32,"length2":40},{"diffs":[[0,");\r\n            "],[1,"   "],[1," "],[0,"\t\t\t\t\tif (tw===\"\""]],"start1":13517,"start2":13517,"length1":32,"length2":36},{"diffs":[[0," {\r\n            "],[1,"    "],[0,"\t\t\t\t\t\ttw = \"in1_"]],"start1":13598,"start2":13598,"length1":32,"length2":36},{"diffs":[[0,"in1_\";\r\n"],[1,"    "],[0,"        "]],"start1":13630,"start2":13630,"length1":16,"length2":20},{"diffs":[[0,"            "],[1,"    "],[0,"\t\t\t\t\ttw = \"@"]],"start1":13662,"start2":13662,"length1":24,"length2":28},{"diffs":[[0,"place(\"/\",\"\");\r\n"],[1,"    "],[0,"            \t\t\t\t"]],"start1":13697,"start2":13697,"length1":32,"length2":36},{"diffs":[[0,");\r\n            "],[1,"    "],[0,"\t\t\t\t\r\n"],[1,"    "],[0,"            \t\t\t\t"]],"start1":13734,"start2":13734,"length1":38,"length2":46},{"diffs":[[0,"){\r\n            "],[1,"    "],[0,"\t\t\t\t\tvar fbPages"]],"start1":13873,"start2":13873,"length1":32,"length2":36},{"diffs":[[0,"            "],[1,"    "],[0,"\t\t\t\t\tfbPages"]],"start1":13938,"start2":13938,"length1":24,"length2":28},{"diffs":[[0,");\r\n            "],[1," "],[1,"   "],[0,"\t\t\t\t\tfb = fbPage"]],"start1":13992,"start2":13992,"length1":32,"length2":36},{"diffs":[[0,"sUrl.pathname;\r\n"],[1,"    "],[0,"            \t\t\t\t"]],"start1":14028,"start2":14028,"length1":32,"length2":36},{"diffs":[[0,");\r\n            "],[1,"  "],[1,"  "],[0,"\t\t\t\t\tfb = fb.rep"]],"start1":14094,"start2":14094,"length1":32,"length2":36},{"diffs":[[0,");\r\n            "],[1,"    "],[0,"\t\t\t\t});\r\n       "]],"start1":14141,"start2":14141,"length1":32,"length2":36},{"diffs":[[0,");\r\n            "],[1,"  "],[1,"  "],[0,"\t\t\t\t\r\n"],[1,"    "],[0,"            \t\t\t\t"]],"start1":14166,"start2":14166,"length1":38,"length2":46},{"diffs":[[0,"){\r\n            "],[1,"   "],[1," "],[0,"\t\t\t\t\tvar liUrl ="]],"start1":14278,"start2":14278,"length1":32,"length2":36},{"diffs":[[0,"            "],[1,"    "],[0,"\t\t\t\t\tliUrl ="]],"start1":14338,"start2":14338,"length1":24,"length2":28},{"diffs":[[0,"            "],[1,"   "],[1," "],[0,"\t\t\t\t\tli = li"]],"start1":14386,"start2":14386,"length1":24,"length2":28},{"diffs":[[0,"e;\r\n            "],[1,"    "],[0,"\t\t\t\t});\r\n       "]],"start1":14425,"start2":14425,"length1":32,"length2":36},{"diffs":[[0,");\r\n            "],[1,"  "],[1,"  "],[0,"\t\t\t\t\r\n"],[1,"    "],[0,"            \t\t\t\t"]],"start1":14450,"start2":14450,"length1":38,"length2":46},{"diffs":[[0,"ion(idx,item){\r\n"],[1,"    "],[0,"            \t\t\t\t"]],"start1":14575,"start2":14575,"length1":32,"length2":36},{"diffs":[[0,");\r\n            "],[1,"    "],[0,"\t\t\t\t\t//rssUrl = "]],"start1":14644,"start2":14644,"length1":32,"length2":36},{"diffs":[[0,");\r\n            "],[1,"    "],[0,"\t\t\t\t\t//rss = rss"]],"start1":14696,"start2":14696,"length1":32,"length2":36},{"diffs":[[0,"            "],[1," "],[1,"   "],[0,"\t\t\t\t\trss = r"]],"start1":14747,"start2":14747,"length1":24,"length2":28},{"diffs":[[0,"l;\r\n            "],[1,"    "],[0,"\t\t\t\t});\r\n       "]],"start1":14779,"start2":14779,"length1":32,"length2":36},{"diffs":[[0,");\r\n            "],[1," "],[1,"   "],[0,"\t\t\t\t\r\n"],[1,"    "],[0,"            \t\t\t\t"]],"start1":14804,"start2":14804,"length1":38,"length2":46},{"diffs":[[0,"){\r\n            "],[1,"    "],[0,"\t\t\t\t\tvar pinUrl "]],"start1":14937,"start2":14937,"length1":32,"length2":36},{"diffs":[[0,");\r\n            "],[1,"    "],[0,"\t\t\t\t\tpinUrl = UR"]],"start1":14994,"start2":14994,"length1":32,"length2":36},{"diffs":[[0,");\r\n            "],[1,"  "],[1,"  "],[0,"\t\t\t\t\tpin = pinUr"]],"start1":15044,"start2":15044,"length1":32,"length2":36},{"diffs":[[0,"e;\r\n            "],[1,"    "],[0,"\t\t\t\t});\r\n       "]],"start1":15089,"start2":15089,"length1":32,"length2":36},{"diffs":[[0,");\r\n            "],[1,"   "],[1," "],[0,"\t\t\t\t\r\n"],[1,"    "],[0,"            \t\t\t\t"]],"start1":15114,"start2":15114,"length1":38,"length2":46},{"diffs":[[0,"){\r\n            "],[1,"   "],[1," "],[0,"\t\t\t\t\tvar ytUrl ="]],"start1":15224,"start2":15224,"length1":32,"length2":36},{"diffs":[[0,"            "],[1,"    "],[0,"\t\t\t\t\tytUrl ="]],"start1":15284,"start2":15284,"length1":24,"length2":28},{"diffs":[[0,"se(ytUrl);\r\n"],[1,"    "],[0,"            "]],"start1":15320,"start2":15320,"length1":24,"length2":28},{"diffs":[[0,"e;\r\n            "],[1,"    "],[0,"\t\t\t\t\tyt = yt.rep"]],"start1":15371,"start2":15371,"length1":32,"length2":36},{"diffs":[[0,"e(\"/user\",\"\");\r\n"],[1,"    "],[0,"            \t\t\t\t"]],"start1":15410,"start2":15410,"length1":32,"length2":36},{"diffs":[[0,"[i],"],[-1,"url:url,text:objs[j].text,mentioned:mentioned,rts:rts"],[1,"title:title,desc:desc,resolved:response.request.uri.pathname,"],[0,"}); "]],"start1":15657,"start2":15657,"length1":61,"length2":69}]],"length":20919,"saved":false}
{"ts":1376232038366,"patch":[[{"diffs":[[0,"pathname"],[-1,","],[0,"});  \r\n "]],"start1":15713,"start2":15713,"length1":17,"length2":16}]],"length":20918,"saved":false}
{"ts":1376232194752,"patch":[[{"diffs":[[0,"p.get(\"/"],[-1,"last"],[0,"\",functi"]],"start1":16355,"start2":16355,"length1":20,"length2":16}]],"length":20914,"saved":false}
{"ts":1376232208258,"patch":[[{"diffs":[[0,"p.get('/"],[1,"hello"],[0,"', funct"]],"start1":289,"start2":289,"length1":16,"length2":21}]],"length":20919,"saved":false}
{"ts":1376232244275,"patch":[[{"diffs":[[0," {\r\n            "],[1,"//"],[0,"res.json({ok:res"]],"start1":19083,"start2":19083,"length1":32,"length2":34},{"diffs":[[0,"n({ok:results});"],[1,"\r\n"],[0,"            \r\n  "]],"start1":19108,"start2":19108,"length1":32,"length2":34},{"diffs":[[0,");\r\n            "],[1,"res.render(\"index\",{results:results});"],[0,"\r\n        }\r\n   "]],"start1":19122,"start2":19122,"length1":32,"length2":70}]],"length":20961,"saved":false}
{"ts":1376232568426,"patch":[[{"diffs":[[0,"h..\");\r\n    "],[-1,"    "],[1,"var URL = require('url');"],[0,"\r\n    var ur"]],"start1":6804,"start2":6804,"length1":28,"length2":49}]],"length":20982,"saved":false}
{"ts":1376232918922,"patch":[[{"diffs":[[0,"ls(i){\r\n        "],[1,"//"],[0,"var reqUrl = 'ht"]],"start1":6924,"start2":6924,"length1":32,"length2":34},{"diffs":[[0,"  \r\n            "],[1,"//"],[0,"var reqObj;\r\n   "]],"start1":7056,"start2":7056,"length1":32,"length2":34},{"diffs":[[0,"j;\r\n            "],[1,"//"],[0,"reqObj = {url:en"]],"start1":7083,"start2":7083,"length1":32,"length2":34},{"diffs":[[0,"  \r\n            "],[1,"//"],[0,"request.get(reqO"]],"start1":7396,"start2":7396,"length1":32,"length2":34},{"diffs":[[0,"dy) {\r\n        \t"],[1,"//"],[0,"\tconsole.log(e);"]],"start1":7452,"start2":7452,"length1":32,"length2":34},{"diffs":[[0,".log(e);\r\n    \t\t"],[1,"//"],[0,"\tconsole.log(\"re"]],"start1":7478,"start2":7478,"length1":32,"length2":34},{"diffs":[[0,"  \r\n            "],[1,"//"],[0,"});\r\n        }\r\n"]],"start1":16223,"start2":16223,"length1":32,"length2":34}]],"length":20996,"saved":false}
{"ts":1376232981094,"patch":[[{"diffs":[[0,"            "],[-1," "],[0,"var title,\r\n"]],"start1":7150,"start2":7150,"length1":25,"length2":24},{"diffs":[[0,"var title,\r\n"],[1,""],[0,"            "]],"start1":7162,"start2":7162,"length1":24,"length2":24},{"diffs":[[0,"            "],[-1,"\t"],[1,"    "],[0,"image,\r\n    "]],"start1":7197,"start2":7197,"length1":25,"length2":28},{"diffs":[[0,"        "],[-1,"\t"],[1,"    "],[0,"images=["]],"start1":7225,"start2":7225,"length1":17,"length2":20},{"diffs":[[0,"        "],[-1,"\t"],[1,"    "],[0,"tags=[],"]],"start1":7253,"start2":7253,"length1":17,"length2":20},{"diffs":[[0,"        "],[1,"   "],[-1,"\t"],[1," "],[0,"tw,fb,rs"]],"start1":7279,"start2":7279,"length1":17,"length2":20},{"diffs":[[0,"        "],[-1,"\t"],[1,"    "],[0,"titleFou"]],"start1":7320,"start2":7320,"length1":17,"length2":20},{"diffs":[[0,"        "],[1,"  "],[-1,"\t"],[1,"  "],[0,"descFoun"]],"start1":7351,"start2":7351,"length1":17,"length2":20},{"diffs":[[0,"        "],[-1,"\t"],[1,"    "],[0,"imgFound"]],"start1":7381,"start2":7381,"length1":17,"length2":20}]],"length":21016,"saved":false}
{"ts":1376233123976,"patch":[[{"diffs":[[0,"ts = [];\r\n    \r\n"],[1,"    console.log(urls);\r\n    \r\n"],[0,"    function get"]],"start1":6890,"start2":6890,"length1":32,"length2":62}]],"length":21046,"saved":false}
{"ts":1376233276875,"patch":[[{"diffs":[[0,"            \t\t\r\n"],[1,"                        console.log(\"--------------------------------------\"+sURL);\r\n                    \r\n"],[0,"            \t\t\ti"]],"start1":7962,"start2":7962,"length1":32,"length2":139}]],"length":21153,"saved":false}
{"ts":1376233570460,"patch":[[{"diffs":[[0,"              \r\n"],[1,"                            \r\n                            console.log(\"psuing:\"+urls[i])\r\n"],[0,"                "]],"start1":15781,"start2":15781,"length1":32,"length2":122}]],"length":21243,"saved":false}
{"ts":1376233578273,"patch":[[{"diffs":[[0,"ush({req"],[1,"u"],[0,"ested:ur"]],"start1":15924,"start2":15924,"length1":16,"length2":17}]],"length":21244,"saved":false}
{"ts":1376233639646,"patch":[[{"diffs":[[0,"urls[i])"],[1,";"],[0,"\r\n      "]],"start1":15877,"start2":15877,"length1":16,"length2":17}]],"length":21245,"saved":false}
{"ts":1376233877538,"patch":[[{"diffs":[[0,"(getUrls(0),"],[-1,"5"],[1,"7"],[0,"000);\r\n    \r"]],"start1":16609,"start2":16609,"length1":25,"length2":25}]],"length":21245,"saved":false}
{"ts":1376233898331,"patch":[[{"diffs":[[0,"        "],[-1,"\t\r\n"],[0,"        "]],"start1":15728,"start2":15728,"length1":19,"length2":16},{"diffs":[[0,"        "],[-1,"\t\t\t\t$h = null;"],[1,"    "],[0,"\r\n      "]],"start1":15740,"start2":15740,"length1":30,"length2":20},{"diffs":[[0,"                "],[1,"$h = null;"],[0,"\r\n              "]],"start1":15766,"start2":15766,"length1":32,"length2":42}]],"length":21242,"saved":false}
{"ts":1376233937362,"patch":[[{"diffs":[[0,"              \r\n"],[1,"                            getUrls(i+1);\r\n                            \r\n"],[0,"            \t\t\t\t"]],"start1":16026,"start2":16026,"length1":32,"length2":105},{"diffs":[[0,"            "],[-1,"getUrls(i+1);"],[0,"\r\n          "]],"start1":16501,"start2":16501,"length1":37,"length2":24}]],"length":21302,"saved":false}
{"ts":1376234018621,"patch":[[{"diffs":[[0,"uest.uri"],[-1,".pathname"],[0,"});  \r\n "]],"start1":15988,"start2":15988,"length1":25,"length2":16}]],"length":21293,"saved":false}
{"ts":1376234027322,"patch":[[{"diffs":[[0,"title,desc:desc,"],[1,"images:images,"],[0,"resolved:respons"]],"start1":15951,"start2":15951,"length1":32,"length2":46}]],"length":21307,"saved":false}
{"ts":1376234280172,"patch":[[{"diffs":[[0,"+urls[i]);\r\n"],[1,"                            var resolved = response.request.uri.protocol+\"//\"+response.request.uri.hostname+\"\"+response.request.uri.pathname;\r\n"],[0,"            "]],"start1":15873,"start2":15873,"length1":24,"length2":167},{"diffs":[[0,"lved:res"],[-1,"ponse.request.uri"],[1,"olved"],[0,"});  \r\n "]],"start1":16128,"start2":16128,"length1":33,"length2":21}]],"length":21438,"saved":false}
{"ts":1376234317278,"patch":[[{"diffs":[[0,"resolved"],[1,"Uri"],[0," = respo"]],"start1":15917,"start2":15917,"length1":16,"length2":19},{"diffs":[[0,"uest.uri"],[1,";\r\n                            var resolved = resolvedUri"],[0,".protoco"]],"start1":15943,"start2":15943,"length1":16,"length2":73},{"diffs":[[0,"\"//\"+res"],[-1,"ponse.request.u"],[1,"olvedU"],[0,"ri.hostn"]],"start1":16018,"start2":16018,"length1":31,"length2":22},{"diffs":[[0,"e+\"\"+res"],[-1,"ponse.request.u"],[1,"olvedU"],[0,"ri.pathn"]],"start1":16042,"start2":16042,"length1":31,"length2":22}]],"length":21480,"saved":false}
{"ts":1376234359465,"patch":[[{"diffs":[[0,"  \r\n"],[-1,"                            console.log(\"psuing:\"+urls[i]);\r\n"],[0,"    "]],"start1":15820,"start2":15820,"length1":69,"length2":8}]],"length":21419,"saved":false}
{"ts":1376244053919,"patch":[[{"diffs":[[0,"        "],[-1,"\t\t\t\t\t"],[1,"                    "],[0,"tw = \"@\""]],"start1":13865,"start2":13865,"length1":21,"length2":36},{"diffs":[[0,"    "],[-1,"\t\t\t\t\tvar fbPagesUrl = $(item).attr(\"href\");\r\n                \t\t\t\t\tfbPagesUrl = URL.parse(fbPagesUrl);\r\n                \t\t\t\t\tfb = fbPagesUrl.pathname;\r\n                \t\t\t\t\t//fb = fb.replace(\"/pages\",\"\");\r\n                \t\t\t\t\tfb = fb.replace(\"/\",\"\");\r\n                \t\t\t\t});\r\n                \t\t\t\t\r\n                \t\t\t\t$.each($h.find('a[href*=\"linkedin.com/\"]:lt(1)'),function(idx,item){\r\n                \t\t\t\t\tvar liUrl = $(item).attr(\"href\");\r\n                \t\t\t\t\tliUrl = URL.parse(liUrl);\r\n                \t\t\t\t\tli = liUrl.pathname;\r\n                \t\t\t\t});\r\n                \t\t\t\t\r\n                \t\t\t\t$.each($h.find('a[href*=\"feeds.feedburner.com\"]:lt(1),a:contains(\"rss\")'),function(idx,item){\r\n                \t\t\t\t\tvar rssUrl = $(item).attr(\"href\");\r\n                \t\t\t\t\t//rssUrl = URL.parse(rssUrl);\r\n                \t\t\t\t\t//rss = rssUrl.pathname;\r\n                \t\t\t\t\trss = rssUrl;\r\n                \t\t\t\t});\r\n                \t\t\t\t\r\n                \t\t\t\t$.each($h.find('a[href*=\"pinterest.com/\"]:not([href*=\"pin/create\"])'),function(idx,item){\r\n                \t\t\t\t\tvar pinUrl = $(item).attr(\"href\");\r\n                \t\t\t\t\tpinUrl = URL.parse(pinUrl);\r\n                \t\t\t\t\tpin = pinUrl.pathname;\r\n                \t\t\t\t});\r\n                \t\t\t\t\r\n                \t\t\t\t$.each($h.find('a[href*=\"youtube.com/user/\"]'),function(idx,item){\r\n                \t\t\t\t\tvar ytUrl = $(item).attr(\"href\");\r\n                \t\t\t\t\tytUrl = URL.parse(ytUrl);\r\n                \t\t\t\t\tyt = ytUrl.pathname;\r\n                \t\t\t\t\t"],[1,"                    var fbPagesUrl = $(item).attr(\"href\");\r\n                                    fbPagesUrl = URL.parse(fbPagesUrl);\r\n                                    fb = fbPagesUrl.pathname;\r\n                \t\t\t\t\t//fb = fb.replace(\"/pages\",\"\");\r\n                                    fb = fb.replace(\"/\",\"\");\r\n                                });\r\n                \t\t\t\t\r\n                \t\t\t\t$.each($h.find('a[href*=\"linkedin.com/\"]:lt(1)'),function(idx,item){\r\n                                    var liUrl = $(item).attr(\"href\");\r\n                                    liUrl = URL.parse(liUrl);\r\n                                    li = liUrl.pathname;\r\n                                });\r\n            \r\n                                $.each($h.find('a[href*=\"feeds.feedburner.com\"]:lt(1),a:contains(\"rss\")'),function(idx,item){\r\n                                    var rssUrl = $(item).attr(\"href\");\r\n                                    rss = rssUrl;\r\n                                });\r\n            \r\n                \t\t\t\t$.each($h.find('a[href*=\"pinterest.com/\"]:not([href*=\"pin/create\"])'),function(idx,item){\r\n                                    var pinUrl = $(item).attr(\"href\");\r\n                                    pinUrl = URL.parse(pinUrl);\r\n                                    pin = pinUrl.pathname;\r\n                                });\r\n                \t\t\t\t\r\n                \t\t\t\t$.each($h.find('a[href*=\"youtube.com/user/\"]'),function(idx,item){\r\n                                    var ytUrl = $(item).attr(\"href\");\r\n                                    ytUrl = URL.parse(ytUrl);\r\n                                    yt = ytUrl.pathname;\r\n                                    "],[0,"yt ="]],"start1":14099,"start2":14099,"length1":1511,"length2":1696}]],"length":21619,"saved":false}
{"ts":1376244124799,"patch":[[{"diffs":[[0,"[i]));\r\n"],[-1,"            \t\t\r\n"],[0,"        "]],"start1":7833,"start2":7833,"length1":32,"length2":16},{"diffs":[[0,");\r\n            "],[-1,"\t"],[1,"    "],[0,"                "]],"start1":10130,"start2":10130,"length1":33,"length2":36},{"diffs":[[0,"        "],[-1,"\t"],[1,"    "],[0,"        "]],"start1":10186,"start2":10186,"length1":17,"length2":20},{"diffs":[[0,"];\r\n            "],[-1,"\t\t\t\t\t"],[1,"                    "],[0,"}\r\n             "]],"start1":10235,"start2":10235,"length1":37,"length2":52},{"diffs":[[0,"            "],[-1,"\t\t\t\t\t"],[1,"                    "],[0,"image = $h.f"]],"start1":10308,"start2":10308,"length1":29,"length2":44},{"diffs":[[0,"            "],[-1,"\t\t\t\t\t"],[1,"                    "],[0,"if (image &&"]],"start1":10422,"start2":10422,"length1":29,"length2":44},{"diffs":[[0,"    "],[-1,"\t\t\t\t\t\timage = baseUrl+image;\r\n            \t\t\t\t\t}\r\n            \t\t\t\t\timages.push(image);\r\n            \t\t\t\t\t"],[1,"                        image = baseUrl+image;\r\n                                }\r\n                                images.push(image);\r\n                                "],[0,"imgF"]],"start1":10548,"start2":10548,"length1":113,"length2":176}]],"length":21717,"saved":false}
{"ts":1376244162315,"patch":[[{"diffs":[[0,"        "],[-1,"\r\n"],[0,"    "],[-1,"            \t\t\t\t"],[0,"var imgs"]],"start1":12297,"start2":12297,"length1":38,"length2":20},{"diffs":[[0,"            "],[1,"            "],[-1,"\t\t\t\t"],[1,"    "],[0,"$.each(imgs,"]],"start1":12365,"start2":12365,"length1":28,"length2":40},{"diffs":[[0,"                "],[-1,"\t"],[1,"    "],[0,"\t\t\t\tvar src=$(it"]],"start1":12426,"start2":12426,"length1":33,"length2":36},{"diffs":[[0,"            "],[1,"  "],[-1,"\t"],[1,"  "],[0,"\t\t\t\tconsole."]],"start1":12501,"start2":12501,"length1":25,"length2":28},{"diffs":[[0,"            "],[-1,"\t"],[1,"    "],[0,"\t\t\t\t//src = "]],"start1":12557,"start2":12557,"length1":25,"length2":28},{"diffs":[[0,"                "],[-1,"\t"],[1,"    "],[0,"\t\t\t\tif (src.inde"]],"start1":12615,"start2":12615,"length1":33,"length2":36},{"diffs":[[0,"            "],[-1,"\t"],[1,"    "],[0,"\t\t\t\t\tsrc=bas"]],"start1":12718,"start2":12718,"length1":25,"length2":28},{"diffs":[[0,"            "],[-1,"\t"],[1,"    "],[0,"\t\t\t\t\t//conso"]],"start1":12761,"start2":12761,"length1":25,"length2":28},{"diffs":[[0,"                "],[-1,"\t"],[1,"    "],[0,"\t\t\t\t}\r\n         "]],"start1":12825,"start2":12825,"length1":33,"length2":36},{"diffs":[[0,"        "],[-1,"\t\t\t\t\t"],[1,"                    "],[0,"images.p"]],"start1":12860,"start2":12860,"length1":21,"length2":36},{"diffs":[[0,"                "],[-1,"\t\t\t\t"],[1,"                "],[0,"});\r\n           "]],"start1":12907,"start2":12907,"length1":36,"length2":48}]],"length":21759,"saved":false}
{"ts":1376244658905,"patch":[[{"diffs":[[0,"        else {\r\n"],[1,"            /*\r\n            request.post({url:'https://api.parse.com/1/classes/Post',json:true,headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey},\r\n                body:req.body}, function (e,r,b){\r\n                console.log(\"Add new post to parse api...\");\r\n\r\n                res.locals.msg={\"success\":\"Perfect. Now you can login.\"};\r\n                \r\n            });\r\n            */\r\n            \r\n            var postRequests = {};\r\n            for(var i=0; i<results.length; ++i) {\r\n                postRequests.push({\r\n                    \"method\": \"POST\",\r\n                    \"path\": \"/1/classes/Post\",\r\n                    \"body\": {\r\n                        \"url\": results[i].resolved,\r\n                        \"title\": results[i].title,\r\n                        \"desc\": results[i].desc\r\n                    }\r\n                });\r\n            }\r\n            \r\n            \r\n            request.post({url:'https://api.parse.com/1/classes/batch',json:true,headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey},\r\n                body:}, function (e,r,b){\r\n                console.log(\"Add new post to parse api...\");\r\n\r\n                res.locals.msg={\"success\":\"Perfect. Now you can login.\"};\r\n                \r\n            });\r\n            \r\n"],[0,"            res."]],"start1":17020,"start2":17020,"length1":32,"length2":1370}]],"length":23097,"saved":false}
{"ts":1376244679928,"patch":[[{"diffs":[[0,"var "],[-1,"i"],[1,"k"],[0,"=0; "],[-1,"i"],[1,"k"],[0,"<res"]],"start1":17535,"start2":17535,"length1":14,"length2":14},{"diffs":[[0,"ngth; ++"],[-1,"i"],[1,"k"],[0,") {\r\n   "]],"start1":17556,"start2":17556,"length1":17,"length2":17},{"diffs":[[0,"results["],[-1,"i"],[1,"k"],[0,"].resolv"]],"start1":17756,"start2":17756,"length1":17,"length2":17},{"diffs":[[0,"results["],[-1,"i"],[1,"k"],[0,"].title,"]],"start1":17811,"start2":17811,"length1":17,"length2":17},{"diffs":[[0,"results["],[-1,"i"],[1,"k"],[0,"].desc\r\n"]],"start1":17862,"start2":17862,"length1":17,"length2":17},{"diffs":[[0,"           });\r\n"],[1,""],[0,"            }\r\n "]],"start1":17907,"start2":17907,"length1":32,"length2":32},{"diffs":[[0,"      \r\n"],[-1,"            \r\n"],[0,"        "]],"start1":17944,"start2":17944,"length1":30,"length2":16}]],"length":23083,"saved":false}
{"ts":1376244685625,"patch":[[{"diffs":[[0," }\r\n            "],[1,"/*"],[0,"\r\n            re"]],"start1":17934,"start2":17934,"length1":32,"length2":34},{"diffs":[[0,"arse api...\");\r\n"],[-1,"\r\n"],[0,"                "]],"start1":18220,"start2":18220,"length1":34,"length2":32},{"diffs":[[0,"           });\r\n"],[1,"            */\r\n"],[0,"            \r\n  "]],"start1":18330,"start2":18330,"length1":32,"length2":48}]],"length":23099,"saved":false}
{"ts":1376244713612,"patch":[[{"diffs":[[0," }\r\n            "],[-1,"/*"],[0,"\r\n"],[1,""],[0,"            requ"]],"start1":17934,"start2":17934,"length1":36,"length2":34},{"diffs":[[0,"   body:"],[1,"postRequests"],[0,"}, funct"]],"start1":18142,"start2":18142,"length1":16,"length2":28},{"diffs":[[0,"           });\r\n"],[1,""],[0,"            */\r\n"]],"start1":18340,"start2":18340,"length1":32,"length2":32},{"diffs":[[0,");\r\n            "],[-1,"*/"],[0,"\r\n            \r\n"]],"start1":18352,"start2":18352,"length1":34,"length2":32}]],"length":23107,"saved":false}
{"ts":1376244724252,"patch":[[{"diffs":[[0,"                "],[1,"res.json({ok:results});    "],[0,"\r\n            })"]],"start1":18321,"start2":18321,"length1":32,"length2":59},{"diffs":[[0,"    "],[-1,"    res.json({ok:results});"],[0,"    "]],"start1":18415,"start2":18415,"length1":35,"length2":8}]],"length":23107,"saved":false}
{"ts":1376244919651,"patch":[[{"diffs":[[0,"s = "],[-1,"{}"],[1,"[]"],[0,";\r\n "]],"start1":17510,"start2":17510,"length1":10,"length2":10}]],"length":23107,"saved":false}
{"ts":1376244999411,"patch":[[{"diffs":[[0,"son({ok:"],[-1,"results"],[1,"b"],[0,"});    \r"]],"start1":18342,"start2":18342,"length1":23,"length2":17}]],"length":23101,"saved":false}
{"ts":1376245029629,"patch":[[{"diffs":[[0,"   body:"],[1,"{requests:"],[0,"postRequ"]],"start1":18142,"start2":18142,"length1":16,"length2":26},{"diffs":[[0,"equests}"],[1,"}"],[0,", functi"]],"start1":18165,"start2":18165,"length1":16,"length2":17}]],"length":23112,"saved":false}
{"ts":1376245425649,"patch":[[{"diffs":[[0,"    "],[-1,"body:{"],[0,"requ"]],"start1":18141,"start2":18141,"length1":14,"length2":8},{"diffs":[[0,"equests}"],[-1,"}"],[0,", functi"]],"start1":18159,"start2":18159,"length1":17,"length2":16}]],"length":23105,"saved":false}
{"contributors":[],"silentsave":false,"ts":1377708206250,"patch":[[{"diffs":[[0,"st')"],[-1,";\r\n    \r\n/* default route */\r\napp.get('/hello', function(req,res){\r\n   res.render(\"index\");\r\n});\r\n\r\n// get basic media and social media data"],[1,",\r\n    cronJob = require('cron').CronJob;\r\n\r\nvar stati = [\r\n        \"A new #jquery social plugin that combines your social feed: http://plugins.in1.com\",\r\n        \"@flowtown blog bookmarking this one: http://www.in1.com/resources/2313e2af898e8af94cd022588b4b5fb4 Love It.\",\r\n        \"Do your domain name, Facebook page and Twitter screen names match your brand? http://in1.com\",\r\n        \"Vigilance and consistency are essential for your social media strategy.\",\r\n        \"#google #apple and #sony todays tech stories from @thenextweb #in1 http://in1.com/soc?url=thenextweb.com\",\r\n        \"Calling all startups. Tell us about your brand and we may feature it @in1dotcom\",\r\n        \"Does your brand have too many social endpoints? Combine them http://in1.com #in1 #SoMe\",\r\n        \"#b2c vs #b2b: social sharing tips for linkedin vs. twitter #infographic http://t.co/Fv5tdy8z\",\r\n        \"Loving the newstyles @jcrew http://in1.com/soc?url=jcrew.com\",\r\n        \"75% of blog administrators are also managing their company's social media channels\",\r\n\t\t\"Write great content, be honest and gain #SoMe influence.\",\r\n        \"@Toyoya - here is your social brand snapsnot #in1 http://in1.com/soc?url=toyota.com\",\r\n        //\"How are brands using #in1 for marketing?\",\r\n        \"Success stories for #entrepreneurs and #startups @YFSMagazine http://in1.com/soc?url=yfsentrepreneur.com\",\r\n        \"From #Gangnam Style to gaming @mashable covers it http://in1.com/soc?url=mashable.com\",\r\n        \"@ReadWriteWeb is still one of my best daily reads http://in1.com/soc?url=readwriteweb.com\",\r\n        \"Are all of those social sharing buttons on your blog are a good idea? http://in1blog.tumblr.com/post/31980230415/6-reasons-why-its-ridiculous-to-have-multiple-social\",\r\n        \"what is @VentureBeat saying on social media today http://in1.com/soc?url=venturebeat.com\",\r\n\t\t\"Brands need to give customers a social snapshot, not 5 different social channels to follow them on http://www.in1.com\",\r\n        \"Did a squatter get your brand name on Facebook, Twitter or YouTube? #in1 can help http://www.in1.com\"\r\n    ];\r\n//var job = new cronJob('00 49 */1 * * 1-5', function(){\r\n//var job = new cronJob('00 */5 * * * 1-5', function(){\r\n\r\nvar job = new cronJob('*/6 * * * *', function(){\r\n    // Runs every six minutes\r\n    \r\n    console.log(\"running cron.............................................................\");\r\n    \r\n    var rnd = Math.floor((Math.random()*(stati.length-1)));\r\n    //if ((rnd%2) === 0){\r\n    if (rnd>=40){\r\n        doTweet(stati[rnd],\"CarolSkelly\",function(e,b){\r\n            \r\n            console.log(\"tweeted done...\"+e+\"------\"+b);\r\n            \r\n        });\r\n    }\r\n    else{\r\n        \r\n        console.log(\"no randome number..\");\r\n        \r\n    }\r\n    \r\n  }, function () {\r\n    // This function is executed when the job stops\r\n    console.log(\"tweeted all\");\r\n  }, \r\n  true,\r\n  \"America/Chicago\"\r\n);\r\n\r\n/* default route */\r\napp.get('/hello', function(req,res){\r\n   res.render(\"index\");\r\n});\r\n\r\napp.get(\"/\",function(req, res){\r\n   \r\n    res.send(\"hello\");\r\n    \r\n});\r\n\r\napp.get(\"/feed\",function(req, res){\r\n   \r\n    var results = [];\r\n    var accounts = [];\r\n    \r\n    var q = req.query[\"q\"];\r\n    var f = req.query[\"format\"];\r\n    var lastId = (req.query[\"lastId\"])||0;\r\n    \r\n    function checkUni(i){\r\n                   \r\n        if (i<results.length) {\r\n        \r\n            // exists?\r\n            var whereClause = {\"origUrl\":results[i].url};\r\n            request.get({url:'https://api.parse.com/1/classes/Post',json:true,qs:{keys:\"origUrl,image\",where:JSON.stringify(whereClause)},headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey}},function(e,r,b){\r\n                \r\n                //console.log(\"does exist?..\"+b.results.length);\r\n                \r\n                if (typeof b.results!=\"undefined\" && b.results.length>0){\r\n                    results[i].exists=\"1\";\r\n                    results[i].image=b.results[0].image;\r\n                }\r\n                \r\n                checkUni(i+1);\r\n            });\r\n        }\r\n        else {\r\n            // done! ---------------------------\r\n            \r\n            request.get({url:'https://api.parse.com/1/classes/Post',json:true,qs:{limit:200,order:\"-createdAt\"},headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey}},function(e2,r2,b2){\r\n                if (b2.results) {\r\n                    \r\n                    request.get({url:'https://api.parse.com/1/classes/Source',json:true,qs:{limit:200,order:\"-createdAt\"},headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey}},function(e3,r3,b3){\r\n                        \r\n                        if (f==\"json\") { \r\n                            res.send({results:results,posts:b2.results,sources:b3.results});\r\n                        } else {\r\n                            res.render(\"index\",{results:results,posts:b2.results,sources:b3.results});\r\n                        }\r\n                        \r\n                    });\r\n                }\r\n                else {\r\n                    \r\n                    res.render(\"500\",{error:\"no results..\"});\r\n                    \r\n                }\r\n                \r\n            });\r\n            \r\n        }\r\n    }\r\n    \r\n    function getTweets(i){\r\n        var reqUrl = 'https://api.twitter.com/1.1/statuses/user_timeline.json?';\r\n        if (i<accounts.length) {\r\n            var oauth = \r\n                { consumer_key: conf.twit.consumerKey\r\n                , consumer_secret: conf.twit.consumerSecret\r\n                , token: \"480346094-HIZrfb9w9D48WGWK6Ib21MxdWzbduRrMWhAi5ZoB\"\r\n                , token_secret: \"D8iqNaFMnKeXnLhhQ9POebtiKgGOAmHAZE9qToSRSc\"\r\n            };\r\n            var params = \r\n            {    \r\n                include_entities:true,\r\n                screen_name:accounts[i].twitter,\r\n                count:5,\r\n                trim_user:1\r\n            };\t\r\n            \r\n            console.log(\"since id.....\"+lastId);\r\n            \r\n            if (lastId>0) {\r\n                params.since_id=lastId; // only get latest\r\n                //params.max_id=lastId+20;\r\n                console.log(\"added since id.....................\");\r\n            }\r\n            \r\n            reqUrl += require('querystring').stringify(params);\r\n        \r\n            var reqObj;\r\n            reqObj = {url:encodeURI(reqUrl), oauth:oauth};\r\n            \r\n            request.get(reqObj, function (e, r, body) {\r\n                console.log(\"request---------------------------------\"+JSON.stringify(reqObj));\r\n                //console.log(\"body---------------\"+body.substring(0,200));\r\n                \r\n                var objs,url,mentioned;\r\n                \r\n                if (!e || typeof e == \"undefined\") {\r\n                    \r\n                    objs = JSON.parse(body);\r\n                    \r\n                    for (var j=0;j<objs.length;j++) {\r\n                        if (typeof objs[j].entities !=\"undefined\" && objs[j].entities.urls.length>0){ // must have url\r\n                            \r\n                            url = objs[j].entities.urls[0].url;\r\n                            var txt = objs[j].text.replace(/ *\\[[^)]*\\] */g,\"\");\r\n                            if (typeof objs[j].entities !=\"undefined\" && objs[j].entities.user_mentions.length>0){\r\n                                mentioned = objs[j].entities.user_mentions[0].screen_name;\r\n                            }\r\n                            \r\n                            results.push({account:accounts[i].twitter,source:accounts[i].name,url:url,text:txt,mentioned:mentioned,rts:objs[j].retweet_count,id:objs[j].id});   \r\n                            \r\n                        }\r\n                    }\r\n                    \r\n                }\r\n                else {\r\n                    //res.json({error:e});\r\n                }\r\n                \r\n                getTweets(i+1);\r\n                \r\n            });\r\n        }\r\n        else {\r\n            //res.json({ok:results});\r\n            checkUni(0);\r\n        }\r\n    }\r\n    \r\n    request.get({url:'https://api.parse.com/1/classes/Source',json:true,qs:{limit:200,order:\"-createdAt\"},headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey}},function(e,r,b){\r\n        if (b.results) {\r\n            \r\n            //var accounts = [\"thenextweb\",\"medium\",\"mashable\",\"techcrunch\",\"sixrevisions\",\"noupemag\",\"geekwire\"];\r\n            accounts = b.results;\r\n            \r\n            console.log(JSON.stringify(accounts));\r\n            \r\n            setTimeout(getTweets(0),5000);\r\n        }\r\n        else {\r\n            //next();\r\n            res.json({error:\"no results\"});\r\n        }\r\n    });\r\n    \r\n});\r\n\r\n// get metadata, images and social accounts"],[0," fro"]],"start1":253,"start2":253,"length1":148,"length2":8839},{"diffs":[[0,"title,\r\n"],[-1,"\t"],[1,"    "],[0,"desc,\r\n\t"]],"start1":9215,"start2":9215,"length1":17,"length2":20},{"diffs":[[0,"gs=[],\r\n"],[-1,"\t"],[1,"    "],[0,"tw,fb,rs"]],"start1":9259,"start2":9259,"length1":17,"length2":20},{"diffs":[[0,"p,\r\n"],[-1,"\ttitleFound=0,\r\n\tdescFound=0,\r\n\timgFound=0"],[1,"    resolved"],[0,";\r\n\t"]],"start1":9292,"start2":9292,"length1":50,"length2":20},{"diffs":[[0,"var "],[-1,"headPattern = /<head[^>]*>((.|[\\n\\r])*)<\\/head>/im\r\n                var headMatches = headPattern.exec(body);\r\n                var $h;\r\n                \r\n                if (headMatches.length>0) { // head\r\n                    \r\n                    var head = headMatches[1].replace(/\\n"],[1,"resolvedUri = response.request.uri;\r\n                var baseUrl = resolvedUri.protocol+\"//\"+resolvedUri.hostname;\r\n                \r\n                var metaObj = harvestMeta(body,baseUrl);\r\n                title = metaObj.title.replace(/ *\\[[^)]*\\] *"],[0,"/g,\""],[-1," "],[0,"\");\r"]],"start1":9544,"start2":9544,"length1":299,"length2":264},{"diffs":[[0,"    "],[-1,"    $h = $(\"<form>\"+head+\"</form>\");\r\n                    \r\n                    // find opengraph\r\n                    $.each($h.find('meta[property^=\"og:\"]'),function(idx,item){\r\n                        \r\n                        console.log(\"meta og......\");                    \r\n     "],[1,"desc = metaObj.desc;\r\n                rss = metaObj.rss;\r\n                image = metaObj.image;\r\n                tags = metaObj.tags;\r\n                \r\n                images = harvestImages(body,baseUrl).images;\r\n"],[0,"    "]],"start1":9821,"start2":9821,"length1":294,"length2":224},{"diffs":[[0,"            "],[-1,"   \r\n        "],[1,"\r\n"],[0,"            "]],"start1":10045,"start2":10045,"length1":37,"length2":26},{"diffs":[[0,"var "],[-1,"$item = $(item);\r\n                        var property = $item.attr(\"property\");\r\n                        \r\n                        if (property==\"og:image\") {\r\n                            image = $item.attr(\"content\");\r\n                            images.push(image)"],[1,"socialObj = harvestSocial(body,baseUrl);\r\n                fb = socialObj.fb;\r\n                tw = socialObj.tw;\r\n                li = socialObj.li;\r\n                yt = socialObj.yt"],[0,";\r\n "]],"start1":10075,"start2":10075,"length1":275,"length2":191},{"diffs":[[0,"    "],[-1,"  "],[-1,"          imgFound = 1"],[1,"pin = socialObj.pin"],[0,";\r\n "]],"start1":10277,"start2":10277,"length1":32,"length2":27},{"diffs":[[0,"            "],[-1,"  "],[-1,"      }\t\t\t"],[0,"\r\n          "]],"start1":10307,"start2":10307,"length1":36,"length2":24},{"diffs":[[0,"    "],[-1,"        else if (property==\"og:title\") {\r\n                            title = $item.attr(\"content\");\r\n                            titleFound=1;\r\n        "],[1,"resolved = resolvedUri.protocol+\"//\"+resolvedUri.hostname+\"\"+resolvedUri.pathname;         \r\n"],[0,"    "]],"start1":10333,"start2":10333,"length1":161,"length2":101},{"diffs":[[0,"                "],[-1,"}"],[0,"\r\n              "]],"start1":10430,"start2":10430,"length1":33,"length2":32},{"diffs":[[0,"    "],[-1,"        else if (property==\"og:description\") {\r\n                            desc = $item.attr(\"content\""],[1,"res.json({title:title,desc:desc,resolved:resolved,images:images,image:image,tags:tags,tw:tw,facebook:fb,youtube:yt,linkedin:li,rss:rss,pinterest:pin});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tres.json({error:'problem harvesting:'+url});\r\n\t\t\t}\r\n\t\t}"],[0,");"],[1,"\t"],[0,"\r\n"],[-1,"                            descFound=1;\r\n                        }\r\n                    "],[1,"\t}\r\n\telse {\r\n\t\tres.json({error:'url is required'});\r\n\t}\r\n"],[0,"});"],[-1,"\t"],[0,"\r\n\r\n"],[-1,"                    console.log(\"title......\");\r\n                    \r\n                    var matches = body.match(/<title>\\s*(.+?)\\s*<\\/title>/"],[1,"// get images from a url\r\napp.get('/harvestImages', function(req,res){ \r\n    \r\n    console.log(\"/harvestImages..\");\r\n\r\n    var URL = require('url'"],[0,");\r\n"],[-1,"\t"],[0,"    "],[-1,"            if (matches) {\r\n\t                    title = matches[1];\r\n\t\t\t\t\t}\r\n                    \r\n\t\t\t\t\timage = $h.find('link[rel=\"image_src\"],link[rel=\"shortcut icon\"]').attr('href');\r\n\t\t\t\t\tif (image && image.indexOf('//')==-1) { // prepend baseurl for relative images\t\t\t\t\t\t\r\n\t\t\t\t\t\timage = baseUrl+image;\r\n\t\t\t\t\t}\r\n\t\t\t\t\timages.push(image);\r\n\t\t\t\t\timgFound = 1;\r\n\r\n\t\t\t\t\t$.each($h.find('meta[name=description]'),function(idx,item){\r\n     "],[1,"\r\n    var url = req.query.url,\r\n    title,\r\n\ticon,\r\n    logo,\r\n    image,\r\n\timages=[],\r\n    resolved;\r\n\t\r\n\tif (url) {\r\n\t\r\n\t\tvar sURL = unescape(utils.fixUrl(url));\r\n\t\t\r\n\t\trequest({url:sURL,followRedirect:true,maxRedirects:3}, function (error, response, body) {\r\n"],[0,"    "]],"start1":10460,"start2":10460,"length1":802,"length2":722},{"diffs":[[0," {\r\n            "],[-1,"       "],[0,"console.log(\"met"]],"start1":11174,"start2":11174,"length1":39,"length2":32},{"diffs":[[0,"og(\""],[-1,"meta desc..\");         \r\n\t\t\t\t\t\tdesc = $(item).attr(\"content\");\r\n\t\t\t\t\t});\r\n                    \r\n                    $.each($h.find('meta[name=keywords]'),function(idx,item){\r\n                        tags.push($(item).attr(\"content\"));\r\n                    });\r\n                    \r\n                    $.each($h.find('link[type=\"application/rss+xml\"]'),function(idx,item){\r\n                        var rssUrl = $(item).attr(\"href\");\r\n\t\t\t\t\t    rss = rssUrl;\r\n                    });\r\n                }\r\n                \r\n\t\t\t\t// find images\r\n\t\t\t\t//oURL = URL.parse(sURL);\r\n\t\t\t\tvar baseUrl = response.request.uri.href;\r\n\t\t\t\t\r\n                var bodyPattern = /<body[^>]*>((.|[\\n\\r])*)<\\/body>/im\r\n                var bodyMatches = bodyPattern.exec(body);\r\n                \r\n                if (bodyMatches.length>0) { // body\r\n                \r\n                    console.log(\"body--------------------------------\"+bodyMatches[1].substring(0,500));\r\n                \r\n                    $h = $(\"<form>\"+bodyMatches[1].replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\"\")+\"</form>\");\r\n                \r\n\t\t\t\tvar imgs = $h.find('img[src*=png],img[src*=jpg]');\r\n\t\t\t\t$.each(imgs,function(idx,item){\r\n\t\t\t\t\tvar src=$(item).attr(\"src\").replace(\"\\t\",\"\");\r\n\t\t\t\t\tconsole.log(\"image src:\"+src);\r\n\t\t\t\t\t//src = imgs[i].getAttribute(\"src\");\r\n\t\t\t\t\tif (src.indexOf('//')==-1) { // prepend baseurl for relative images\t\t\t\t\t\t\r\n\t\t\t\t\t\tsrc=baseUrl+src;\r\n\t\t\t\t\t\t//console.log(\"image src put http:\"+src);\r\n\t\t\t\t\t}\r\n\t\t\t\t\timages.push(src);\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t// find social usernames\r\n\t\t\t\t$.each($h.find('a[href*=\"twitter.com\"]:not(a[href*=\"status\"],a[href*=\"share\"])'),function(idx,item){\r\n                    \r\n                    console.log(\"twitter found......\");  \r\n                    \r\n\t\t\t\t\tvar twUrl = $(item).attr(\"href\").replace('/#!','');\r\n\t\t\t\t\ttwUrl = URL.parse(twUrl,true,true);\r\n\t\t\t\t\tif (twUrl.query && twUrl.query.via){\r\n\t\t\t\t\t\ttw = twUrl.query.via;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (twUrl.query && twUrl.query.screen_name){\r\n\t\t\t\t\t\ttw = twUrl.query.screen_name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttw = twUrl.pathname;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//console.log(\"tw------\"+twUrl.query.via);\r\n\t\t\t\t\tif (tw===\"\" || tw === null || typeof tw === \"undefined\") {\r\n\t\t\t\t\t\ttw = \"in1_\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttw = \"@\"+tw.replace(\"/\",\"\");\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t$.each($h.find('a[href*=\"facebook.com/\"]:not(a[href*=\"developers\"]):lt(1)'),function(idx,item){\r\n\t\t\t\t\tvar fbPagesUrl = $(item).attr(\"href\");\r\n\t\t\t\t\tfbPagesUrl = URL.parse(fbPagesUrl);\r\n\t\t\t\t\tfb = fbPagesUrl.pathname;\r\n\t\t\t\t\t//fb = fb.replace(\"/pages\",\"\");\r\n\t\t\t\t\tfb = fb.replace(\"/\",\"\");\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t$.each($h.find('a[href*=\"linkedin.com/\"]:lt(1)'),function(idx,item){\r\n\t\t\t\t\tvar liUrl = $(item).attr(\"href\");\r\n\t\t\t\t\tliUrl = URL.parse(liUrl);\r\n\t\t\t\t\tli = liUrl.pathname;\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t$.each($h.find('a[href*=\"feeds.feedburner.com\"]:lt(1),a:contains(\"rss\")'),function(idx,item){\r\n\t\t\t\t\tvar rssUrl = $(item).attr(\"href\");\r\n\t\t\t\t\t//rssUrl = URL.parse(rssUrl);\r\n\t\t\t\t\t//rss = rssUrl.pathname;\r\n\t\t\t\t\trss = rssUrl;\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t$.each($h.find('a[href*=\"pinterest.com/\"]:not([href*=\"pin/create\"])'),function(idx,item){\r\n\t\t\t\t\tvar pinUrl = $(item).attr(\"href\");\r\n\t\t\t\t\tpinUrl = URL.parse(pinUrl);\r\n\t\t\t\t\tpin = pinUrl.pathname;\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t$.each($h.find('a[href*=\"youtube.com/user/\"]'),function(idx,item){\r\n\t\t\t\t\tvar ytUrl = $(item).attr(\"href\");\r\n\t\t\t\t\tytUrl = URL.parse(ytUrl);\r\n\t\t\t\t\tyt = ytUrl.pathname;\r\n\t\t\t\t\tyt = yt.replace(\"/user\",\"\");\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//TODO: google+\r\n                }\r\n\t\r\n\t\t\t\t$h = null;\r\n\t\t\t\tres.json({title:title,desc:desc,resolved:response.request.uri.pathname,images:images,tags:tags,tw:tw,facebook:fb,youtube:yt,linkedin:li,rss:rss,pinterest:pin});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tres.json({error:'problem harvesting"],[1,"request error \"+sURL+\".. \"+error);\r\n\t\t\tif (typeof body!=\"undefined\") {\r\n                \r\n                var resolvedUri = response.request.uri;\r\n                var baseUrl = resolvedUri.protocol+\"//\"+resolvedUri.hostname;\r\n                resolved = baseUrl+\"\"+resolvedUri.pathname;   \r\n                \r\n                var metaObj = harvestMeta(body,baseUrl);\r\n                title = metaObj.title.replace(/ *\\[[^)]*\\] */g,\"\");\r\n                icon = metaObj.icon;\r\n                logo = metaObj.logo;\r\n                image = metaObj.image; //primary image from head\r\n                \r\n                var imgsObj = harvestImages(body,baseUrl);\r\n                images = imgsObj.images;\r\n                if (typeof imgsObj.logo!=\"undefined\") {\r\n                    logo = imgsObj.logo;\r\n                }\r\n                \r\n                if (images.length===0) {\r\n                    // go get a screenshot\r\n                    console.log(\"getting shot..\"+resolved);\r\n                    loadShots(resolved,function(e,r,b){\r\n                        //console.log(\"got shot..\"+JSON.stringify(r));\r\n                        //if (r.statusCode!=500){\r\n                            images.push(r.request.uri.href);\r\n                        //}\r\n                        res.json({title:title,resolved:resolved,image:image,images:images,icon:icon,logo:logo});  \r\n                   });\r\n                }\r\n                else {\r\n                    res.json({title:title,resolved:resolved,image:image,images:images,icon:icon,logo:logo});                    \r\n                }      \r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tres.json({error:'problem harvesting images"],[0,":'+u"]],"start1":11199,"start2":11199,"length1":3756,"length2":1660},{"diffs":[[0,"le.log(\""],[1,"/"],[0,"fetch..\""]],"start1":12998,"start2":12998,"length1":16,"length2":17},{"diffs":[[0,"fetch..\");\r\n"],[1,"    \r\n"],[0,"    var URL "]],"start1":13007,"start2":13007,"length1":24,"length2":30},{"diffs":[[0,"re('url');\r\n"],[1,"    var items = req.body;\r\n"],[0,"    var urls"]],"start1":13044,"start2":13044,"length1":24,"length2":51},{"diffs":[[0,"var "],[-1,"results = [];\r\n    \r\n    console.log(urls);\r\n    \r\n    function getUrls(i){\r\n        //var reqUrl = 'https://api.twitter.com/1.1/statuses/user_timeline.json?';\r\n        if (i<urls.length) {\r\n            \r\n            //var reqObj;\r\n            //reqObj = {url:encodeURI(reqUrl)};\r\n            \r\n            var title,\r\n                desc,\r\n                image,\r\n                images=[],\r\n                tags=[],\r\n                tw,fb,rss,li,pin,yt,gp,\r\n                titleFound=0,\r\n                descFound=0,\r\n                imgFound=0;\r\n            \r\n            //request.get(reqObj, function (e, r, body) {\r\n        \t//\tconsole.log(e);\r\n    \t\t//\tconsole.log(\"request---------------------------------\"+JSON.stringify(reqObj));\r\n                //console.log(\"body---------------\"+body.substring(0,200));\r\n                /////\r\n                \r\n                //if (url) {\r\n    \r\n            \t\tvar sURL = unescape(utils.fixUrl(urls[i]));\r\n            \t\trequest({url:sURL,followRedirect:true,maxRedirects:2}, function (error, response, body) {\r\n            \t\t\r\n                        console.log(\"--------------------------------------\"+sURL);\r\n                    \r\n            \t\t\tif (typeof body!=\"undefined\") {\r\n                            \r\n                            var headPattern = /<head[^>]*>((.|[\\n\\r])*)<\\/head>/im\r\n                            var headMatches = headPattern.exec(body);\r\n                            var $h;\r\n                            \r\n                            if (headMatches.length>0) { // head\r\n                                \r\n                                var head = headMatches[1].replace(/\\n/g,\" \");\r\n                                $h = $(\"<form>\"+head+\"</form>\");\r\n                                \r\n                                // find opengraph\r\n                                $.each($h.find('meta[property^=\"og:\"]'),function(idx,item){\r\n                                    \r\n                                    console.log(\"meta og......\");                    \r\n                                    \r\n                                    var $item = $(item);\r\n                                    var property = $item.attr(\"property\");\r\n                                    \r\n                                    if (property==\"og:image\") {\r\n                                        image = $item.attr(\"content\");\r\n                                        images.push(image);\r\n                                        imgFound = 1;\r\n                                    }\t\t\t\r\n                                    else if (property==\"og:title\") {\r\n                                        title = $item.attr(\"content\");\r\n                                        titleFound=1;\r\n                                    }\r\n                                    else if (property==\"og:description\") {\r\n                                        desc = $item.attr(\"content\");\r\n                                        descFound=1;\r\n                                    }\r\n                                });\t\r\n            \r\n                                console.log(\"title......\");\r\n                                \r\n                                var matches = body.match(/<title>\\s*(.+?)\\s*<\\/title>/);\r\n                                if (matches) {\r\n                                    title = matches[1];\r\n                                }\r\n                                \r\n                                image = $h.find('link[rel=\"image_src\"],link[rel=\"shortcut icon\"]').attr('href');\r\n                                if (image && image.indexOf('//')==-1) { // prepend baseurl for relative images\t\t\t\t\t\t\r\n                                    image = baseUrl+image;\r\n                                }\r\n                                images.push(image);\r\n                                imgFound = 1;\r\n            \r\n            \t\t\t\t\t$.each($h.find('meta[name=description]'),function(idx,item){\r\n                                    console.log(\"meta desc..\");         \r\n            \t\t\t\t\t\tdesc = $(item).attr(\"content\");\r\n            \t\t\t\t\t});\r\n                                \r\n                                $.each($h.find('meta[name=keywords]'),function(idx,item){\r\n                                    tags.push($(item).attr(\"content\"));\r\n                                });\r\n                                \r\n                                $.each($h.find('link[type=\"application/rss+xml\"]'),function(idx,item){\r\n                                    var rssUrl = $(item).attr(\"href\");\r\n            \t\t\t\t\t    rss = rssUrl;\r\n                                });\r\n                            }\r\n                            \r\n            \t\t\t\t// find images\r\n            \t\t\t\t//oURL = URL.parse(sURL);\r\n            \t\t\t\tvar baseUrl = response.request.uri.href;\r\n            \t\t\t\t\r\n                            var bodyPattern = /<body[^>]*>((.|[\\n\\r])*)<\\/body>/im\r\n                            var bodyMatches = bodyPattern.exec(body);\r\n                            \r\n                            if (bodyMatches.length>0) { // body\r\n                            \r\n                                //console.log(\"body--------------------------------\"+bodyMatches[1].substring(0,500));\r\n                            \r\n                                $h = $(\"<form>\"+bodyMatches[1].replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\"\")+\"</form>\");\r\n                                var imgs = $h.find('img[src*=png],img[src*=jpg]');\r\n                                $.each(imgs,function(idx,item){\r\n                    \t\t\t\tvar src=$(item).attr(\"src\").replace(\"\\t\",\"\");\r\n                    \t\t\t\tconsole.log(\"image src:\"+src);\r\n                    \t\t\t\t//src = imgs[i].getAttribute(\"src\");\r\n                    \t\t\t\tif (src.indexOf('//')==-1) { // prepend baseurl for relative images\t\t\t\t\t\t\r\n                    \t\t\t\t\tsrc=baseUrl+src;\r\n                    \t\t\t\t\t//console.log(\"image src put http:\"+src);\r\n                    \t\t\t\t}\r\n                                    images.push(src);\r\n                                });\r\n                \t\t\t\t\r\n                \t\t\t\t// find social usernames\r\n                \t\t\t\t$.each($h.find('a[href*=\"twitter.com\"]:not(a[href*=\"status\"],a[href*=\"share\"])'),function(idx,item){\r\n                                    \r\n                                    console.log(\"twitter found......\");  \r\n                                    \r\n                \t\t\t\t\tvar twUrl = $(item).attr(\"href\").replace('/#!','');\r\n                \t\t\t\t\ttwUrl = URL.parse(twUrl,true,true);\r\n                \t\t\t\t\tif (twUrl.query && twUrl.query.via){\r\n                \t\t\t\t\t\ttw = twUrl.query.via;\r\n                \t\t\t\t\t}\r\n                \t\t\t\t\telse if (twUrl.query && twUrl.query.screen_name){\r\n                \t\t\t\t\t\ttw = twUrl.query.screen_name;\r\n                \t\t\t\t\t}\r\n                \t\t\t\t\telse {\r\n                \t\t\t\t\t\ttw = twUrl.pathname;\r\n                \t\t\t\t\t}\r\n                \t\t\t\t\t//console.log(\"tw------\"+twUrl.query.via);\r\n                \t\t\t\t\tif (tw===\"\" || tw === null || typeof tw === \"undefined\") {\r\n                \t\t\t\t\t\ttw = \"in1_\";\r\n                \t\t\t\t\t}\r\n                                    tw = \"@\"+tw.replace(\"/\",\"\");\r\n                \t\t\t\t});\r\n                \t\t\t\t\r\n                \t\t\t\t$.each($h.find('a[href*=\"facebook.com/\"]:not(a[href*=\"developers\"]):lt(1)'),function(idx,item){\r\n                                    var fbPagesUrl = $(item).attr(\"href\");\r\n                                    fbPagesUrl = URL.parse(fbPagesUrl);\r\n                                    fb = fbPagesUrl.pathname;\r\n                \t\t\t\t\t//fb = fb.replace(\"/pages\",\"\");\r\n                                    fb = fb.replace(\"/\",\"\");\r\n                                });\r\n                \t\t\t\t\r\n                \t\t\t\t$.each($h.find('a[href*=\"linkedin.com/\"]:lt(1)'),function(idx,item){\r\n                                    var liUrl = $(item).attr(\"href\");\r\n                                    liUrl = URL.parse(liUrl);\r\n                                    li = liUrl.pathname;\r\n                                });\r\n            \r\n                                $.each($h.find('a[href*=\"feeds.feedburner.com\"]:lt(1),a:contains(\"rss\")'),function(idx,item){\r\n                                    var rssUrl = $(item).attr(\"href\");\r\n                                    rss = rssUrl;\r\n                                });\r\n            \r\n                \t\t\t\t$.each($h.find('a[href*=\"pinterest.com/\"]:not([href*=\"pin/create\"])'),function(idx,item){\r\n                                    var pinUrl = $(item).attr(\"href\");\r\n                                    pinUrl = URL.parse(pinUrl);\r\n                                    pin = pinUrl.pathname;\r\n                                });\r\n                \t\t\t\t\r\n                \t\t\t\t$.each($h.find('a[href*=\"youtube.com/user/\"]'),function(idx,item){\r\n                                    var ytUrl = $(item).attr(\"href\");\r\n                                    ytUrl = URL.parse(ytUrl);\r\n                                    yt = ytUrl.pathname;\r\n                                    yt = yt.replace(\"/user\",\"\");\r\n                \t\t\t\t});\r\n            \r\n            \t\t\t\t//TODO: google+\r\n                            }\r\n                            \r\n                            $h = null;\r\n                            \r\n                            var resolvedUri = response.request.uri;\r\n                            var resolved = resolvedUri.protocol+\"//\"+resolvedUri.hostname+\"\"+resolvedUri.pathname;\r\n                            results.push({requested:urls[i],title:title,desc:desc,images:images,resolved:resolved});  \r\n                            \r\n                            getUrls(i+1);\r\n                            \r\n            \t\t\t\t//res.json({title:title,desc:desc,resolved:response.request.uri.pathname,images:images,tags:tags,tw:tw,facebook:fb,youtube:yt,linkedin:li,rss:rss,pinterest:pin});\r\n            \t\t\t}\r\n            \t\t\telse {\r\n            \t\t\t\t//res.json({error:'problem harvesting:'+url});\r\n            \t\t\t}\r\n            \t\t});\t\r\n                \r\n                /////\r\n                \r\n                \r\n                \r\n            //});\r\n        }\r\n        else {\r\n            /*\r\n            request.post({url:'https://api.parse.com/1/classes/Post',json:true,headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey},\r\n                body:req.body}, function (e,r,b){\r\n                console.log(\"Add new post to parse api...\");\r\n\r\n                res.locals.msg={\"success\":\"Perfect. Now you can login.\"};\r\n                \r\n            });\r\n            */\r\n            \r\n            var postRequests = [];\r\n            for(var k=0; k<results.length; ++k) {\r\n                postRequests.push({\r\n                    \"method\": \"POST\",\r\n                    \"path\": \"/1/classes/Post\",\r\n                    \"body\": {\r\n                        \"url\": results[k].resolved,\r\n                        \"title\": results[k].title,\r\n                        \"desc\": results[k].desc\r\n                    }\r\n                });\r\n            }\r\n            \r\n            request.post({url:'https://api.parse.com/1/classes/batch',json:true,headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey},\r\n                requests:postRequests}, function (e,r,b){\r\n                console.log(\"Add new post to parse api...\");\r\n                res.locals.msg={\"success\":\"Perfect. Now you can login.\"};\r\n                res.json({ok:b});    \r\n            });\r\n            \r\n            \r\n                    \r\n        }\r\n    }\r\n    \r\n    setTimeout(getUrls(0),7000);\r\n    \r\n});\r\n\r\napp.get(\"/\",function(req, res){\r\n   \r\n    //console.log(\"b:\"+req.body.status);\r\n\t//console.log(\"user:\"+JSON.stringify(req.user));\r\n\t//console.log(\"tw:\"+JSON.stringify(req.session));\r\n\t//if (req.user.loggedInWith.indexOf(\"twitter\")!=-1) {\r\n    \r\n    var results = [];\r\n    //var accounts = [\"thenextweb\",\"medium\",\"mashable\",\"techcrunch\",\"sixrevisions\"];\r\n    var accounts = [\"thenextweb\",\"medium\"];\r\n    \r\n    function getTweets(i){\r\n        var reqUrl = 'https://api.twitter.com/1.1/statuses/user_timeline.json?';\r\n        if (i<accounts.length) {\r\n            var oauth = \r\n                { consumer_key: conf.twit.consumerKey\r\n                , consumer_secret: conf.twit.consumerSecret\r\n                , token: \"480346094-HIZrfb9w9D48WGWK6Ib21MxdWzbduRrMWhAi5ZoB\"\r\n                , token_secret: \"D8iqNaFMnKeXnLhhQ9POebtiKgGOAmHAZE9qToSRSc\"\r\n            };\r\n            var params = \r\n            {    \r\n                include_entities:true,\r\n                screen_name:accounts[i],\r\n                count:3\r\n            };\t\r\n            reqUrl += require('querystring').stringify(params);\r\n        \r\n            var reqObj;\r\n            reqObj = {url:encodeURI(reqUrl), oauth:oauth};\r\n            \r\n            request.get(reqObj, function (e, r, body) {\r\n        \t\tconsole.log(e);\r\n    \t\t\tconsole.log(\"request---------------------------------\"+JSON.stringify(reqObj));\r\n                //console.log(\"body---------------\"+body.substring(0,200));\r\n                \r\n                var objs,rts,url,mentioned;\r\n                \r\n    \t\t\tif (!e || typeof e == \"undefined\") {\r\n                    \r\n                    objs = JSON.parse(body);\r\n                    \r\n                    for (var j=0;j<objs.length;j++) {\r\n                        rts = objs[j].retweet_count;\r\n                    \r\n                        if (typeof objs[j].entities !=\"undefined\" && objs[j].entities.urls.length>0){\r\n                            url = objs[j].entities.urls[0].url;\r\n                        }\r\n                        if (typeof objs[j].entities !=\"undefined\" && objs[j].entities.user_mentions.length>0){\r\n                            mentioned = objs[j].entities.user_mentions[0].screen_name;\r\n                        }\r\n                        \r\n                        // push\r\n                        console.log(\"pusghing...\"+rts);\r\n                        \r\n                        results.push({account:accounts[i],url:url,text:objs[j].text,mentioned:mentioned,rts:rts});   \r\n                    }\r\n                }\r\n                else {\r\n                    //res.json({error:e});\r\n                }\r\n                \r\n                getTweets(i+1);\r\n                \r\n            });\r\n        }\r\n        else {\r\n            //res.json({ok:results});\r\n            res.render(\"index\",{results:results});\r\n        }\r\n    }\r\n    \r\n    setTimeout(getTweets(0),5000);\r\n    \r\n});\r\n\r\n/* given a cached url, redirect to proxy image */\r\napp.get('/cache', function(req,res){\r\n    console.log(\"cached\");\r\n    var url = url;\r\n    \r\n     request.get({url:'https://api.parse.com/1/classes/Capture',json:true,qs:{where:JSON.stringify({url:url})},headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey}},function(e,r,b){\r\n        if (b.results[0]) {\r\n            var uuid =  b.results[0].uuid;\r\n            res.redirect(\"/\"+uuid);\r\n        }\r\n        else {\r\n            //next();\r\n        }\r\n    });\r\n});\r\n\r\napp.get('/fff/:id/:size?', function(req,res){\r\n    console.log(\"imageshack proxy\");\r\n    \r\n    var id = req.params.id;\r\n    var size = req.params.size||'full'; //mini,thumb,mobile,large,full\r\n    \r\n    request.get({url:'https://api.parse.com/1/classes/Capture/'+id,json:true,headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey}},function(e,r,b){\r\n        if (b) {\r\n            var item = b;\r\n            request({url:item.link}).pipe(res);\r\n        }\r\n    });\r\n});\r\n\r\n\r\n\r\napp.get('/preview', function(req, res){\r\n    res.render('preview');\r\n});\r\n\r\napp.get('/api', function(req, res){\r\n    res.render('api');\r\n});\r\n\r\napp.get('/proxy', function(req, res){\r\n    if (req.param(\"purl\")) {\r\n        request(unescape(req.param(\"purl\")), function (error, response, body) {\r\n\t\t\tif (!error && response.statusCode == 200) {\r\n\t\t\t\tres.send(body);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tres.json({error:\"Bad URL request.\"});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n    else {\r\n        res.json({error:\"URL is required.\"});\r\n    }\r\n});\r\n\r\n/* The 404 Route (ALWAYS Keep this as the last route) */\r\napp.get('/*', function(req, res){\r\n    res.render('404.ejs');\r\n});\r\n"],[1,"imgs = req.body[\"imgs\"];\r\n    var results = [];\r\n    \r\n    console.log(JSON.stringify(req.body));\r\n    //console.log(\"selected images---\"+imgUrls);\r\n\r\n    if( typeof urls === 'string' ) {\r\n        urls = [urls];\r\n        imgs = [imgs];\r\n    }\r\n    \r\n    if (urls.length!=imgs.length) {\r\n        res.json({error:'select an image for each item'});\r\n        return;\r\n    }\r\n    \r\n    /*\r\n    for (var item in urls) {\r\n        //if (items[item])\r\n        //urls.push(items[item]);\r\n        imgs.push(req.body[\"imgs\"])\r\n    }\r\n    */\r\n    \r\n    function checkUni(i){\r\n                   \r\n        if (i<results.length) {\r\n        \r\n            // exists?\r\n            var whereClause = {\"origUrl\":results[i].requested};\r\n            request.get({url:'https://api.parse.com/1/classes/Post',json:true,qs:{keys:\"origUrl,url\",where:JSON.stringify(whereClause)},headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey}},function(e,r,b){\r\n                \r\n                console.log(\"EXISTING-----------------------------------------------\"+b.results.length);\r\n                \r\n                if (typeof b.results!=\"undefined\" && b.results.length>0){\r\n                    results[i].exists=\"1\";\r\n                }\r\n                else {\r\n                    results[i].exists=\"0\";\r\n                }\r\n                \r\n                checkUni(i+1);\r\n            });\r\n        }\r\n        else {\r\n            // done!\r\n            \r\n            var postRequests=[],q=[];\r\n            for(var k=0; k<results.length; ++k) {\r\n                if (results[k].exists===\"0\"){\r\n                    postRequests.push({\r\n                        \"method\": \"POST\",\r\n                        \"path\": \"/1/classes/Post\",\r\n                        \"body\": {\r\n                            \"url\": results[k].resolved,\r\n                            \"title\": results[k].title,\r\n                            \"desc\": results[k].desc,\r\n                            \"images\": results[k].images,\r\n                            \"image\": results[k].image,\r\n                            \"origUrl\": results[k].requested,\r\n                            \"source\": results[k].source\r\n                        }\r\n                    });\r\n                    q.push(\r\n                        {\r\n                        \"method\": \"POST\",\r\n                        \"path\": \"/1/classes/Queue\",\r\n                        \"body\":{tweet:results[k].title.substring(0,115) + \"-\" + results[k].requested}\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n        \r\n            request.post({url:'https://api.parse.com/1/batch',json:true,headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey},\r\n                body:{requests:postRequests}}, function (e,r,b){\r\n                console.log(\"added batch to parse api...\");\r\n                res.locals.msg={\"success\":\"Items posted.\"};\r\n                \r\n                request.post({url:'https://api.parse.com/1/batch',json:true,headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey},\r\n                    body:{requests:q}}, function (e,r,b){\r\n                    console.log(\"wrote to parse..\"+e);\r\n                    \r\n                    if (e) {\r\n                        res.json({error:\"no write batch\",status:-1});\r\n                    }\r\n                    else {\r\n                        res.json({status:1});      \r\n                    }\r\n                });\r\n            \r\n            });\r\n        }\r\n    }\r\n    \r\n    function getUrls(i){\r\n        //var reqUrl = 'https://api.twitter.com/1.1/statuses/user_timeline.json?';\r\n        if (i<urls.length) {\r\n    \r\n                    var sURL = unescape(utils.fixUrl(urls[i]));\r\n                    request({url:sURL,followRedirect:true,maxRedirects:3}, function (error, response, body) {\r\n                        \r\n                        console.log(\"--------------------------------------\"+sURL);\r\n                        \r\n                        var source = req.body[\"source\"+i];\r\n\r\n                        if (typeof body!=\"undefined\") {\r\n                           \r\n                            var resolvedUri = response.request.uri;\r\n                            var baseUrl = resolvedUri.protocol+\"//\"+resolvedUri.hostname;\r\n                            var resolved = baseUrl+\"\"+resolvedUri.pathname;\r\n                            \r\n                            var metaObj = harvestMeta(body,baseUrl);\r\n                            //var images = harvestImages(body,baseUrl).images;\r\n                            var images=[];\r\n                            var title = metaObj.title.replace(/ *\\[[^)]*\\] */g,\"\");\r\n                            var desc = metaObj.desc;\r\n                            \r\n                            results.push({requested:urls[i],source:source,title:title,desc:desc,image:imgs[i],images:images,resolved:resolved});  \r\n                            \r\n                            console.log(\"---------get url-----------\"+i+1);\r\n                            \r\n                            getUrls(i+1);\r\n                            \r\n                            //res.json({title:title,desc:desc,resolved:response.request.uri.pathname,images:images,tags:tags,tw:tw,facebook:fb,youtube:yt,linkedin:li,rss:rss,pinterest:pin});\r\n                        }\r\n                        else {\r\n                            //res.json({error:'problem harvesting:'+url});\r\n                        }\r\n                    });\r\n        }\r\n        else {\r\n            checkUni(0);\r\n        }\r\n    }\r\n    \r\n    setTimeout(getUrls(0),4000); \r\n});\r\n\r\napp.get('/posts', function(req,res){\r\n    \r\n    //request.get({url:'https://api.parse.com/1/classes/Post',json:true,qs:{where:JSON.stringify({url:url})},headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey}},function(e,r,b){\r\n    request.get({url:'https://api.parse.com/1/classes/Post',json:true,qs:{limit:200,order:\"-createdAt\"},headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey}},function(e,r,b){\r\n        if (b.results) {\r\n            res.json({results:b.results});\r\n        }\r\n        else {\r\n            //next();\r\n            res.json({error:\"no results\"});\r\n        }\r\n    });\r\n    \r\n});\r\n\r\napp.get('/sources', function(req,res){\r\n    \r\n    request.get({url:'https://api.parse.com/1/classes/Source',json:true,qs:{limit:200,order:\"-createdAt\"},headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey}},function(e,r,b){\r\n        if (b.results) {\r\n            res.json({results:b.results});\r\n        }\r\n        else {\r\n            //next();\r\n            res.json({error:\"no results\"});\r\n        }\r\n    });\r\n    \r\n});\r\n\r\napp.post(\"/source\",function(req, res){\r\n    \r\n    console.log(\"post /source..\");\r\n    \r\n    var source = req.body;\r\n    \r\n    request.post({url:'https://api.parse.com/1/classes/Source',json:true,headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey},\r\n        body:source}, function (e,r,b){\r\n        console.log(\"wrote to parse.....\"+e);\r\n        \r\n        if (e) {\r\n            res.json({error:\"no write\"});\r\n        }\r\n        else {\r\n            var objectId = b.objectId;\r\n            res.json(objectId);      \r\n        }\r\n    });\r\n    \r\n});\r\n\r\n/* given a cached url, redirect to proxy image */\r\napp.get('/cache', function(req,res){\r\n    console.log(\"cached\");\r\n    var url = url;\r\n    \r\n    request.get({url:'https://api.parse.com/1/classes/Capture',json:true,qs:{where:JSON.stringify({url:url})},headers:{'X-Parse-Application-Id':conf.parse.appKey,'X-Parse-REST-API-Key':conf.parse.restKey}},function(e,r,b){\r\n        if (b.results[0]) {\r\n            var uuid =  b.results[0].uuid;\r\n            res.redirect(\"/\"+uuid);\r\n        }\r\n        else {\r\n            //next();\r\n        }\r\n    });\r\n});\r\n\r\napp.get('/preview', function(req, res){\r\n    res.render('preview');\r\n});\r\n\r\napp.get('/api', function(req, res){\r\n    res.render('api');\r\n});\r\n\r\napp.get('/proxy', function(req, res){\r\n    if (req.param(\"purl\")) {\r\n        request(unescape(req.param(\"purl\")), function (error, response, body) {\r\n\t\t\tif (!error && response.statusCode == 200) {\r\n\t\t\t\tres.send(body);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tres.json({error:\"Bad URL request.\"});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n    else {\r\n        res.json({error:\"URL is required.\"});\r\n    }\r\n});\r\n\r\n/* The 404 Route (ALWAYS Keep this as the last route) */\r\napp.get('/*', function(req, res){\r\n    res.render('404.ejs');\r\n});\r\n\r\n\r\n\r\n\r\n/* functions ------------------------------------------------------------------ */\r\n\r\nfunction harvestMeta(body,baseUrl) {\r\n    \r\n    var title,\r\n        desc,\r\n        icon,\r\n        logo,\r\n        image,\r\n        tags=[],\r\n        rss,\r\n        titleFound=0,\r\n        descFound=0,\r\n        imgFound=0,\r\n        logoFound=0;\r\n    \r\n    var headPattern = /<head[^>]*>((.|[\\n\\r])*)<\\/head>/im;\r\n    var headMatches = headPattern.exec(body);\r\n    var $h;\r\n    \r\n    console.log(\"harvest meta..\");\r\n    \r\n    if (headMatches.length>0) { // head\r\n        \r\n        var head = headMatches[1].replace(/\\n/g,\" \");\r\n        $h = $(\"<form>\"+head+\"</form>\");\r\n        \r\n        // find opengraph\r\n        $.each($h.find('meta[property^=\"og:\"]'),function(idx,item){\r\n            \r\n            console.log(\"meta og......\");                    \r\n            \r\n            var $item = $(item);\r\n            var property = $item.attr(\"property\");\r\n            \r\n            if (property==\"og:image\") {\r\n                logo = $item.attr(\"content\");\r\n                logoFound=1;\r\n            }\r\n            else if (property==\"og:title\") {\r\n                title = $(\"<div/>\").html($item.attr(\"content\")).text();\r\n                titleFound=1;\r\n            }\r\n            else if (property==\"og:description\") {\r\n                desc = $(\"<div/>\").html($item.attr(\"content\")).text();\r\n                descFound=1;\r\n            }\r\n        });\t\r\n\r\n        console.log(\"title......\");\r\n        \r\n        var matches = body.match(/<title>\\s*(.+?)\\s*<\\/title>/);\r\n        if (matches) {\r\n            title = $(\"<div/>\").html(matches[1]).text(); // decode escaped HTML\r\n        }\r\n        \r\n        icon = $h.find('link[rel=\"shortcut icon\"],link[rel=apple-touch-icon-precomposed]').attr('href');\r\n        if (icon && icon.indexOf('//')==-1) { // prepend baseurl for relative images\t\t\t\t\t\t\r\n            icon = baseUrl+icon;\r\n        }\r\n        \r\n        image = $h.find('link[rel=\"image_src\"]').attr('href');\r\n        if (typeof image!=\"undefined\" && image.length>0 && image.indexOf('//')==-1) {\r\n            image = baseUrl+image;\r\n            //imgFound=1;\r\n        }\r\n                \r\n        if (imgFound===0){\r\n            image = $h.find('meta[name=\"twitter:image\"],meta[property=\"og:image\"]').attr('content');\r\n            if (image && image.indexOf('//')==-1) {\r\n                image = baseUrl+image;\r\n                imgFound=1;\r\n            }       \r\n        }\r\n        \r\n\t\t$.each($h.find('meta[name=description]'),function(idx,item){\r\n            console.log(\"meta desc..\");         \r\n\t\t\tdesc = $(\"<div/>\").html($(item).attr(\"content\")).text();\r\n\t\t});\r\n        \r\n        $.each($h.find('meta[name=keywords]'),function(idx,item){\r\n            tags.push($(item).attr(\"content\"));\r\n        });\r\n        \r\n        $.each($h.find('link[type=\"application/rss+xml\"]'),function(idx,item){\r\n            var rssUrl = $(item).attr(\"href\");\r\n            rss = rssUrl;\r\n        });\r\n    }\r\n    \r\n    var retObj = {};\r\n    retObj.title = title;\r\n    retObj.desc = desc;\r\n    retObj.tags = tags;\r\n    retObj.image = image;\r\n    retObj.icon = icon;\r\n    retObj.logo = logo;\r\n    retObj.rss = rss;\r\n    \r\n    console.log(\"/done harvestMeta..\");\r\n    \r\n    return retObj;\r\n}\r\n\r\nfunction harvestImages(body,baseUrl){\r\n    \r\n    var URL = require('url');\r\n    var images=[];\r\n    var bodyPattern = /<body[^>]*>((.|[\\n\\r])*)<\\/body>/im;\r\n    var bodyMatches = bodyPattern.exec(body);\r\n    var strict = true;\r\n    \r\n    console.log(\"harvest images..\");\r\n    \r\n    var $h;\r\n                            \r\n        if (bodyMatches.length>0) { // body\r\n        \r\n            $h = $(\"<form>\"+bodyMatches[1].replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\"\")+\"</form>\");\r\n            \r\n            var logo = $h.find('img[class*=\"logo\"],img[src*=\"logo\"]').attr('src');\r\n            if (logo && logo.indexOf('//')==-1) {\r\n                logo = baseUrl+logo;\r\n            }\r\n            \r\n            //var imgs = $h.find('img[src*=\".png\"],img[src*=\".jpg\"],img[src*=\".jpeg\"]');\r\n            var imgs = $h.find('img[src*=\"cdn\"],img[src*=\"main\"],img[src*=\"cloudfront\"],img[src*=\"aws\"]'); // typical CDN images\r\n            if (imgs.length>0){\r\n                $.each(imgs,function(idx,item){\r\n                    var src=$(item).attr(\"src\").replace(\"\\t\",\"\");\r\n                    if (src.indexOf('//')!=-1) { // exclude relative images\r\n                        images.push(src);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                imgs = $h.find('img[src*=\"wp-content\"]'); // typical wordpress images\r\n                $.each(imgs,function(idx,item){\r\n                    var src=$(item).attr(\"src\");\r\n                    if (src.indexOf('//')!=-1) { // exclude relative images\r\n                        var w=$(item).attr(\"width\");\r\n                        //var h=$(item).attr(\"height\");\r\n                        if (w>300) {\r\n                            images.push(src);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        \r\n        var retObj = {};\r\n        retObj.images = images;\r\n        retObj.logo = logo;\r\n\r\n        return retObj;\r\n}\r\n\r\nfunction harvestSocial(body,baseUrl){\r\n    \r\n        var URL = require('url');\r\n        var tw,fb,rss,li,pin,yt,gp;\r\n        var bodyPattern = /<body[^>]*>((.|[\\n\\r])*)<\\/body>/im;\r\n        var bodyMatches = bodyPattern.exec(body);\r\n        \r\n        var $h;\r\n                            \r\n        if (bodyMatches.length>0) { // body\r\n        \r\n            //console.log(\"body--------------------------------\"+bodyMatches[1].substring(0,500));\r\n        \r\n            $h = $(\"<form>\"+bodyMatches[1].replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\"\")+\"</form>\");\r\n            \r\n            // find social usernames\r\n\t\t\t$.each($h.find('a[href*=\"twitter.com\"]:not(a[href*=\"status\"],a[href*=\"share\"])'),function(idx,item){\r\n                \r\n                console.log(\"twitter found......\");  \r\n                \r\n\t\t\t\tvar twUrl = $(item).attr(\"href\").replace('/#!','');\r\n\t\t\t\ttwUrl = URL.parse(twUrl,true,true);\r\n\t\t\t\tif (twUrl.query && twUrl.query.via){\r\n\t\t\t\t\ttw = twUrl.query.via;\r\n\t\t\t\t}\r\n\t\t\t\telse if (twUrl.query && twUrl.query.screen_name){\r\n\t\t\t\t\ttw = twUrl.query.screen_name;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttw = twUrl.pathname;\r\n\t\t\t\t}\r\n\t\t\t\t//console.log(\"tw------\"+twUrl.query.via);\r\n\t\t\t\tif (tw===\"\" || tw === null || typeof tw === \"undefined\") {\r\n\t\t\t\t\ttw = \"in1_\";\r\n\t\t\t\t}\r\n                tw = \"@\"+tw.replace(\"/\",\"\");\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t$.each($h.find('a[href*=\"facebook.com/\"]:not(a[href*=\"developers\"]):lt(1)'),function(idx,item){\r\n                var fbPagesUrl = $(item).attr(\"href\");\r\n                fbPagesUrl = URL.parse(fbPagesUrl);\r\n                fb = fbPagesUrl.pathname;\r\n\t\t\t\t//fb = fb.replace(\"/pages\",\"\");\r\n                fb = fb.replace(\"/\",\"\");\r\n            });\r\n\t\t\t\r\n\t\t\t$.each($h.find('a[href*=\"linkedin.com/\"]:lt(1)'),function(idx,item){\r\n                var liUrl = $(item).attr(\"href\");\r\n                liUrl = URL.parse(liUrl);\r\n                li = liUrl.pathname;\r\n            });\r\n\r\n            $.each($h.find('a[href*=\"feeds.feedburner.com\"]:lt(1),a:contains(\"rss\")'),function(idx,item){\r\n                var rssUrl = $(item).attr(\"href\");\r\n                rss = rssUrl;\r\n            });\r\n\r\n\t\t\t$.each($h.find('a[href*=\"pinterest.com/\"]:not([href*=\"pin/create\"])'),function(idx,item){\r\n                var pinUrl = $(item).attr(\"href\");\r\n                pinUrl = URL.parse(pinUrl);\r\n                pin = pinUrl.pathname;\r\n            });\r\n\t\t\t\r\n\t\t\t$.each($h.find('a[href*=\"youtube.com/user/\"]'),function(idx,item){\r\n                var ytUrl = $(item).attr(\"href\");\r\n                ytUrl = URL.parse(ytUrl);\r\n                yt = ytUrl.pathname;\r\n                yt = yt.replace(\"/user\",\"\");\r\n\t\t\t}); \r\n\r\n        }\r\n        \r\n        var retObj = {};\r\n        retObj.yt = yt;\r\n        retObj.li = li;\r\n        retObj.fb = fb;\r\n        retObj.tw = tw;\r\n        retObj.pin = pin;\r\n        retObj.rss = rss;\r\n        \r\n        return retObj;\r\n}\r\n\r\nvar loadShots = function(getUrl,cb){\r\n    request.get({url:conf.screenshots.apiUrl,json:true,qs:{url:getUrl,size:'large'}},function(e,r,b){\r\n        cb(e,r,b);\r\n    });\r\n};\r\n\r\nfunction doTweet(msg,screen_name,cb){\r\n    \r\n    if (1===1) {\r\n        \r\n        /*\r\n        var reqUrl = 'https://api.twitter.com/1.1/statuses/user_timeline.json?';\r\n        if (i<accounts.length) {\r\n            var oauth = \r\n                { consumer_key: conf.twit.consumerKey\r\n                , consumer_secret: conf.twit.consumerSecret\r\n                , token: \"480346094-HIZrfb9w9D48WGWK6Ib21MxdWzbduRrMWhAi5ZoB\"\r\n                , token_secret: \"D8iqNaFMnKeXnLhhQ9POebtiKgGOAmHAZE9qToSRSc\"\r\n            };\r\n\t    */\r\n\t\r\n        var status = msg;\r\n\t\tvar oauth = \r\n\t\t\t{ consumer_key: conf.twit.consumerKey\r\n            , consumer_secret: conf.twit.consumerSecret\r\n            , token: '480346094-HIZrfb9w9D48WGWK6Ib21MxdWzbduRrMWhAi5ZoB'\r\n            , token_secret: 'D8iqNaFMnKeXnLhhQ9POebtiKgGOAmHAZE9qToSRSc'\r\n            }\r\n        , url = 'https://api.twitter.com/1.1/statuses/update.json?'\r\n        , params = \r\n\t\t\t{ \r\n\t\t\t\t//status: req.body.status + \" via http://in1.com\"\r\n                status: status,\r\n                via: \"in1.com\"\r\n\t\t\t};\r\n\t\t\t\r\n\t\turl += require('querystring').stringify(params)\r\n\t\trequest.post({url:url, oauth:oauth, json:true}, function (e, r, body) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tconsole.log(\"twitter--------------\"+body);\r\n\t\t\tcb(e,body);\r\n\t\t})\r\n\t}\r\n    \r\n};"],[0,"\r\n"]],"start1":13121,"start2":13121,"length1":16224,"length2":18161}]],"length":31282,"saved":false}
{"ts":1377708263873,"patch":[[{"diffs":[[0,"\t});\r\n        \r\n"],[1,"        // tags - keywords\r\n"],[0,"        $.each($"]],"start1":24354,"start2":24354,"length1":32,"length2":60},{"diffs":[[0," });\r\n        \r\n"],[1,"        $.each($h.find('meta[name=keywords]'),function(idx,item){\r\n            tags.push($(item).attr(\"content\"));\r\n        });\r\n        \r\n        //\r\n"],[0,"        $.each($"]],"start1":24521,"start2":24521,"length1":32,"length2":183}]],"length":31461,"saved":false}
{"ts":1377708340707,"patch":[[{"diffs":[[0,"ad+\"</form>\");\r\n"],[1,"        $b = $(\"<form>\"+body+\"</form>\");\r\n"],[0,"        \r\n      "]],"start1":22352,"start2":22352,"length1":32,"length2":74}]],"length":31503,"saved":false}
{"ts":1377708382407,"patch":[[{"diffs":[[0,"ch($"],[-1,"h"],[1,"b"],[0,".find('"],[-1,"meta[name=keywords"],[1,"a[href*=tag"],[0,"]'),"]],"start1":24591,"start2":24591,"length1":34,"length2":27}]],"length":31496,"saved":false}
{"ts":1377708401349,"patch":[[{"diffs":[[0,"\r\n    var $h"],[1,",$b"],[0,";\r\n    \r\n   "]],"start1":22157,"start2":22157,"length1":24,"length2":27}]],"length":31499,"saved":false}
{"ts":1377708422892,"patch":[[{"diffs":[[0,"ush($(item)."],[-1,"attr(\"content\""],[1,"html("],[0,"));\r\n       "]],"start1":24660,"start2":24660,"length1":38,"length2":29}]],"length":31490,"saved":false}
{"ts":1377708455339,"patch":[[{"diffs":[[0,"a[href*="],[1,"\""],[0,"tag"],[1,"\""],[0,"]'),func"]],"start1":24606,"start2":24606,"length1":19,"length2":21}]],"length":31492,"saved":false}
{"ts":1377708729067,"patch":[[{"diffs":[[0,"            "],[-1,"tags.push("],[1,"var tagArr = "],[0,"$(item).attr"]],"start1":24510,"start2":24510,"length1":34,"length2":37},{"diffs":[[0,"ontent\")"],[-1,");"],[1,".split(\",\");\r\n            for (i in tagArr){\r\n                tags.push(tagArr[i]));\r\n            }\r\n            "],[0,"\r\n      "]],"start1":24550,"start2":24550,"length1":18,"length2":129}]],"length":31606,"saved":false}
{"ts":1377708735481,"patch":[[{"diffs":[[0,"h(tagArr[i])"],[-1,")"],[0,";\r\n         "]],"start1":24628,"start2":24628,"length1":25,"length2":24}]],"length":31605,"saved":false}
{"ts":1377708741404,"patch":[[{"diffs":[[0,"   for ("],[1,"var "],[0,"i in tag"]],"start1":24581,"start2":24581,"length1":16,"length2":20}]],"length":31609,"saved":false}
{"ts":1377708786342,"patch":[[{"diffs":[[0,"gs.push("],[1,"$.trim("],[0,"tagArr[i"]],"start1":24626,"start2":24626,"length1":16,"length2":23},{"diffs":[[0,"gArr[i])"],[1,")"],[0,";\r\n     "]],"start1":24643,"start2":24643,"length1":16,"length2":17}]],"length":31617,"saved":false}
{"ts":1377708796272,"patch":[[{"diffs":[[0,"      //"],[1," rss"],[0,"\r\n      "]],"start1":24834,"start2":24834,"length1":16,"length2":20}]],"length":31621,"saved":false}
{"ts":1377708798350,"patch":[[{"diffs":[[0," });\r\n        \r\n"],[1,"        \r\n"],[0,"        // rss\r\n"]],"start1":24816,"start2":24816,"length1":32,"length2":42}]],"length":31631,"saved":false}
{"ts":1377708800344,"patch":[[{"diffs":[[0,"();\r\n\t\t});\r\n"],[1,"\t\t\r\n"],[0,"        \r\n  "]],"start1":24393,"start2":24393,"length1":24,"length2":28}]],"length":31635,"saved":false}
